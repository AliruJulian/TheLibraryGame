{"version":3,"sources":["webpack:///app.b90f4c24d266e725abef.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.js","webpack:///./src/app/app.component.js","webpack:///./src/app/components/subcomponents/htmleditor.component.js","webpack:///./src/app/services/libgame.service.js","webpack:///./src/app/components/subcomponents/selectquest.component.js","webpack:///./src/app/components/subcomponents/selecttask.component.js","webpack:///./src/app/components/subcomponents/uploadpicture.component.js","webpack:///./src/app/components/administration.component.js","webpack:///./src/app/components/badge.component.js","webpack:///./src/app/components/editbadge.component.js","webpack:///./src/app/components/editquest.component.js","webpack:///./src/app/components/edittask.component.js","webpack:///./src/app/components/legal.component.js","webpack:///./src/app/components/highscorelist.component.js","webpack:///./src/app/components/loggedcontent.component.js","webpack:///./src/app/components/quest.component.js","webpack:///./src/app/components/solvedoverlay.component.js","webpack:///./src/app/components/statistics.component.js","webpack:///./src/app/components/task.component.js","webpack:///./src/app/components/tasks.component.js","webpack:///./src/app/components/tasksearch.component.js","webpack:///./src/app/components/unloggedcontent.component.js","webpack:///./src/app/components/userprogress.component.js","webpack:///./src/app/components/usersettings.component.js","webpack:///./src/app/components/pipes/safehtml.pipe.js"],"names":["webpackJsonp","module","exports","__webpack_require__","platform_browser_dynamic_1","core_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","AppModule","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","platform_browser_1","forms_1","http_1","router_1","app_component_1","htmleditor_component_1","selectquest_component_1","selecttask_component_1","uploadpicture_component_1","administration_component_1","badge_component_1","editbadge_component_1","editquest_component_1","edittask_component_1","legal_component_1","highscorelist_component_1","loggedcontent_component_1","quest_component_1","solvedoverlay_component_1","statistics_component_1","task_component_1","tasks_component_1","tasksearch_component_1","unloggedcontent_component_1","userprogress_component_1","usersettings_component_1","safehtml_pipe_1","libgame_service_1","routes","path","redirectTo","pathMatch","component","UnloggedcontentComponent","LoggedcontentComponent","NgModule","imports","BrowserModule","FormsModule","HttpModule","RouterModule","forRoot","useHash","declarations","AppComponent","HTMLEditorComponent","SelectQuestComponent","SelectTaskComponent","UploadPictureComponent","AdministrationComponent","BadgeComponent","EditBadgeComponent","EditQuestComponent","EditTaskComponent","HighscorelistComponent","LegalComponent","QuestComponent","SolvedOverlayComponent","StatisticsComponent","TaskComponent","TasksComponent","TasksearchComponent","UserprogressComponent","UsersettingsComponent","SafeHtmlPipe","providers","LibgameService","bootstrap","router","Component","selector","template","Router","lService","htmlcontent","EventEmitter","reload","id","hasFocus","showInsertPicture","showInsertLink","tempPictureLink","tempPictureWidth","tempPictureHeight","tempPictureId","makeid","prototype","ngOnInit","_this","document","addEventListener","setInnerHTMLOfDiv","value","getElementById","setTimeout","innerHTML","ngOnChanges","changes","currentValue","updateValue","emit","$","html","trim","getPictures","pictures","focusFunction","makeUnderline","e","execCommand","preventDefault","stopPropagation","focus","makeBold","makeItalic","makeLineThrough","makeAlignLeft","makeAlignRight","makeAlignCenter","makeInsertPicture","pictureInsertID","finalizeInsertPicture","find","attr","css","getPictureLink","abortInsertPicture","remove","text","possible","charAt","Math","floor","random","Input","Output","Observable_1","_http","user","linkToWebservice","user$","Observable","observer","_userObserver","share","universalcontent$","_universalcontentObserver","specificcontent$","_specificcontentObserver","_dataStore","user_id","universalcontent","specificcontent","loadUser","sendString","headers","Headers","append","options","RequestOptions","next","post","map","response","json","subscribe","data","console","log","isEmptyObject","error","loginUser","username","pwd","loginAsAnonym","logoutUser","deleteUser","updatePassword","old_password","new_password","checkUsername","checkEmail","email","registerUser","password","password_repeat","faculty_id","sendNewPassword","setNewAdmin","newadminid","removeAdmin","sendEmailMessageToAllUsers","headline","content","loadUniversalContent","upsertGeneralContent","generalcontent","encodeURIComponent","JSON","stringify","loadSpecificContent","dt","checkLocation","lati","long","location_id","upsertTask","taskdata","deleteTask","task_id","solveTask","solvedata","getSolveLinkForLocationTask","upsertBadge","badgedata","deleteBadge","badge_id","upsertQuest","questdata","deleteQuest","quest_id","upsertLocation","locationdata","deleteLocation","getLocationFoundLink","resetFacultyScore","uploadPicture","picturedata","picturefiles","url","params","t","picturename","Promise","resolve","reject","formData","FormData","xhr","XMLHttpRequest","name","onreadystatechange","readyState","status","parse","open","send","getFormatedDate","str_datetime","replace","tempDate","Date","split","date","getDate","month","getMonth","getFullYear","picture_id","getLabelsAndDataForChart","jsonStringProgress","days","months","years","flag","returnObject","progressObject","nowTime","tempDateForCalculatePushMonths","setDate","pushMonths","tempDateForCalculatePushYears","setMonth","pushYears","keys","getTime","keyLabelsAndTs","tempData","parseInt","first","maxDataBefore","tempCountData","isNaN","Injectable","Http","shown","questarray","initialselectedquestarray","selectedquestarray","slice","toggleChosenQuest","indexOf","splice","push","finalizeSelection","finalizeSelectionAbort","getNameOfQuestFromQuestId","chooseablequestarray","isUndefined","de_DE","questname","taskarray","initialselectedtaskarray","selectedtaskarray","toggleChosenTask","getNameOfTaskFromTaskId","chooseabletaskarray","taskname","successfullupload","requestPictureFileChangeEvent","fileInput","pictureFiles","files","window","alert","then","result","abortUploadPicture","loading_specificcontent","user_activity_task_active","upsertNewTaskSuccessful","upsertNewBadgeSuccessful","upsertNewQuestSuccessful","upsertNewLocationSuccessful","upsertGeneralContentSuccessful","addedNewAdminSuccessful","sendEmailToAllUsersSuccessful","loading_sendemails","show_c_solved_tasks_chart","show_cm_general","show_cm_tasks","show_cm_badges","show_cm_quests","show_cm_locations","show_cm_reset_score","show_um_add_admins","show_um_send_mail","addAdminId","send_email","new_task","new_task_template","task_type_id","json_task_data","question","a1","a2","a3","a4","description_long","solved_description","is_task_active","score_rule","new_badge","new_badge_template","badgename","is_active","json_task_ids","new_quest","new_quest_template","json_pre_quest_ids","json_quest_task_ids","is_starter_quest","new_location","new_location_template","locationname","geo_lati","geo_long","geo_radius","t_task_key","pre_tasks","t_quest_key","t_badge_key","t_location_key","updateChartUserActivityTask","getAdmins","getAllUsers","getSuperadmins","getTasks","getQuests","getBadges","getLocations","getTaskTypes","getCountActiveQuests","getCountActiveTasks","getCountActiveBadges","getCountUsers","getCountUsersActiveLast2Days","getCountUsersCompletedAllQuests","getCountUsersCompletedAllBadges","getStatistics","getUniversalContentPictures","getUniversalContent","content_mapper","t_content","filter","x","toLowerCase","setUniversalContent","initChartWithDelay","m","y","init","ObjectForCalculation","tempObject","ts","CalculatedChartDataActivityTask","lineChartData_canvas_user_activity_task","labels","el","datasets","strokeColor","pointColor","pointStrokeColor","pointHighlightStroke","biggestValue","key_1","settingsObj_canvas_user_activity_task","animation","responsive","scaleFontColor","bezierCurve","datasetFill","scaleOverride","scaleSteps","scaleStepWidth","ceil","scaleStartValue","scaleLineColor","scaleGridLineColor","graphTitleFontSize","graphTitleFontColor","t_canvas","updateChart","getContext","parent","width","Chart","Line","showCanvasForTask","qrcode","height","background","fill","showCanvasForLocation","t_generalcontent","HOME_1","MAIN_PICTURE_ID","ROOT_LOCATION","START","TOU","PP","IMPRESSUM","isNumeric","loc","isbn","s1","s2","s3","answer","upsert_successful","confirm","deleteAdmin","setTaskActiveInactive","setTaskDeleteTask","setBadgeActiveInactive","setBadgeDeleteBadge","setQuestActiveInactive","setQuestDeleteQuest","setLocationDeleteLocation","parseFloat","sendToConsole","propName","changedProp","from","previousValue","to","getBadgeData","getUserBadge","completed","getProgressTasks","navigateToQuest","navigate","navigateToTask","navigateToBadge","badgedataoutput","updateBadgeData","questdataoutput","LevelsLength","changeQuestTaskLevelLength","event","t_value","t_diff","updateQuestData","taskdataoutput","changeTaskType","updateTaskData","getTOU","getPP","getIMPRESSUM","getLegalcontent","legalcomponent","number_of_shown_users_per_page","getRankedHighscoreListArray","getCurrentShownUsers","highscorepage","getArrayTotalNumberOfHighscorePages","t_return","route","loading_user","loading_universalcontent","showncomponent","timeframeForCheckingLocation","intervalTimerManageCheckLocation","solvedOverlayArray","toggled","additionalinformation","locationfound_id","reg_username","reg_username_valid","reg_username_exists","reg_email","reg_email_valid","reg_email_exists","reg_password","reg_password_valid","reg_password_repeat","reg_password_repeat_valid","reg_faculty_id","sub","scroll","animate","scrollTop","offset","show","navigateToUnloggedComponent","manageCheckLocation","clearInterval","setInterval","getUniversalContentFacultyArray","getUniversalContentAnonymousUserPhrase","getUniversalContentMainPictureId","isUserAnonymousUser","isUserAdminUser","user_type_id","navigateToComponent","componentname","navigateToLegal","legalcomponentname","ngOnDestroy","unsubscribe","navigator","geolocation","getCurrentPosition","p","coords","latitude","longitude","message","enableHighAccuracy","maximumAge","type","t_solved_quests","t_solved_badges","t_key_quests","t_key_badges","faculty_score_rule","solved_quests","solved_badges","removeFromSolvedOverlayArray","index","registerLoggedUser","pattern","match","prop","location","keyupRegisterUsername","username_exists","keyupRegisterEmail","email_exists","keyupRegisterPassword","keyupRegisterPasswordRepeat","ActivatedRoute","getQuestData","getProgressPreQuests","getUserQuest","ts_quest_completed","getProgressTasksArrayForView","t_returnarray","getTaskArrayForProgressTasksArrayKey","taskarraykey","t_taskarray","isQuestCompleted","getNumberOfCompletedLevels","t_completedlevels","closeOverlay","stars","opacity","animateStar","getType","solveddata","getName","getSolvedDescription","getScoreRule","getFacultyScoreRule","getSolvedQuests","getSolvedBadges","starindex","randomNumber1","s_index","user_score_period_active","user_task_period_active","initFacultyChart","updateChartUserScore","updateChartUserTasks","getLastCompletedQuests","getLastCompletedBadges","getLastCompletedTasks","getFaculties","getBestUsers","getBestUsersForFaculty","getCountBadges","getCountQuests","CalculatedChartDataScore","lineChartData_canvas_user_score","settingsObj_canvas_user_score","graphTitle","CalculatedChartDataTasks","lineChartData_canvas_user_tasks","settingsObj_canvas_user_tasks","t_facultyname_array","t_facultyscore_array","max_value_faculty_score","_i","_a","t_faculty","facultyname","faculty_score","lineChartData_canvas_faculties","fillColor","settingsObj_canvas_faculties","inGraphDataShow","inGraphDataXPosition","inGraphDataAlign","inGraphDataFontColor","HorizontalBar","shuffleArrayTaskType1","shuffleArrayTaskType4","successfullSolved","notSuccessfullSolved","shuffle","getTaskData","initBarcodeReader","solveTaskType6","getTaskBlockedData","getUserTaskScore","score","needed_value","getQuestsContainingTaskId","getIsTaskBlocked","ts_blocked","getIsTaskSolvedByUser","getIsTaskActive","solveTaskOverall","task_solved","t_key_tasks","getTaskType1Answer","language","solveTaskType1","chosenanswer","solveTaskType2","solveTaskType3","takePicture","querySelector","showPicture","createElement","Result","canvas","ctx","JOB","Init","SetImageCallback","tempArray","Value","join","PostOrientation","OrientationCallback","getImageData","putImageData","SwitchLocalizationFeedback","SetLocalizationCallback","beginPath","lineWIdth","strokeStyle","rect","stroke","onchange","file","URL","webkitURL","onload","DecodeImage","revokeObjectURL","src","createObjectURL","fileReader","FileReader","readAsDataURL","getTaskType4Answer","exchangeShuffleArrayPosition","id1","id2","t_value_id1","solveTaskType4","1","2","3","getTaskType5TextWithoutBlankStatement","solveTaskType5","val","a","j","getUniversalContentHome1Description","tasksAvailable","getActiveQuests","getActiveTasks","isStepCompleted","tasks","hasQuestStepAnUncompletedPrestep","queststeps","step","clickHome1Button","fadeToggle","initMap","getLocationsWhereUserCanFindTaskOrQuest","getAllLocations","OpenLayers","Lang","setCode","Map","projection","Projection","displayProjection","controls","Control","Navigation","PanZoomBar","maxExtent","Bounds","numZoomLevels","maxResolution","units","layer_mapnik","Layer","OSM","Mapnik","layer_markers","Markers","visibility","displayInLayerSwitcher","layer_vector","Vector","addLayers","t_locations","addMarker","lon","lat","zoom","t_root_location","jumpTo","geolocate","Geolocate","bind","geolocationOptions","timeout","addControl","events","register","removeAllFeatures","circle","Feature","Geometry","Polygon","createRegularPolygon","Point","point","position","accuracy","fillOpacity","strokeWidth","addFeatures","graphicName","pointRadius","activate","locate","Lon2Merc","Lat2Merc","setCenter","LonLat","PI","tan","layer","ll","marker","Marker","getCurrentLocation","new_password_email","hide","test","getUniversalContentStart","open_tasks_type_key","getCompletedQuests","getBadgesWithProgressStatement","getUserTaskInfoArray","isTaskSolved","getMinScoreForTaskInUserTaskInfo","t_minscore","getMaxScoreForTaskInUserTaskInfo","t_maxscore","error_setting_new_password","show_update_password_button","ready","keyup","setNewPassword","sanitized","transform","bypassSecurityTrustHtml","Pipe","DomSanitizer"],"mappings":"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","file":"app.b90f4c24d266e725abef.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\n\tvar core_1 = __webpack_require__(3);\n\tvar app_module_1 = __webpack_require__(23);\n\tcore_1.enableProdMode();\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar forms_1 = __webpack_require__(24);\n\tvar http_1 = __webpack_require__(28);\n\tvar router_1 = __webpack_require__(29);\n\tvar app_component_1 = __webpack_require__(59);\n\tvar htmleditor_component_1 = __webpack_require__(60);\n\tvar selectquest_component_1 = __webpack_require__(67);\n\tvar selecttask_component_1 = __webpack_require__(68);\n\tvar uploadpicture_component_1 = __webpack_require__(69);\n\tvar administration_component_1 = __webpack_require__(70);\n\tvar badge_component_1 = __webpack_require__(71);\n\tvar editbadge_component_1 = __webpack_require__(72);\n\tvar editquest_component_1 = __webpack_require__(73);\n\tvar edittask_component_1 = __webpack_require__(74);\n\tvar legal_component_1 = __webpack_require__(75);\n\tvar highscorelist_component_1 = __webpack_require__(76);\n\tvar loggedcontent_component_1 = __webpack_require__(77);\n\tvar quest_component_1 = __webpack_require__(78);\n\tvar solvedoverlay_component_1 = __webpack_require__(79);\n\tvar statistics_component_1 = __webpack_require__(80);\n\tvar task_component_1 = __webpack_require__(81);\n\tvar tasks_component_1 = __webpack_require__(82);\n\tvar tasksearch_component_1 = __webpack_require__(83);\n\tvar unloggedcontent_component_1 = __webpack_require__(84);\n\tvar userprogress_component_1 = __webpack_require__(85);\n\tvar usersettings_component_1 = __webpack_require__(86);\n\tvar safehtml_pipe_1 = __webpack_require__(87);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar routes = [\n\t    {\n\t        path: '',\n\t        redirectTo: '/l/tasks',\n\t        pathMatch: 'full'\n\t    },\n\t    {\n\t        path: 'u/:component',\n\t        component: unloggedcontent_component_1.UnloggedcontentComponent\n\t    },\n\t    {\n\t        path: 'u/:component/:id',\n\t        component: unloggedcontent_component_1.UnloggedcontentComponent\n\t    },\n\t    {\n\t        path: 'l/home',\n\t        redirectTo: '/l/tasks',\n\t        pathMatch: 'full'\n\t    },\n\t    {\n\t        path: 'l/:component',\n\t        component: loggedcontent_component_1.LoggedcontentComponent\n\t    },\n\t    {\n\t        path: 'l/:component/:id',\n\t        component: loggedcontent_component_1.LoggedcontentComponent\n\t    },\n\t    {\n\t        path: 'l/:component/:id/:additionalinformation',\n\t        component: loggedcontent_component_1.LoggedcontentComponent\n\t    }\n\t];\n\tvar AppModule = (function () {\n\t    function AppModule() {\n\t    }\n\t    AppModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [\n\t                platform_browser_1.BrowserModule,\n\t                forms_1.FormsModule,\n\t                http_1.HttpModule,\n\t                router_1.RouterModule.forRoot(routes, { useHash: false })\n\t            ],\n\t            declarations: [\n\t                app_component_1.AppComponent,\n\t                htmleditor_component_1.HTMLEditorComponent,\n\t                selectquest_component_1.SelectQuestComponent,\n\t                selecttask_component_1.SelectTaskComponent,\n\t                uploadpicture_component_1.UploadPictureComponent,\n\t                administration_component_1.AdministrationComponent,\n\t                badge_component_1.BadgeComponent,\n\t                editbadge_component_1.EditBadgeComponent,\n\t                editquest_component_1.EditQuestComponent,\n\t                edittask_component_1.EditTaskComponent,\n\t                highscorelist_component_1.HighscorelistComponent,\n\t                legal_component_1.LegalComponent,\n\t                loggedcontent_component_1.LoggedcontentComponent,\n\t                quest_component_1.QuestComponent,\n\t                solvedoverlay_component_1.SolvedOverlayComponent,\n\t                statistics_component_1.StatisticsComponent,\n\t                task_component_1.TaskComponent,\n\t                tasks_component_1.TasksComponent,\n\t                tasksearch_component_1.TasksearchComponent,\n\t                unloggedcontent_component_1.UnloggedcontentComponent,\n\t                userprogress_component_1.UserprogressComponent,\n\t                usersettings_component_1.UsersettingsComponent,\n\t                safehtml_pipe_1.SafeHtmlPipe\n\t            ],\n\t            providers: [\n\t                libgame_service_1.LibgameService\n\t            ],\n\t            bootstrap: [app_component_1.AppComponent]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppModule);\n\t    return AppModule;\n\t}());\n\texports.AppModule = AppModule;\n\t//# sourceMappingURL=app.module.js.map\n\n/***/ },\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar AppComponent = (function () {\n\t    function AppComponent(router) {\n\t        this.router = router;\n\t    }\n\t    AppComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'lib-app',\n\t            template: \"\\n\\n    <!-- Router -->\\n    <router-outlet></router-outlet>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router])\n\t    ], AppComponent);\n\t    return AppComponent;\n\t}());\n\texports.AppComponent = AppComponent;\n\t//# sourceMappingURL=app.component.js.map\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar HTMLEditorComponent = (function () {\n\t    function HTMLEditorComponent(lService) {\n\t        this.lService = lService;\n\t        this.htmlcontent = new core_1.EventEmitter();\n\t        this.reload = new core_1.EventEmitter();\n\t        this.id = \"\";\n\t        this.hasFocus = false;\n\t        this.showInsertPicture = false;\n\t        this.showInsertLink = false;\n\t        this.tempPictureLink = \"\";\n\t        this.tempPictureWidth = \"\";\n\t        this.tempPictureHeight = \"\";\n\t        this.tempPictureId = -1;\n\t        this.id = this.makeid();\n\t    }\n\t    HTMLEditorComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        document.addEventListener('mousedown', function () {\n\t            _this.hasFocus = false;\n\t        }, false);\n\t        this.setInnerHTMLOfDiv(this.value);\n\t    };\n\t    HTMLEditorComponent.prototype.setInnerHTMLOfDiv = function (value) {\n\t        var _this = this;\n\t        if (typeof document.getElementById(this.id) === 'undefined' || document.getElementById(this.id) == null || typeof this.value === 'undefined') {\n\t            setTimeout(function () { _this.setInnerHTMLOfDiv(value); }, 10);\n\t            return;\n\t        }\n\t        if (this.value.length != document.getElementById(this.id).innerHTML.length)\n\t            document.getElementById(this.id).innerHTML = value;\n\t    };\n\t    HTMLEditorComponent.prototype.ngOnChanges = function (changes) {\n\t        if (typeof changes[\"value\"] !== 'undefined')\n\t            this.setInnerHTMLOfDiv(changes[\"value\"].currentValue);\n\t    };\n\t    HTMLEditorComponent.prototype.updateValue = function () {\n\t        this.htmlcontent.emit($('#' + this.id).html().trim());\n\t    };\n\t    HTMLEditorComponent.prototype.getPictures = function () {\n\t        return typeof this.pictures !== 'undefined' ? this.pictures : [];\n\t    };\n\t    //Overlay Insert Picture\n\t    //Overlay Insert Link\n\t    //Editor Functionality\n\t    HTMLEditorComponent.prototype.focusFunction = function () {\n\t        this.hasFocus = true;\n\t    };\n\t    HTMLEditorComponent.prototype.makeUnderline = function (e) {\n\t        var _this = this;\n\t        document.execCommand('underline');\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t        return false;\n\t    };\n\t    HTMLEditorComponent.prototype.makeBold = function (e) {\n\t        var _this = this;\n\t        document.execCommand('bold');\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t    };\n\t    HTMLEditorComponent.prototype.makeItalic = function (e) {\n\t        var _this = this;\n\t        document.execCommand('italic');\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t    };\n\t    HTMLEditorComponent.prototype.makeLineThrough = function (e) {\n\t        var _this = this;\n\t        document.execCommand('strikethrough');\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t    };\n\t    HTMLEditorComponent.prototype.makeAlignLeft = function (e) {\n\t        var _this = this;\n\t        document.execCommand('justifyLeft');\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t    };\n\t    HTMLEditorComponent.prototype.makeAlignRight = function (e) {\n\t        var _this = this;\n\t        document.execCommand('justifyRight');\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t    };\n\t    HTMLEditorComponent.prototype.makeAlignCenter = function (e) {\n\t        var _this = this;\n\t        document.execCommand('justifyCenter');\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t    };\n\t    HTMLEditorComponent.prototype.makeInsertPicture = function (e) {\n\t        var _this = this;\n\t        this.showInsertPicture = true;\n\t        this.pictureInsertID = this.makeid();\n\t        document.execCommand(\"insertHTML\", false, \"<img id='\" + this.pictureInsertID + \"' src='' />\");\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t        this.hasFocus = true;\n\t        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n\t    };\n\t    HTMLEditorComponent.prototype.finalizeInsertPicture = function () {\n\t        this.showInsertPicture = false;\n\t        if (this.tempPictureLink.length != 0) {\n\t            $('#' + this.id).find('#' + this.pictureInsertID).attr('src', this.tempPictureLink);\n\t            $('#' + this.id).find('#' + this.pictureInsertID).css('width', this.tempPictureWidth + \"px\");\n\t            $('#' + this.id).find('#' + this.pictureInsertID).css('height', this.tempPictureHeight + \"px\");\n\t        }\n\t        else if (this.tempPictureId != -1) {\n\t            $('#' + this.id).find('#' + this.pictureInsertID).attr('src', this.lService.getPictureLink(this.tempPictureId));\n\t            $('#' + this.id).find('#' + this.pictureInsertID).css('width', this.tempPictureWidth + \"px\");\n\t            $('#' + this.id).find('#' + this.pictureInsertID).css('height', this.tempPictureHeight + \"px\");\n\t        }\n\t        this.tempPictureLink = \"\";\n\t        this.tempPictureId = -1;\n\t        this.tempPictureWidth = \"\";\n\t        this.tempPictureHeight = \"\";\n\t    };\n\t    HTMLEditorComponent.prototype.abortInsertPicture = function () {\n\t        this.showInsertPicture = false;\n\t        $('#' + this.id).find('#' + this.pictureInsertID).remove();\n\t    };\n\t    //Helper\n\t    HTMLEditorComponent.prototype.makeid = function () {\n\t        var text = \"\";\n\t        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\t        for (var i = 0; i < 5; i++)\n\t            text += possible.charAt(Math.floor(Math.random() * possible.length));\n\t        return text;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], HTMLEditorComponent.prototype, \"value\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], HTMLEditorComponent.prototype, \"pictures\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], HTMLEditorComponent.prototype, \"htmlcontent\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], HTMLEditorComponent.prototype, \"reload\", void 0);\n\t    HTMLEditorComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'htmleditor-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n\\n    <div class=\\\"editor\\\" [class.editor-hasfocus]=\\\"hasFocus\\\" (click)=\\\"$event.stopPropagation();\\\" (mousedown)=\\\"$event.stopPropagation();\\\" (focusout)=\\\"updateValue()\\\" (mouseleave)=\\\"updateValue();hasFocus = false;\\\">\\n      <div *ngIf=\\\"hasFocus\\\" class=\\\"editor-head\\\" style=\\\"width:100%;\\\">\\n        <button (click)=\\\"makeUnderline($event);\\\" class=\\\"button-editor\\\" style=\\\"text-decoration:underline;width:35px;\\\">U</button>\\n        <button (click)=\\\"makeBold($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\">B</button>\\n        <button (click)=\\\"makeItalic($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\">I</button>\\n        <button (click)=\\\"makeLineThrough($event);\\\" class=\\\"button-editor\\\" style=\\\"text-decoration:line-through;width:35px;\\\">S</button>\\n\\n        <button (click)=\\\"makeAlignLeft($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;margin-left:10px;\\\"><i class=\\\"fa fa-align-left\\\" style=\\\"margin: 0;\\\"></i></button>\\n        <button (click)=\\\"makeAlignCenter($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\"><i class=\\\"fa fa-align-center\\\" style=\\\"margin: 0;\\\"></i></button>\\n        <button (click)=\\\"makeAlignRight($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\"><i class=\\\"fa fa-align-right\\\" style=\\\"margin: 0;\\\"></i></button>\\n\\n        <button (click)=\\\"makeInsertPicture($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;margin-left:10px;\\\"><i class=\\\"fa fa-file-image-o\\\" style=\\\"margin: 0;\\\"></i></button>\\n\\n\\n      </div>\\n      <div contenteditable=\\\"true\\\" [id]=\\\"id\\\" (focus)=\\\"focusFunction()\\\" class=\\\"editor-body\\\" style=\\\"width:100%;height:auto;min-height:200px;\\\">\\n\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"showInsertPicture\\\" (click)=\\\"$event.stopPropagation();\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:1000000;margin:0;\\\">\\n      <div style=\\\"position:relative;margin-left:auto;margin-right:auto;top:5%;background:white;border:solid 1px gray;color:black;width:90%;max-width:400px;height:auto;padding:10px;\\\">\\n        <p style=\\\"width:100%;text-align:center;\\\">Gib entweder einen Link ein oder w\\u00E4hle ein Bild aus der Datenbank aus</p>\\n        <hr class=\\\"hrForAdministration\\\">\\n\\n        <label [hidden]=\\\"tempPictureId != -1\\\" style=\\\"width:100%;text-align:center;\\\">Link</label>\\n        <br [hidden]=\\\"tempPictureId != -1\\\">\\n        <input [hidden]=\\\"tempPictureId != -1\\\" [(ngModel)]=\\\"tempPictureLink\\\" type=\\\"text\\\" placeholder=\\\"Link\\\" style=\\\"width:100%;\\\"/>\\n        <br [hidden]=\\\"tempPictureId != -1\\\">\\n\\n        <hr [hidden]=\\\"tempPictureLink.length != 0 || tempPictureId != -1\\\" class=\\\"hrForAdministration\\\">\\n\\n        <label [hidden]=\\\"tempPictureLink.length != 0\\\" style=\\\"width:100%;text-align:center;\\\">Bild aus der Datenbank</label>\\n        <br [hidden]=\\\"tempPictureLink.length != 0\\\">\\n        <select [hidden]=\\\"tempPictureLink.length != 0\\\" [(ngModel)]=\\\"tempPictureId\\\"  style=\\\"width:100%;\\\">\\n          <option value='-1' selected=\\\"selected\\\">-- None --</option>\\n          <option *ngFor=\\\"let t_picture of getPictures();\\\" value='{{t_picture.picture_id}}'>-- {{t_picture.picturename}} --</option>\\n        </select>\\n        <div [hidden]=\\\"tempPictureLink.length != 0\\\" style=\\\"text-align:right;\\\">\\n          <uploadpicture-component (reload)=\\\"reload.emit(true);\\\"></uploadpicture-component>\\n        </div>\\n\\n        <hr [hidden]=\\\"tempPictureLink.length == 0 && tempPictureId == -1\\\" class=\\\"hrForAdministration\\\">\\n\\n        <div *ngIf=\\\"tempPictureLink.length != 0 || tempPictureId != -1\\\">\\n          <label  style=\\\"width:100%;text-align:center;\\\">Breite [in Pixeln]<span style=\\\"color:#e9266d\\\">*</span></label>\\n          <br>\\n          <input [(ngModel)]=\\\"tempPictureWidth\\\" type=\\\"text\\\" placeholder=\\\"Breite [in Pixeln]\\\" style=\\\"width:100%;\\\"/>\\n          <br/>\\n          <label  style=\\\"width:100%;text-align:center;\\\">H\\u00F6he [in Pixeln]<span style=\\\"color:#e9266d\\\">*</span></label>\\n          <br>\\n          <input [(ngModel)]=\\\"tempPictureHeight\\\" type=\\\"text\\\" placeholder=\\\"H\\u00F6he [in Pixeln]\\\" style=\\\"width:100%;\\\"/>\\n        </div>\\n\\n        <button (click)=\\\"abortInsertPicture();\\\" class=\\\"button\\\" style=\\\"width: calc(35% - 10px);margin-top: 10px;\\\">Abbrechen</button>\\n        <button (click)=\\\"finalizeInsertPicture();\\\" [hidden]=\\\"(tempPictureLink.length == 0 && tempPictureId == -1) || tempPictureWidth.length==0 || tempPictureHeight.length==0\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Bild jetzt hinzuf\\u00FCgen!</button>\\n      </div>\\n    </div>\\n\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [libgame_service_1.LibgameService])\n\t    ], HTMLEditorComponent);\n\t    return HTMLEditorComponent;\n\t}());\n\texports.HTMLEditorComponent = HTMLEditorComponent;\n\t//# sourceMappingURL=htmleditor.component.js.map\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar http_1 = __webpack_require__(28);\n\tvar core_1 = __webpack_require__(3);\n\tvar Observable_1 = __webpack_require__(5);\n\t__webpack_require__(62);\n\t__webpack_require__(66);\n\tvar LibgameService = (function () {\n\t    function LibgameService(_http) {\n\t        var _this = this;\n\t        this._http = _http;\n\t        this.user = {};\n\t        this.linkToWebservice = \"./webservice/webservice.php\";\n\t        this.user$ = new Observable_1.Observable(function (observer) { return _this._userObserver = observer; }).share();\n\t        this.universalcontent$ = new Observable_1.Observable(function (observer) { return _this._universalcontentObserver = observer; }).share();\n\t        this.specificcontent$ = new Observable_1.Observable(function (observer) { return _this._specificcontentObserver = observer; }).share();\n\t        this._dataStore = {\n\t            user_id: -1,\n\t            user: {},\n\t            universalcontent: {},\n\t            specificcontent: {}\n\t        };\n\t    }\n\t    LibgameService.prototype.ngOnInit = function () {\n\t    };\n\t    //User\n\t    LibgameService.prototype.loadUser = function () {\n\t        var _this = this;\n\t        var sendString = \"t=get&dt=user\";\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        if (this._dataStore.user_id != -1) {\n\t            this._userObserver.next(this._dataStore.user);\n\t        }\n\t        this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); }).subscribe(function (data) {\n\t            console.log(data);\n\t            _this._dataStore.user = {};\n\t            if (!$.isEmptyObject(data.data)) {\n\t                _this._dataStore.user = data.data;\n\t                _this._dataStore.user_id = data.data[\"user_id\"];\n\t            }\n\t            else {\n\t                _this._dataStore.user_id = -1;\n\t            }\n\t            _this._userObserver.next(_this._dataStore.user);\n\t        }, function (error) { console.error('Could not load user.'); });\n\t    };\n\t    LibgameService.prototype.loginUser = function (username, pwd) {\n\t        var sendString = \"t=login&username=\" + username + \"&pwd=\" + pwd;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.loginAsAnonym = function () {\n\t        var sendString = \"t=loginanonym\";\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.logoutUser = function () {\n\t        var sendString = \"t=logout\";\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.deleteUser = function () {\n\t        var sendString = \"t=set&dt=deleteuser\";\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.updatePassword = function (old_password, new_password) {\n\t        var sendString = \"t=set&dt=password&new_password=\" + new_password + \"&old_password=\" + old_password;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.checkUsername = function (username) {\n\t        var sendString = \"t=get&dt=checkusername&username=\" + username;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.checkEmail = function (email) {\n\t        var sendString = \"t=get&dt=checkemail&email=\" + email;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.registerUser = function (username, email, password, password_repeat, faculty_id) {\n\t        var sendString = \"t=set&dt=new_user&username=\" + username + \"&email=\" + email + \"&password=\" + password + \"&password_repeat=\" + password_repeat + \"&faculty_id=\" + faculty_id;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.sendNewPassword = function (email) {\n\t        var sendString = \"t=fp&email=\" + email;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.setNewAdmin = function (newadminid) {\n\t        var sendString = \"t=set&dt=addadmin&user_id=\" + newadminid;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.removeAdmin = function (user_id) {\n\t        var sendString = \"t=set&dt=removeadmin&user_id=\" + user_id;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.sendEmailMessageToAllUsers = function (email) {\n\t        var sendString = \"t=set&dt=sendemail&headline=\" + email.headline + \"&content=\" + email.content;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    //Universal Content\n\t    LibgameService.prototype.loadUniversalContent = function () {\n\t        var _this = this;\n\t        var sendString = \"t=get&dt=content\";\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        if ($.isEmptyObject(this._dataStore.universalcontent) == false) {\n\t            this._universalcontentObserver.next(this._dataStore.universalcontent);\n\t        }\n\t        this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); }).subscribe(function (data) {\n\t            console.log(data);\n\t            _this._dataStore.universalcontent = {};\n\t            if (!$.isEmptyObject(data.data)) {\n\t                _this._dataStore.universalcontent = data.data;\n\t            }\n\t            _this._universalcontentObserver.next(_this._dataStore.universalcontent);\n\t        }, function (error) { console.error('Could not load universalcontent.'); });\n\t    };\n\t    LibgameService.prototype.upsertGeneralContent = function (generalcontent) {\n\t        var sendString = \"t=set&dt=generalcontent&generalcontent=\" + encodeURIComponent(JSON.stringify(generalcontent));\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    //Specific Content\n\t    LibgameService.prototype.loadSpecificContent = function (dt) {\n\t        var _this = this;\n\t        var sendString = \"t=get&dt=\" + dt;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); }).subscribe(function (data) {\n\t            console.log(data);\n\t            _this._dataStore.specificcontent = {};\n\t            if (!$.isEmptyObject(data.data)) {\n\t                _this._dataStore.specificcontent = data.data;\n\t            }\n\t            _this._specificcontentObserver.next(_this._dataStore.specificcontent);\n\t        }, function (error) { console.error('Could not load specificcontent.'); });\n\t    };\n\t    //Location\n\t    LibgameService.prototype.checkLocation = function (lati, long, location_id) {\n\t        var sendString = \"t=get&dt=checklocation&lati=\" + lati + \"&long=\" + long + \"&location_id=\" + location_id;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    //task\n\t    LibgameService.prototype.upsertTask = function (taskdata) {\n\t        var sendString = \"t=set&dt=task&taskdata=\" + encodeURIComponent(JSON.stringify(taskdata));\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.deleteTask = function (task_id) {\n\t        var sendString = \"t=set&dt=deletetask&task_id=\" + task_id;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.solveTask = function (solvedata, task_id) {\n\t        var sendString = \"t=set&dt=solvetask&task_id=\" + task_id + \"&solvedata=\" + encodeURIComponent(solvedata);\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.getSolveLinkForLocationTask = function (task_id, location_id) {\n\t        //TODO\n\t        return \"./l/task/\" + task_id + \"/\" + location_id;\n\t    };\n\t    //badge\n\t    LibgameService.prototype.upsertBadge = function (badgedata) {\n\t        var sendString = \"t=set&dt=badge&badgedata=\" + encodeURIComponent(JSON.stringify(badgedata));\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.deleteBadge = function (badge_id) {\n\t        var sendString = \"t=set&dt=deletebadge&badge_id=\" + badge_id;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    //quest\n\t    LibgameService.prototype.upsertQuest = function (questdata) {\n\t        var sendString = \"t=set&dt=quest&questdata=\" + encodeURIComponent(JSON.stringify(questdata));\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.deleteQuest = function (quest_id) {\n\t        var sendString = \"t=set&dt=deletequest&quest_id=\" + quest_id;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    //location\n\t    LibgameService.prototype.upsertLocation = function (locationdata) {\n\t        var sendString = \"t=set&dt=location&locationdata=\" + encodeURIComponent(JSON.stringify(locationdata));\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.deleteLocation = function (location_id) {\n\t        var sendString = \"t=set&dt=deletelocation&location_id=\" + location_id;\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    LibgameService.prototype.getLocationFoundLink = function (location_id) {\n\t        //TODO\n\t        return \"http://aliru.de\";\n\t    };\n\t    //resetFacultyScore\n\t    LibgameService.prototype.resetFacultyScore = function () {\n\t        var sendString = \"t=set&dt=resetfacultyscore\";\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\t        var options = new http_1.RequestOptions({ headers: headers });\n\t        return this._http.post(this.linkToWebservice, sendString, options)\n\t            .map(function (response) { return response.json(); });\n\t    };\n\t    //Picture\n\t    LibgameService.prototype.uploadPicture = function (picturedata, picturefiles) {\n\t        var url = this.linkToWebservice;\n\t        var params = {\n\t            t: \"set\",\n\t            dt: \"uploadpicture\",\n\t            picturename: picturedata.picturename\n\t        };\n\t        return new Promise(function (resolve, reject) {\n\t            var formData = new FormData();\n\t            var xhr = new XMLHttpRequest();\n\t            if (typeof picturefiles !== 'undefined' && picturefiles != null) {\n\t                for (var i = 0; i < picturefiles.length; i++) {\n\t                    formData.append(\"pictureupload\", picturefiles[i], picturefiles[i].name);\n\t                }\n\t            }\n\t            for (var key in params) {\n\t                if (typeof params[key] !== 'undefined' && typeof params[key] !== 'object')\n\t                    formData.append(key, params[key]);\n\t            }\n\t            xhr.onreadystatechange = function () {\n\t                if (xhr.readyState == 4) {\n\t                    if (xhr.status == 200) {\n\t                        resolve(JSON.parse(xhr.response));\n\t                    }\n\t                    else {\n\t                        reject(xhr.response);\n\t                    }\n\t                }\n\t            };\n\t            xhr.open(\"POST\", url, true);\n\t            xhr.send(formData);\n\t        });\n\t    };\n\t    //\n\t    //Helper Function\n\t    //\n\t    LibgameService.prototype.getFormatedDate = function (str_datetime) {\n\t        if (typeof str_datetime === 'undefined' || str_datetime == null || typeof str_datetime !== 'string' || str_datetime.length == 0) {\n\t            return '';\n\t        }\n\t        str_datetime = str_datetime.replace(\"-\", \"/\").replace(\"-\", \"/\");\n\t        var tempDate = new Date(str_datetime.split(\" \")[0]);\n\t        var date = tempDate.getDate() <= 9 ? \"0\" + tempDate.getDate() : tempDate.getDate();\n\t        var month = (tempDate.getMonth() + 1) <= 9 ? \"0\" + (tempDate.getMonth() + 1) : (tempDate.getMonth() + 1);\n\t        return date + \".\" + month + \".\" + tempDate.getFullYear();\n\t    };\n\t    LibgameService.prototype.getPictureLink = function (picture_id) {\n\t        return this.linkToWebservice + \"?t=get&dt=picture&picture_id=\" + picture_id;\n\t    };\n\t    LibgameService.prototype.getLabelsAndDataForChart = function (jsonStringProgress, days, months, years, flag) {\n\t        var returnObject = {};\n\t        returnObject[\"labels\"] = {};\n\t        returnObject[\"ts\"] = {};\n\t        returnObject[\"data\"] = {};\n\t        var progressObject = JSON.parse(jsonStringProgress);\n\t        //Aktuelles Datum ermitteln\n\t        var nowTime = new Date();\n\t        //Herausfinden wie viele months verschoben wird durch days\n\t        var tempDateForCalculatePushMonths = new Date(nowTime);\n\t        tempDateForCalculatePushMonths.setDate(tempDateForCalculatePushMonths.getDate() - days);\n\t        var pushMonths = nowTime.getMonth() - tempDateForCalculatePushMonths.getMonth();\n\t        var tempDateForCalculatePushYears = new Date(tempDateForCalculatePushMonths);\n\t        tempDateForCalculatePushYears.setMonth(tempDateForCalculatePushYears.getMonth() - months);\n\t        var pushYears = nowTime.getFullYear() - tempDateForCalculatePushYears.getFullYear();\n\t        //Berechnung von label_points\n\t        //Jahre\n\t        for (var i = years + pushYears; i > (0 + pushYears); i--) {\n\t            returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = '' + (new Date(nowTime.getFullYear() - i, 0, 1, 0, 0, 0)).getFullYear();\n\t            returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear() - i, 0, 1, 0, 0, 0)).getTime() / 1000;\n\t        }\n\t        //Months\n\t        for (var i = months + pushMonths; i > (0 + pushMonths); i--) {\n\t            returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = '' + ((new Date(nowTime.getFullYear(), nowTime.getMonth() - i, 1, 0, 0, 0)).getMonth() + 1) + '.' + (new Date(nowTime.getFullYear(), nowTime.getMonth() - i, 1, 0, 0, 0)).getFullYear();\n\t            returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear(), nowTime.getMonth() - i, 1, 0, 0, 0)).getTime() / 1000;\n\t        }\n\t        //Days\n\t        for (var i = days; i > 0; i--) {\n\t            returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = '' + ((new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i, 0, 0, 0)).getDate()) + '.' + ((new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i, 0, 0, 0)).getMonth() + 1) + '.' + (new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i, 0, 0, 0)).getFullYear();\n\t            returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i + 1, 0, 0, 0)).getTime() / 1000;\n\t        }\n\t        //Today\n\t        returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = 'Heute';\n\t        returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() + 1, 0, 0, 0)).getTime() / 1000;\n\t        //Calculate Data\n\t        if (flag == \"sum\") {\n\t            //Aufsummiert von beginn an\n\t            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n\t                //returnObject[\"data\"]\n\t                var tempData = 0;\n\t                for (var key in progressObject) {\n\t                    if (progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData + progressObject[key][\"data\"];\n\t                    }\n\t                }\n\t                returnObject[\"data\"][keyLabelsAndTs] = tempData;\n\t            }\n\t        }\n\t        else if (flag == \"normal_comb\") {\n\t            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n\t                var tempData = 0;\n\t                for (var key in progressObject) {\n\t                    if (progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n\t                    }\n\t                }\n\t                returnObject[\"data\"][keyLabelsAndTs] = tempData == 0 ? (keyLabelsAndTs == '0' ? 0 : returnObject[\"data\"][parseInt(keyLabelsAndTs) - 1]) : tempData;\n\t            }\n\t        }\n\t        else if (flag == \"normal\") {\n\t            var first = true;\n\t            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n\t                var tempData = 0;\n\t                for (var key in progressObject) {\n\t                    if (first == true && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n\t                    }\n\t                    else if (first == false && progressObject[key][\"ts\"] > returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n\t                    }\n\t                }\n\t                returnObject[\"data\"][keyLabelsAndTs] = tempData;\n\t                first = false;\n\t            }\n\t        }\n\t        else if (flag == \"diff\") {\n\t            var first = true;\n\t            var maxDataBefore = 0;\n\t            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n\t                var tempData = 0;\n\t                for (var key in progressObject) {\n\t                    if (first == true && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n\t                    }\n\t                    else if (first == false && progressObject[key][\"ts\"] > returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n\t                    }\n\t                }\n\t                returnObject[\"data\"][keyLabelsAndTs] = tempData - maxDataBefore >= 0 ? tempData - maxDataBefore : 0;\n\t                maxDataBefore = tempData > maxDataBefore ? tempData : maxDataBefore;\n\t                first = false;\n\t            }\n\t            if (typeof returnObject[\"data\"][0] !== 'undefined') {\n\t                delete returnObject[\"data\"][0];\n\t            }\n\t            if (typeof returnObject[\"ts\"][0] !== 'undefined') {\n\t                delete returnObject[\"ts\"][0];\n\t            }\n\t            if (typeof returnObject[\"labels\"][0] !== 'undefined') {\n\t                delete returnObject[\"labels\"][0];\n\t            }\n\t        }\n\t        else if (flag == \"avg\") {\n\t            //Durchschnitt im Zeitraum\n\t            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n\t                //returnObject[\"data\"]\n\t                var tempData = 0;\n\t                var tempCountData = 0;\n\t                for (var key in progressObject) {\n\t                    if (keyLabelsAndTs == '0' && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData + progressObject[key][\"data\"];\n\t                        tempCountData++;\n\t                    }\n\t                    else if (returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] < progressObject[key][\"ts\"] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData + progressObject[key][\"data\"];\n\t                        tempCountData++;\n\t                    }\n\t                }\n\t                returnObject[\"data\"][keyLabelsAndTs] = isNaN(tempData / tempCountData) ? 0 : tempData / tempCountData;\n\t            }\n\t        }\n\t        else if (flag == \"avg_comb\") {\n\t            //Durchschnitt im Zeitraum\n\t            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n\t                //returnObject[\"data\"]\n\t                var tempData = 0;\n\t                var tempCountData = 0;\n\t                for (var key in progressObject) {\n\t                    if (keyLabelsAndTs == '0' && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData + progressObject[key][\"data\"];\n\t                        tempCountData++;\n\t                    }\n\t                    else if (returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] < progressObject[key][\"ts\"] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n\t                        tempData = tempData + progressObject[key][\"data\"];\n\t                        tempCountData++;\n\t                    }\n\t                }\n\t                returnObject[\"data\"][keyLabelsAndTs] = isNaN(tempData / tempCountData) ? (keyLabelsAndTs == '0' ? 0 : returnObject[\"data\"][parseInt(keyLabelsAndTs) - 1]) : tempData / tempCountData;\n\t            }\n\t        }\n\t        return returnObject;\n\t    };\n\t    LibgameService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http])\n\t    ], LibgameService);\n\t    return LibgameService;\n\t}());\n\texports.LibgameService = LibgameService;\n\t//# sourceMappingURL=libgame.service.js.map\n\n/***/ },\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar SelectQuestComponent = (function () {\n\t    function SelectQuestComponent() {\n\t        this.shown = false;\n\t        this.questarray = new core_1.EventEmitter();\n\t    }\n\t    SelectQuestComponent.prototype.ngOnInit = function () {\n\t        this.initialselectedquestarray = this.selectedquestarray.slice(0);\n\t    };\n\t    SelectQuestComponent.prototype.toggleChosenQuest = function (quest_id) {\n\t        if (this.selectedquestarray.indexOf(quest_id) > -1) {\n\t            this.selectedquestarray.splice(this.selectedquestarray.indexOf(quest_id), 1);\n\t        }\n\t        else {\n\t            this.selectedquestarray.push(quest_id);\n\t        }\n\t    };\n\t    SelectQuestComponent.prototype.finalizeSelection = function () {\n\t        this.shown = false;\n\t        this.questarray.emit(this.selectedquestarray);\n\t    };\n\t    SelectQuestComponent.prototype.finalizeSelectionAbort = function () {\n\t        this.shown = false;\n\t        this.questarray.emit(this.initialselectedquestarray);\n\t    };\n\t    SelectQuestComponent.prototype.getNameOfQuestFromQuestId = function (quest_id) {\n\t        for (var key in this.chooseablequestarray) {\n\t            if (!this.isUndefined(this.chooseablequestarray[key].de_DE) &&\n\t                !this.isUndefined(this.chooseablequestarray[key].de_DE.questname) &&\n\t                !this.isUndefined(this.chooseablequestarray[key].quest_id) &&\n\t                this.chooseablequestarray[key].quest_id + \"\" == \"\" + quest_id)\n\t                return this.chooseablequestarray[key].de_DE.questname;\n\t        }\n\t        return \"\";\n\t    };\n\t    SelectQuestComponent.prototype.isUndefined = function (value) {\n\t        return typeof value === 'undefined';\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], SelectQuestComponent.prototype, \"chooseablequestarray\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], SelectQuestComponent.prototype, \"selectedquestarray\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], SelectQuestComponent.prototype, \"questarray\", void 0);\n\t    SelectQuestComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'selectquest-component',\n\t            template: \"\\n\\n\\n    <div *ngIf=\\\"shown\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:1000000;\\\">\\n      <div style=\\\"position:absolute;left:5%;top:5%;background:white;border:solid 1px gray;color:black;width:90%;height:90%;\\\">\\n        <p style=\\\"padding:10px;width:100%;text-align:center;\\\">W\\u00E4hle durch Anklicken die Quests aus</p>\\n\\n        <div style=\\\"height:calc(90% - 80px);margin:10px;padding:10px;overflow-y:scroll;\\\">\\n          <div *ngFor=\\\"let t_quest of chooseablequestarray\\\"\\n              (click)=\\\"toggleChosenQuest(t_quest.quest_id);\\\"\\n              [style.background]=\\\"selectedquestarray.indexOf(t_quest.quest_id) > -1?'rgb(230,230,230)':'rgb(255,255,255)'\\\"\\n              style=\\\"border:1px solid black;margin:2px 10px;cursor:pointer;\\\">\\n            <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">\\n              {{!isUndefined(t_quest.questname)? t_quest.questname : (!isUndefined(t_quest.de_DE) ? t_quest.de_DE.questname : '')}}\\n            </p>\\n          </div>\\n        </div>\\n\\n        <button (click)=\\\"finalizeSelection();\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Beende die Auswahl</button>\\n        <button (click)=\\\"finalizeSelectionAbort();\\\" class=\\\"button\\\" style=\\\"width:25%;margin-left:5%;\\\">Abbrechen</button>\\n      </div>\\n    </div>\\n\\n    <div>\\n      <div *ngFor=\\\"let t_quest_id of selectedquestarray\\\"\\n          style=\\\"border:1px solid black;margin:2px 0px;background:rgb(230,230,230);\\\">\\n        <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">{{getNameOfQuestFromQuestId(t_quest_id)}}</p>\\n      </div>\\n    </div>\\n\\n    <button class=\\\"button\\\" (click)=\\\"shown=true;\\\" style=\\\"width:initial;\\\">\\n      Hinzuf\\u00FCgen/Entfernen von Vorquests\\n    </button>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], SelectQuestComponent);\n\t    return SelectQuestComponent;\n\t}());\n\texports.SelectQuestComponent = SelectQuestComponent;\n\t//# sourceMappingURL=selectquest.component.js.map\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar SelectTaskComponent = (function () {\n\t    function SelectTaskComponent() {\n\t        this.shown = false;\n\t        this.taskarray = new core_1.EventEmitter();\n\t    }\n\t    SelectTaskComponent.prototype.ngOnInit = function () {\n\t        this.initialselectedtaskarray = this.selectedtaskarray.slice(0);\n\t    };\n\t    SelectTaskComponent.prototype.toggleChosenTask = function (task_id) {\n\t        if (this.selectedtaskarray.indexOf(task_id) > -1) {\n\t            this.selectedtaskarray.splice(this.selectedtaskarray.indexOf(task_id), 1);\n\t        }\n\t        else {\n\t            this.selectedtaskarray.push(task_id);\n\t        }\n\t    };\n\t    SelectTaskComponent.prototype.finalizeSelection = function () {\n\t        this.shown = false;\n\t        this.taskarray.emit(this.selectedtaskarray);\n\t    };\n\t    SelectTaskComponent.prototype.finalizeSelectionAbort = function () {\n\t        this.shown = false;\n\t        this.taskarray.emit(this.initialselectedtaskarray);\n\t    };\n\t    SelectTaskComponent.prototype.getNameOfTaskFromTaskId = function (task_id) {\n\t        for (var key in this.chooseabletaskarray) {\n\t            if (!this.isUndefined(this.chooseabletaskarray[key].de_DE) &&\n\t                !this.isUndefined(this.chooseabletaskarray[key].de_DE.taskname) &&\n\t                !this.isUndefined(this.chooseabletaskarray[key].task_id) &&\n\t                this.chooseabletaskarray[key].task_id + \"\" == \"\" + task_id)\n\t                return this.chooseabletaskarray[key].de_DE.taskname;\n\t        }\n\t        return \"\";\n\t    };\n\t    SelectTaskComponent.prototype.isUndefined = function (value) {\n\t        return typeof value === 'undefined';\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], SelectTaskComponent.prototype, \"chooseabletaskarray\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], SelectTaskComponent.prototype, \"selectedtaskarray\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], SelectTaskComponent.prototype, \"taskarray\", void 0);\n\t    SelectTaskComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'selecttask-component',\n\t            template: \"\\n\\n\\n  <div *ngIf=\\\"shown\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:1000000;\\\">\\n    <div style=\\\"position:absolute;left:5%;top:5%;background:white;border:solid 1px gray;color:black;width:90%;height:90%;\\\">\\n      <p style=\\\"padding:10px;width:100%;text-align:center;\\\">W\\u00E4hle durch Anklicken die Aufgaben aus</p>\\n\\n      <div style=\\\"height:calc(90% - 80px);margin:10px;padding:10px;overflow-y:scroll;\\\">\\n        <div *ngFor=\\\"let t_task of chooseabletaskarray\\\"\\n            (click)=\\\"toggleChosenTask(t_task.task_id);\\\"\\n            [style.background]=\\\"selectedtaskarray.indexOf(t_task.task_id) > -1?'rgb(230,230,230)':'rgb(255,255,255)'\\\"\\n            style=\\\"border:1px solid black;margin:2px 10px;cursor:pointer;\\\">\\n          <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">{{!isUndefined(t_task.taskname)? t_task.taskname : (!isUndefined(t_task.de_DE) ? t_task.de_DE.taskname : '')}}</p>\\n        </div>\\n      </div>\\n\\n      <button (click)=\\\"finalizeSelection();\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Beende die Auswahl</button>\\n      <button (click)=\\\"finalizeSelectionAbort();\\\" class=\\\"button\\\" style=\\\"width:25%;margin-left:5%;\\\">Abbrechen</button>\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div *ngFor=\\\"let t_task_id of selectedtaskarray\\\"\\n        style=\\\"border:1px solid black;margin:2px 0px;background:rgb(230,230,230);\\\">\\n      <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">{{getNameOfTaskFromTaskId(t_task_id)}}</p>\\n    </div>\\n  </div>\\n\\n  <button class=\\\"button\\\" (click)=\\\"shown=true;\\\" style=\\\"width:initial;\\\">\\n    Hinzuf\\u00FCgen/Entfernen von Aufgaben\\n  </button>\\n\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], SelectTaskComponent);\n\t    return SelectTaskComponent;\n\t}());\n\texports.SelectTaskComponent = SelectTaskComponent;\n\t//# sourceMappingURL=selecttask.component.js.map\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar UploadPictureComponent = (function () {\n\t    function UploadPictureComponent(lService) {\n\t        this.lService = lService;\n\t        this.reload = new core_1.EventEmitter();\n\t        this.picturename = \"\";\n\t        this.shown = false;\n\t        this.successfullupload = false;\n\t    }\n\t    UploadPictureComponent.prototype.ngOnInit = function () {\n\t        this.picturename = \"\";\n\t    };\n\t    UploadPictureComponent.prototype.requestPictureFileChangeEvent = function (fileInput) {\n\t        this.pictureFiles = fileInput.target.files;\n\t    };\n\t    UploadPictureComponent.prototype.uploadPicture = function () {\n\t        var _this = this;\n\t        if (this.picturename.length == 0) {\n\t            window.alert(\"Bitte wähle zuerst einen Bildnamen!\");\n\t            return;\n\t        }\n\t        if (this.pictureFiles.length == 0) {\n\t            window.alert(\"Bitte wähle zuerst eine Bilddatei aus!\");\n\t            return;\n\t        }\n\t        this.lService.uploadPicture({ picturename: this.picturename }, this.pictureFiles).then(function (data) {\n\t            console.log(data);\n\t            if (typeof data.result !== \"undefined\" && data.result == true) {\n\t                _this.picturename = \"\";\n\t                _this.pictureFiles = [];\n\t                _this.successfullupload = true;\n\t                setTimeout(function () {\n\t                    _this.shown = false;\n\t                    _this.successfullupload = false;\n\t                }, 2000);\n\t                _this.reload.emit(true);\n\t            }\n\t            else {\n\t                window.alert(\"Es gab einen Fehler bei deiner Anfrage. Bitte lass die Seite neuladen!\");\n\t            }\n\t        }, function () {\n\t            window.alert(\"Es gab einen Fehler bei deiner Anfrage. Bitte lass die Seite neuladen!\");\n\t        });\n\t    };\n\t    UploadPictureComponent.prototype.abortUploadPicture = function () {\n\t        this.shown = false;\n\t    };\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], UploadPictureComponent.prototype, \"reload\", void 0);\n\t    UploadPictureComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'uploadpicture-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n\\n  <div *ngIf=\\\"shown\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:10000000;\\\">\\n    <div style=\\\"position:relative;margin-left:auto;margin-right:auto;top:5%;background:white;border:solid 1px gray;color:black;width:90%;max-width:500px;height:auto;padding:10px;text-align:center;\\\">\\n      <p style=\\\"padding:10px;width:100%;text-align:center;\\\">W\\u00E4hle ein Bild und einen Bildnamen</p>\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <input type=\\\"file\\\" accept=\\\"image/*\\\"\\n                     (change)=\\\"requestPictureFileChangeEvent($event);\\\" name=\\\"pictureupload\\\" style=\\\"width: 95%;padding: 10px;\\\">\\n\\n       <input [(ngModel)]=\\\"picturename\\\" type=\\\"text\\\" placeholder=\\\"Bildname\\\" style=\\\"width: 95%;\\\">\\n\\n      <button (click)=\\\"abortUploadPicture();\\\" class=\\\"button\\\" style=\\\"width: calc(35% - 10px);margin-top: 30px;\\\">Abbrechen</button>\\n      <button (click)=\\\"uploadPicture();\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Bild jetzt hinzuf\\u00FCgen!</button>\\n      <div style=\\\"width:100%;text-align:center;\\\">\\n        <div *ngIf=\\\"successfullupload\\\" style=\\\"padding: 5px;\\\">Bild erfolgreich hinzugef\\u00FCgt!</div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <button class=\\\"button\\\" (click)=\\\"shown=true;\\\" style=\\\"width:initial;\\\">\\n    Bild zur Datenbank hinzuf\\u00FCgen\\n  </button>\\n\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [libgame_service_1.LibgameService])\n\t    ], UploadPictureComponent);\n\t    return UploadPictureComponent;\n\t}());\n\texports.UploadPictureComponent = UploadPictureComponent;\n\t//# sourceMappingURL=uploadpicture.component.js.map\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar AdministrationComponent = (function () {\n\t    function AdministrationComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.reload = new core_1.EventEmitter();\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t        this.user_activity_task_active = \"10d\";\n\t        this.upsertNewTaskSuccessful = false;\n\t        this.upsertNewBadgeSuccessful = false;\n\t        this.upsertNewQuestSuccessful = false;\n\t        this.upsertNewLocationSuccessful = false;\n\t        this.upsertGeneralContentSuccessful = false;\n\t        this.addedNewAdminSuccessful = false;\n\t        this.sendEmailToAllUsersSuccessful = false;\n\t        this.loading_sendemails = false;\n\t        this.show_c_solved_tasks_chart = false;\n\t        this.show_cm_general = false;\n\t        this.show_cm_tasks = false;\n\t        this.show_cm_badges = false;\n\t        this.show_cm_quests = false;\n\t        this.show_cm_locations = false;\n\t        this.show_cm_reset_score = false;\n\t        this.show_um_add_admins = false;\n\t        this.show_um_send_mail = false;\n\t        this.addAdminId = -1;\n\t        this.send_email = {\n\t            headline: \"\",\n\t            content: \"\"\n\t        };\n\t        this.new_task = {};\n\t        this.new_task_template = {\n\t            task_id: -1,\n\t            task_type_id: 1,\n\t            json_task_data: {\n\t                de_DE: {\n\t                    question: \"\",\n\t                    a1: \"\",\n\t                    a2: \"\",\n\t                    a3: \"\",\n\t                    a4: \"\"\n\t                }\n\t            },\n\t            de_DE: {\n\t                taskname: \"\",\n\t                description_long: \"\",\n\t                solved_description: \"\"\n\t            },\n\t            is_task_active: \"1\",\n\t            score_rule: \"10\",\n\t            location_id: -1\n\t        };\n\t        this.new_badge = {};\n\t        this.new_badge_template = {\n\t            de_DE: {\n\t                badgename: \"\",\n\t                description_long: \"\",\n\t                solved_description: \"\"\n\t            },\n\t            badge_id: -1,\n\t            is_active: \"1\",\n\t            json_task_ids: [],\n\t            picture_id: -1\n\t        };\n\t        this.new_quest = {};\n\t        this.new_quest_template = {\n\t            quest_id: -1,\n\t            de_DE: {\n\t                questname: \"\",\n\t                solved_description: \"\"\n\t            },\n\t            is_active: \"1\",\n\t            json_pre_quest_ids: [],\n\t            json_quest_task_ids: [[]],\n\t            location_id: -1,\n\t            is_starter_quest: \"0\",\n\t            score_rule: \"10\"\n\t        };\n\t        this.new_location = {};\n\t        this.new_location_template = {\n\t            location_id: -1,\n\t            de_DE: {\n\t                locationname: \"\",\n\t                description_long: \"\"\n\t            },\n\t            geo_lati: \"\",\n\t            geo_long: \"\",\n\t            geo_radius: \"\"\n\t        };\n\t    }\n\t    AdministrationComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.user_activity_task_active = \"10d\";\n\t        this.new_task = this.new_task_template;\n\t        this.new_quest = this.new_quest_template;\n\t        this.new_badge = this.new_badge_template;\n\t        this.new_location = this.new_location_template;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            console.log(\"Specific Content\");\n\t            console.log(specificcontent);\n\t            if (typeof specificcontent[\"_Tasks\"] !== 'undefined') {\n\t                for (var t_task_key in specificcontent[\"_Tasks\"]) {\n\t                    specificcontent[\"_Tasks\"][t_task_key][\"showhelper_information_open\"] = false;\n\t                    specificcontent[\"_Tasks\"][t_task_key][\"showhelper_edit_open\"] = false;\n\t                    specificcontent[\"_Tasks\"][t_task_key][\"upsert_successful\"] = false;\n\t                    if (typeof specificcontent[\"_Tasks\"][t_task_key].json_task_data !== 'undefined')\n\t                        specificcontent[\"_Tasks\"][t_task_key].json_task_data = JSON.parse(specificcontent[\"_Tasks\"][t_task_key].json_task_data);\n\t                    if (typeof specificcontent[\"_Tasks\"][t_task_key].pre_tasks !== 'undefined')\n\t                        specificcontent[\"_Tasks\"][t_task_key].pre_tasks = JSON.parse(specificcontent[\"_Tasks\"][t_task_key].pre_tasks);\n\t                }\n\t            }\n\t            if (typeof specificcontent[\"_Quests\"] !== 'undefined') {\n\t                for (var t_quest_key in specificcontent[\"_Quests\"]) {\n\t                    specificcontent[\"_Quests\"][t_quest_key][\"showhelper_edit_open\"] = false;\n\t                    specificcontent[\"_Quests\"][t_quest_key][\"upsert_successful\"] = false;\n\t                    if (typeof specificcontent[\"_Quests\"][t_quest_key].json_pre_quest_ids !== 'undefined')\n\t                        specificcontent[\"_Quests\"][t_quest_key].json_pre_quest_ids = JSON.parse(specificcontent[\"_Quests\"][t_quest_key].json_pre_quest_ids);\n\t                    if (typeof specificcontent[\"_Quests\"][t_quest_key].json_quest_task_ids !== 'undefined')\n\t                        specificcontent[\"_Quests\"][t_quest_key].json_quest_task_ids = JSON.parse(specificcontent[\"_Quests\"][t_quest_key].json_quest_task_ids);\n\t                }\n\t            }\n\t            if (typeof specificcontent[\"_Badges\"] !== 'undefined') {\n\t                for (var t_badge_key in specificcontent[\"_Badges\"]) {\n\t                    specificcontent[\"_Badges\"][t_badge_key][\"showhelper_edit_open\"] = false;\n\t                    specificcontent[\"_Badges\"][t_badge_key][\"upsert_successful\"] = false;\n\t                    if (typeof specificcontent[\"_Badges\"][t_badge_key].json_task_ids !== 'undefined')\n\t                        specificcontent[\"_Badges\"][t_badge_key].json_task_ids = JSON.parse(specificcontent[\"_Badges\"][t_badge_key].json_task_ids);\n\t                }\n\t            }\n\t            if (typeof specificcontent[\"_Locations\"] !== 'undefined') {\n\t                for (var t_location_key in specificcontent[\"_Locations\"]) {\n\t                    specificcontent[\"_Locations\"][t_location_key][\"showhelper_information_open\"] = false;\n\t                }\n\t            }\n\t            _this.specificcontent = specificcontent;\n\t            //Chart\n\t            _this.updateChartUserActivityTask(10, 0, 0, true);\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        this.lService.loadSpecificContent('administrationcontent');\n\t    };\n\t    AdministrationComponent.prototype.getAdmins = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Admins'] !== 'undefined' ? this.specificcontent['_Admins'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getAllUsers = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_All_Users'] !== 'undefined' ? this.specificcontent['_All_Users'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getSuperadmins = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Superadmins'] !== 'undefined' ? this.specificcontent['_Superadmins'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getTasks = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Tasks'] !== 'undefined' ? this.specificcontent['_Tasks'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Quests'] !== 'undefined' ? this.specificcontent['_Quests'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getBadges = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Badges'] !== 'undefined' ? this.specificcontent['_Badges'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getLocations = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Locations'] !== 'undefined' ? this.specificcontent['_Locations'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getTaskTypes = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Task_Types'] !== 'undefined' ? this.specificcontent['_Task_Types'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getCountActiveQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Active_Quests'] !== 'undefined' ? this.specificcontent['Count_Active_Quests'] : 0;\n\t    };\n\t    AdministrationComponent.prototype.getCountActiveTasks = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Active_Tasks'] !== 'undefined' ? this.specificcontent['Count_Active_Tasks'] : 0;\n\t    };\n\t    AdministrationComponent.prototype.getCountActiveBadges = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Active_Badges'] !== 'undefined' ? this.specificcontent['Count_Active_Badges'] : 0;\n\t    };\n\t    AdministrationComponent.prototype.getCountUsers = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users'] !== 'undefined' ? this.specificcontent['Count_Users'] : 0;\n\t    };\n\t    AdministrationComponent.prototype.getCountUsersActiveLast2Days = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users_Active_Last_2_Days'] !== 'undefined' ? this.specificcontent['Count_Users_Active_Last_2_Days'] : 0;\n\t    };\n\t    AdministrationComponent.prototype.getCountUsersCompletedAllQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users_Completed_All_Quests'] !== 'undefined' ? this.specificcontent['Count_Users_Completed_All_Quests'] : 0;\n\t    };\n\t    AdministrationComponent.prototype.getCountUsersCompletedAllBadges = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users_Completed_All_Badges'] !== 'undefined' ? this.specificcontent['Count_Users_Completed_All_Badges'] : 0;\n\t    };\n\t    AdministrationComponent.prototype.getStatistics = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Statistics'] !== 'undefined' ? this.specificcontent['_Statistics'] : {};\n\t    };\n\t    AdministrationComponent.prototype.getUniversalContentPictures = function () {\n\t        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n\t    };\n\t    AdministrationComponent.prototype.getUniversalContent = function (content_mapper) {\n\t        if ($.isEmptyObject(this.universalcontent) || typeof this.universalcontent['_Content'] === 'undefined') {\n\t            return \"\";\n\t        }\n\t        var t_content = this.universalcontent['_Content'].filter(function (x) { return x.content_mapper.toLowerCase() == content_mapper.toLowerCase(); });\n\t        if (t_content.length > 0) {\n\t            return t_content[0].text;\n\t        }\n\t        else {\n\t            return \"\";\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.setUniversalContent = function (content_mapper, text) {\n\t        if ($.isEmptyObject(this.universalcontent) || typeof this.universalcontent['_Content'] === 'undefined') {\n\t            return;\n\t        }\n\t        for (var key in this.universalcontent['_Content']) {\n\t            if (this.universalcontent['_Content'][key][\"content_mapper\"].toLowerCase() == content_mapper.toLowerCase()) {\n\t                this.universalcontent['_Content'][key][\"text\"] = text;\n\t            }\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.initChartWithDelay = function () {\n\t        var _this = this;\n\t        setTimeout(function () {\n\t            _this.user_activity_task_active = '10d';\n\t            _this.updateChartUserActivityTask(10, 0, 0, false);\n\t        }, 1000);\n\t    };\n\t    AdministrationComponent.prototype.updateChartUserActivityTask = function (d, m, y, init) {\n\t        var ObjectForCalculation = [];\n\t        var tempObject = typeof this.getStatistics()[\"Administration_Statistic_1\"] !== 'undefined' ? JSON.parse(this.getStatistics()[\"Administration_Statistic_1\"][\"json_statistic\"]) : [];\n\t        for (var key in tempObject) {\n\t            ObjectForCalculation.push({ \"data\": tempObject[key]['data'], \"ts\": tempObject[key]['ts'] });\n\t        }\n\t        var CalculatedChartDataActivityTask = this.lService.getLabelsAndDataForChart(JSON.stringify(ObjectForCalculation), d, m, y, 'diff');\n\t        var lineChartData_canvas_user_activity_task = {\n\t            labels: $.map(CalculatedChartDataActivityTask['labels'], function (el) { return el; }),\n\t            datasets: [\n\t                {\n\t                    strokeColor: 'rgba(251,78,0,1)',\n\t                    pointColor: 'rgba(251,78,0,1)',\n\t                    pointStrokeColor: '#fff',\n\t                    pointHighlightStroke: 'rgba(220,220,220,1)',\n\t                    data: $.map(CalculatedChartDataActivityTask['data'], function (el) { return el; })\n\t                }\n\t            ]\n\t        };\n\t        var biggestValue = 0;\n\t        for (var key_1 in CalculatedChartDataActivityTask[\"data\"]) {\n\t            if (CalculatedChartDataActivityTask[\"data\"][key_1] > biggestValue)\n\t                biggestValue = CalculatedChartDataActivityTask[\"data\"][key_1];\n\t        }\n\t        var settingsObj_canvas_user_activity_task = {\n\t            animation: false,\n\t            responsive: true,\n\t            scaleFontColor: '#000',\n\t            bezierCurve: false,\n\t            datasetFill: false,\n\t            scaleOverride: true,\n\t            scaleSteps: 8,\n\t            scaleStepWidth: Math.ceil(biggestValue / 8) + 1,\n\t            scaleStartValue: 0,\n\t            scaleLineColor: 'rgba(0,0,0,.6)',\n\t            scaleGridLineColor: 'rgba(0,0,0,.2)',\n\t            graphTitleFontSize: 18,\n\t            graphTitleFontColor: '#000',\n\t        };\n\t        //updateChart(document.getElementById('canvas_user_activity_task').getContext('2d'),lineChartData_canvas_user_activity_task,settingsObj_canvas_user_activity_task,false,false);\n\t        if (typeof init === 'undefined' || init == false) {\n\t            var t_canvas = document.getElementById('canvas_user_activity_task');\n\t            updateChart(t_canvas.getContext('2d'), lineChartData_canvas_user_activity_task, settingsObj_canvas_user_activity_task, false, false);\n\t        }\n\t        else {\n\t            $('#canvas_user_activity_task').attr('width', $('#canvas_user_activity_task').parent().width());\n\t            var t_canvas = document.getElementById('canvas_user_activity_task');\n\t            new Chart(t_canvas.getContext('2d')).Line(lineChartData_canvas_user_activity_task, settingsObj_canvas_user_activity_task);\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.showCanvasForTask = function (task_id, location_id) {\n\t        $(\"#qrcode-task-img\" + task_id).qrcode({\n\t            \"width\": 100,\n\t            \"height\": 100,\n\t            \"background\": '#fff',\n\t            \"fill\": '#000',\n\t            \"text\": this.lService.getSolveLinkForLocationTask(task_id, location_id)\n\t        });\n\t    };\n\t    AdministrationComponent.prototype.showCanvasForLocation = function (location_id) {\n\t        $(\"#qrcode-location-img\" + location_id).qrcode({\n\t            \"width\": 100,\n\t            \"height\": 100,\n\t            \"background\": '#fff',\n\t            \"fill\": '#000',\n\t            \"text\": this.lService.getLocationFoundLink(location_id)\n\t        });\n\t    };\n\t    //Communication with Server\n\t    AdministrationComponent.prototype.upsertGeneralContent = function () {\n\t        var _this = this;\n\t        var t_generalcontent = {\n\t            HOME_1: this.getUniversalContent(\"HOME_1\"),\n\t            MAIN_PICTURE_ID: this.getUniversalContent(\"MAIN_PICTURE_ID\"),\n\t            ROOT_LOCATION: this.getUniversalContent(\"ROOT_LOCATION\"),\n\t            START: this.getUniversalContent(\"START\"),\n\t            TOU: this.getUniversalContent(\"TOU\"),\n\t            PP: this.getUniversalContent(\"PP\"),\n\t            IMPRESSUM: this.getUniversalContent(\"IMPRESSUM\")\n\t        };\n\t        this.lService.upsertGeneralContent(t_generalcontent).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t                _this.upsertGeneralContentSuccessful = true;\n\t                setTimeout(function () { _this.upsertGeneralContentSuccessful = false; }, 8000);\n\t                _this.lService.loadSpecificContent('administrationcontent');\n\t            }\n\t            else {\n\t                window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t        });\n\t    };\n\t    AdministrationComponent.prototype.upsertTask = function (taskdata) {\n\t        var _this = this;\n\t        console.log(taskdata);\n\t        //Taskname\n\t        if (typeof taskdata.de_DE.taskname === 'undefined' || taskdata.de_DE.taskname.length == 0) {\n\t            window.alert(\"Bitte wähle einen geeigneten Aufgabennamen!\");\n\t            return;\n\t        }\n\t        //Description\n\t        if (typeof taskdata.de_DE.description_long === 'undefined' || taskdata.de_DE.description_long.length == 0) {\n\t            window.alert(\"Bitte wähle eine Aufgabenbeschreibung!\");\n\t            return;\n\t        }\n\t        //Solved Description\n\t        if (typeof taskdata.de_DE.solved_description === 'undefined' || taskdata.de_DE.solved_description.length == 0) {\n\t            window.alert(\"Bitte gib eine Meldung für den User ein, welche er erhält, wenn er die Aufgabe erfolgreich gelöst hat!\");\n\t            return;\n\t        }\n\t        //score_rule\n\t        if (typeof taskdata.score_rule === 'undefined' || taskdata.score_rule.length == 0 || !this.isNumeric(taskdata.score_rule)) {\n\t            window.alert(\"Bitte wähle die Exp. für die Aufgabe bzw. überprüfe, ob es sich um eine Zahl handelt!\");\n\t            return;\n\t        }\n\t        //Task Type\n\t        if (typeof taskdata.task_type_id === 'undefined' || taskdata.task_type_id == -1) {\n\t            window.alert(\"Bitte wähle vorher einen korrekten Aufgabentypen aus!\");\n\t            return;\n\t        }\n\t        //Task Data\n\t        if (typeof taskdata.json_task_data === 'undefined') {\n\t            window.alert(\"Es ist ein schwerwiegender Fehler aufgetreten. Bitte lass die Seite neuladen und versuche es erneut!\");\n\t            return;\n\t        }\n\t        //Task Type Dependend\n\t        if (taskdata.task_type_id == 1) {\n\t            if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.question === 'undefined' || taskdata.json_task_data.de_DE.question.length == 0) {\n\t                window.alert(\"Bitte gib eine Frage ein!\");\n\t                return;\n\t            }\n\t            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a1 === 'undefined' || taskdata.json_task_data.de_DE.a1.length == 0) {\n\t                window.alert(\"Bitte gib zu deiner Frage die richtige Antwort ein!\");\n\t                return;\n\t            }\n\t            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a2 === 'undefined' || taskdata.json_task_data.de_DE.a2.length == 0) {\n\t                window.alert(\"Bitte überprüfe deine falschen Antworten!\");\n\t                return;\n\t            }\n\t            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a3 === 'undefined' || taskdata.json_task_data.de_DE.a3.length == 0) {\n\t                window.alert(\"Bitte überprüfe deine falschen Antworten!\");\n\t                return;\n\t            }\n\t            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a4 === 'undefined' || taskdata.json_task_data.de_DE.a4.length == 0) {\n\t                window.alert(\"Bitte überprüfe deine falschen Antworten!\");\n\t                return;\n\t            }\n\t        }\n\t        else if (taskdata.task_type_id == 2) {\n\t            if (typeof taskdata.json_task_data.loc === 'undefined' || taskdata.json_task_data.loc == -1) {\n\t                window.alert(\"Bitte überprüfe den aufgabenspezifischen Ort!\");\n\t                return;\n\t            }\n\t        }\n\t        else if (taskdata.task_type_id == 3) {\n\t            if (typeof taskdata.json_task_data.isbn === 'undefined' || taskdata.json_task_data.isbn.length == 0) {\n\t                window.alert(\"Bitte überprüfe die ISBN zu deiner Aufgabe nochmals!\");\n\t                return;\n\t            }\n\t        }\n\t        else if (taskdata.task_type_id == 4) {\n\t            if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.s1 === 'undefined' || taskdata.json_task_data.de_DE.s1.length == 0) {\n\t                window.alert(\"Bitte überprüfe deine Eingabe zur 1.Quelle!\");\n\t                return;\n\t            }\n\t            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.s2 === 'undefined' || taskdata.json_task_data.de_DE.s2.length == 0) {\n\t                window.alert(\"Bitte überprüfe deine Eingabe zur 2.Quelle!\");\n\t                return;\n\t            }\n\t            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.s3 === 'undefined' || taskdata.json_task_data.de_DE.s3.length == 0) {\n\t                window.alert(\"Bitte überprüfe deine Eingabe zur 3.Quelle!\");\n\t                return;\n\t            }\n\t        }\n\t        else if (taskdata.task_type_id == 5) {\n\t            if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.text === 'undefined' || taskdata.json_task_data.de_DE.text.length == 0) {\n\t                window.alert(\"Bitte überprüfe die Eingabe zum Lückentext!\");\n\t                return;\n\t            }\n\t            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.answer === 'undefined' || taskdata.json_task_data.de_DE.answer.length == 0) {\n\t                window.alert(\"Bitte überprüfe die Eingabe zur Antwort bei deiner Lückentext-Aufgabe!\");\n\t                return;\n\t            }\n\t        }\n\t        else if (taskdata.task_type_id == 6) {\n\t        }\n\t        else {\n\t            window.alert(\"Bitte wähle vorher einen korrekten Aufgabentypen aus!\");\n\t            return;\n\t        }\n\t        if (typeof taskdata.task_id !== 'undefined' && taskdata.task_id == -1) {\n\t            this.lService.upsertTask(taskdata).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.upsertNewTaskSuccessful = true;\n\t                    setTimeout(function () { _this.upsertNewTaskSuccessful = false; }, 8000);\n\t                    _this.new_task = _this.new_task_template;\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t        else if (typeof taskdata.task_id !== 'undefined' && taskdata.task_id != -1) {\n\t            this.lService.upsertTask(taskdata).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    taskdata.upsert_successful = true;\n\t                    setTimeout(function () { taskdata.upsert_successful = false; }, 8000);\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t        return;\n\t    };\n\t    AdministrationComponent.prototype.upsertBadge = function (badgedata) {\n\t        var _this = this;\n\t        console.log(badgedata);\n\t        //Badgename\n\t        if (typeof badgedata.de_DE.badgename === 'undefined' || badgedata.de_DE.badgename.length == 0) {\n\t            window.alert(\"Bitte wähle einen geeigneten Abzeichennamen!\");\n\t            return;\n\t        }\n\t        //Description\n\t        if (typeof badgedata.de_DE.description_long === 'undefined' || badgedata.de_DE.description_long.length == 0) {\n\t            window.alert(\"Bitte wähle eine Abzeichenbeschreibung!\");\n\t            return;\n\t        }\n\t        //Solved Description\n\t        if (typeof badgedata.de_DE.solved_description === 'undefined' || badgedata.de_DE.solved_description.length == 0) {\n\t            window.alert(\"Bitte gib eine Meldung für den User ein, welche er erhält, wenn er das Abzeichen erfolgreich gelöst hat!\");\n\t            return;\n\t        }\n\t        //TaskIds\n\t        if (typeof badgedata.json_task_ids === 'undefined' || badgedata.json_task_ids.length == 0) {\n\t            window.alert(\"Ein Abzeichen, für welches die Lösung keiner Aufgabe nötig ist, ist nicht möglich!\");\n\t            return;\n\t        }\n\t        //Picture ID\n\t        if (typeof badgedata.picture_id === 'undefined' || badgedata.picture_id == -1) {\n\t            window.alert(\"Bitte wähle ein Bild für das Abzeichen aus!\");\n\t            return;\n\t        }\n\t        if (typeof badgedata.badge_id !== 'undefined' && badgedata.badge_id == -1) {\n\t            this.lService.upsertBadge(badgedata).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.upsertNewBadgeSuccessful = true;\n\t                    setTimeout(function () {\n\t                        _this.upsertNewBadgeSuccessful = false;\n\t                    }, 8000);\n\t                    _this.new_badge = _this.new_badge_template;\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t        else if (typeof badgedata.badge_id !== 'undefined' && badgedata.badge_id != -1) {\n\t            this.lService.upsertBadge(badgedata).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    badgedata.upsert_successful = true;\n\t                    setTimeout(function () { badgedata.upsert_successful = false; }, 8000);\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t        return;\n\t    };\n\t    AdministrationComponent.prototype.upsertQuest = function (questdata) {\n\t        var _this = this;\n\t        console.log(questdata);\n\t        //Taskname\n\t        if (typeof questdata.de_DE.questname === 'undefined' || questdata.de_DE.questname.length == 0) {\n\t            window.alert(\"Bitte wähle einen geeigneten Questnamen!\");\n\t            return;\n\t        }\n\t        //Solved Description\n\t        if (typeof questdata.de_DE.solved_description === 'undefined' || questdata.de_DE.solved_description.length == 0) {\n\t            window.alert(\"Bitte gib eine Meldung für den User ein, welche er erhält, wenn er den Quest erfolgreich gelöst hat!\");\n\t            return;\n\t        }\n\t        //score_rule\n\t        if (typeof questdata.score_rule === 'undefined' || questdata.score_rule.length == 0 || !this.isNumeric(questdata.score_rule)) {\n\t            window.alert(\"Bitte wähle die Exp. für den Quest bzw. überprüfe, ob es sich um eine Zahl handelt!\");\n\t            return;\n\t        }\n\t        //Usability Checks\n\t        if (typeof questdata.location_id !== 'undefined' && questdata.location_id == -1 &&\n\t            typeof questdata.json_pre_quest_ids !== 'undefined' && questdata.json_pre_quest_ids.length == 0 &&\n\t            typeof questdata.is_starter_quest !== 'undefined' && questdata.is_starter_quest == '0') {\n\t            window.alert(\"Vorsicht: Dieser Quest wird niemals gefunden bzw. spielbar sein, da er an keinem Ort gefunden wird, keine Vorquests hat und kein Starterquest (Quest, welche der User von Beginn an lösen kann) ist. Bitte sorge dafür, dass genau eins davon zutrifft!\");\n\t            return;\n\t        }\n\t        if (typeof questdata.json_pre_quest_ids !== 'undefined' && questdata.json_pre_quest_ids.length != 0 &&\n\t            typeof questdata.is_starter_quest !== 'undefined' && questdata.is_starter_quest == '1') {\n\t            window.alert(\"Vorsicht: Dieser Quest enthält einen logischen Fehler, da ein Quest mit Vorquests niemals ein Starterquest (Quest, welche der User von Beginn an lösen kann) sein kann! Bedenke, dass ein Quest mit Vorquests automatisch dem User zugeteilt wird, wenn er alle Vorquests abgeschlossen hat!\");\n\t            return;\n\t        }\n\t        if (typeof questdata.location_id !== 'undefined' && questdata.location_id != -1 &&\n\t            typeof questdata.is_starter_quest !== 'undefined' && questdata.is_starter_quest == '1') {\n\t            window.alert(\"Vorsicht: Dieser Quest enthält einen logischen Fehler, da ein Quest, welcher an einem Ort gefunden werden kann, niemals ein Starterquest (Quest, welche der User von Beginn an lösen kann) sein kann! Bedenke, dass ein Quest, welcher gefunden wird, nicht schon zu Beginn dem User gestellt werden kann!\");\n\t            return;\n\t        }\n\t        //Quest Level Task Data\n\t        if (typeof questdata.json_quest_task_ids === 'undefined' || questdata.json_quest_task_ids.length == 0) {\n\t            window.alert(\"Schwerwiegender interner Fehler. Bitte lass die Seite neuladen!\");\n\t            return;\n\t        }\n\t        for (var i = 0; i < questdata.json_quest_task_ids.length; i++) {\n\t            if (questdata.json_quest_task_ids[i].length == 0) {\n\t                window.alert(\"Fehler bei den Aufgaben für Stufe \" + (i + 1) + \": Keine Aufgaben ausgewählt!\");\n\t                return;\n\t            }\n\t        }\n\t        if (typeof questdata.quest_id !== 'undefined' && questdata.quest_id == -1) {\n\t            this.lService.upsertQuest(questdata).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.upsertNewQuestSuccessful = true;\n\t                    setTimeout(function () { _this.upsertNewQuestSuccessful = false; }, 8000);\n\t                    _this.new_quest = _this.new_quest_template;\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t        else if (typeof questdata.quest_id !== 'undefined' && questdata.quest_id != -1) {\n\t            this.lService.upsertQuest(questdata).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    questdata.upsert_successful = true;\n\t                    setTimeout(function () { questdata.upsert_successful = false; }, 8000);\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t        return;\n\t    };\n\t    AdministrationComponent.prototype.upsertLocation = function (locationdata) {\n\t        var _this = this;\n\t        console.log(locationdata);\n\t        //locationname\n\t        if (typeof locationdata.de_DE.locationname === 'undefined' || locationdata.de_DE.locationname.length == 0) {\n\t            window.alert(\"Bitte wähle einen geeigneten Ortsnamen!\");\n\t            return;\n\t        }\n\t        //Lati\n\t        if (typeof locationdata.geo_lati === 'undefined' || locationdata.geo_lati.length == 0 || !this.isNumeric(locationdata.geo_lati)) {\n\t            window.alert(\"Bitte gib einen korrekten Breitengrad ein!\");\n\t            return;\n\t        }\n\t        //Long\n\t        if (typeof locationdata.geo_long === 'undefined' || locationdata.geo_long.length == 0 || !this.isNumeric(locationdata.geo_long)) {\n\t            window.alert(\"Bitte gib einen korrekten Längengrad ein!\");\n\t            return;\n\t        }\n\t        //Long\n\t        if (typeof locationdata.geo_radius === 'undefined' || locationdata.geo_radius.length == 0 || !this.isNumeric(locationdata.geo_radius)) {\n\t            window.alert(\"Bitte gib einen korrekten Radius ein!\");\n\t            return;\n\t        }\n\t        if (typeof locationdata.location_id !== 'undefined' && locationdata.location_id == -1) {\n\t            this.lService.upsertLocation(locationdata).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.upsertNewLocationSuccessful = true;\n\t                    setTimeout(function () { _this.upsertNewLocationSuccessful = false; }, 8000);\n\t                    _this.new_location = _this.new_location_template;\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t        return;\n\t    };\n\t    AdministrationComponent.prototype.resetFacultyScore = function () {\n\t        if (confirm(\"Soll jetzt der Fakultätshighscore zurückgesetzt werden?\") == true) {\n\t            this.lService.resetFacultyScore().subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    window.alert(\"Der Fakultätshighscore wurde erfolgreich zurückgesetzt!\");\n\t                }\n\t                else {\n\t                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.deleteAdmin = function (user_id) {\n\t        //TODO\n\t    };\n\t    AdministrationComponent.prototype.setNewAdmin = function () {\n\t        var _this = this;\n\t        if (typeof this.addAdminId === 'undefined' || this.addAdminId == -1) {\n\t            window.alert(\"Bitte wähle zuerst einen User aus!\");\n\t            return;\n\t        }\n\t        this.lService.setNewAdmin(this.addAdminId).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t                _this.addedNewAdminSuccessful = true;\n\t                setTimeout(function () { _this.addedNewAdminSuccessful = false; }, 8000);\n\t                _this.addAdminId = -1;\n\t                _this.lService.loadSpecificContent('administrationcontent');\n\t            }\n\t            else {\n\t                window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t        });\n\t    };\n\t    AdministrationComponent.prototype.setTaskActiveInactive = function (taskdata) {\n\t        console.log(taskdata);\n\t        taskdata.is_task_active = taskdata.is_task_active == \"1\" ? \"0\" : \"1\";\n\t        this.lService.upsertTask(taskdata).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t            }\n\t            else {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t        });\n\t    };\n\t    AdministrationComponent.prototype.setTaskDeleteTask = function (task_id) {\n\t        var _this = this;\n\t        if (confirm(\"Soll die Aufgabe jetzt gelöscht werden?\") == true) {\n\t            this.lService.deleteTask(task_id).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.setBadgeActiveInactive = function (badgedata) {\n\t        console.log(badgedata);\n\t        badgedata.is_active = badgedata.is_active == \"1\" ? \"0\" : \"1\";\n\t        this.lService.upsertBadge(badgedata).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t            }\n\t            else {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t        });\n\t    };\n\t    AdministrationComponent.prototype.setBadgeDeleteBadge = function (badge_id) {\n\t        var _this = this;\n\t        if (confirm(\"Soll das Abzeichen jetzt gelöscht werden?\") == true) {\n\t            this.lService.deleteBadge(badge_id).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.setQuestActiveInactive = function (questdata) {\n\t        console.log(questdata);\n\t        questdata.is_active = questdata.is_active == \"1\" ? \"0\" : \"1\";\n\t        this.lService.upsertQuest(questdata).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t            }\n\t            else {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t        });\n\t    };\n\t    AdministrationComponent.prototype.setQuestDeleteQuest = function (quest_id) {\n\t        var _this = this;\n\t        if (confirm(\"Soll der Quest jetzt gelöscht werden?\") == true) {\n\t            this.lService.deleteQuest(quest_id).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.setLocationDeleteLocation = function (location_id) {\n\t        var _this = this;\n\t        if (confirm(\"Soll der Ort jetzt gelöscht werden?\") == true) {\n\t            this.lService.deleteLocation(location_id).subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.lService.loadSpecificContent('administrationcontent');\n\t                }\n\t                else {\n\t                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t    };\n\t    AdministrationComponent.prototype.sendEmailMessageToAllUsers = function () {\n\t        var _this = this;\n\t        if (this.loading_sendemails == true) {\n\t            return;\n\t        }\n\t        if (typeof this.send_email.headline === 'undefined' || this.send_email.headline.length == 0) {\n\t            window.alert(\"Bitte gib zuerst einen Betreff ein!\");\n\t            return;\n\t        }\n\t        if (typeof this.send_email.content === 'undefined' || this.send_email.content.length == 0) {\n\t            window.alert(\"Bitte gib zuerst eine Nachricht ein!\");\n\t            return;\n\t        }\n\t        this.loading_sendemails = true;\n\t        this.lService.sendEmailMessageToAllUsers(this.send_email).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t                _this.sendEmailToAllUsersSuccessful = true;\n\t                setTimeout(function () { _this.sendEmailToAllUsersSuccessful = false; }, 5000);\n\t                _this.send_email.content = \"\";\n\t                _this.send_email.headline = \"\";\n\t            }\n\t            else {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t            }\n\t            _this.loading_sendemails = false;\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            _this.loading_sendemails = false;\n\t        });\n\t    };\n\t    //Helper\n\t    AdministrationComponent.prototype.isNumeric = function (value) {\n\t        return typeof value !== 'undefined' && !isNaN(parseFloat(value));\n\t    };\n\t    AdministrationComponent.prototype.sendToConsole = function (value) {\n\t        console.log(value);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], AdministrationComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], AdministrationComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], AdministrationComponent.prototype, \"reload\", void 0);\n\t    AdministrationComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'administration-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row-controlling row\\\">\\n\\n      <p class=\\\"overall-headline\\\" style=\\\"width:100%;text-align:center;padding: 10px 0px!important;\\\">CONTROLLING</p>\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-ad-stats\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Daten und Fakten</p>\\n\\n              <div class=\\\"col-xs-12\\\" style=\\\"width:100%;\\\">\\n\\n                  <div  style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ad-stats-quests-count\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aktive Quests</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountActiveQuests()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-badges-count\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aktive Abzeichen</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountActiveBadges()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-tasks-count\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aktive Aufgaben</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountActiveTasks()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"col-xs-12\\\" style=\\\"width:100%;\\\">\\n\\n                  <div style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ad-stats-user-count\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Nutzer</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsers()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-user-last-active\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">ZULETZT AKTIVE USER [2 TAGE]</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsersActiveLast2Days()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-user-completed-quests\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">USER, WELCHE ALLE QUESTS GEL\\u00D6ST HABEN</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsersCompletedAllQuests()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-user-completed-badges\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">USER, WELCHE ALLE ABZEICHEN GESAMMELT HABEN</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsersCompletedAllBadges()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n\\n\\n              </div>\\n              <div style=\\\"clear:both;\\\"></div>\\n\\n\\n          </div>\\n\\n\\n          <div id=\\\"cf-ad-user-activity-task\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_c_solved_tasks_chart=show_c_solved_tasks_chart?false:true;initChartWithDelay();\\\">Chart: Gel\\u00F6ste Aufgaben</p>\\n\\n              <div [hidden]=\\\"!show_c_solved_tasks_chart\\\" style=\\\"width:100%;\\\">\\n                  <div style=\\\"display:inline-block;border:2px solid rgb(0,0,0);border-radius:4px;\\\">\\n                    <div (click)=\\\"updateChartUserActivityTask(10,0,0);user_activity_task_active='10d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='10d'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='10d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">10 Tage</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(30,0,0);user_activity_task_active='30d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='30d'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='30d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">30 Tage</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,6,0);user_activity_task_active='6m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='6m'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='6m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">6 Monate</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,12,0);user_activity_task_active='12m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='12m'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='12m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">12 Monate</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,24,0);user_activity_task_active='24m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='24m'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='24m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">24 Monate</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,0,5);user_activity_task_active='5y';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='5y'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='5y'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">5 Jahre</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                  </div>\\n              </div>\\n\\n              <div [hidden]=\\\"!show_c_solved_tasks_chart\\\" style=\\\"width:100%!important;min-width:100px!important;\\\">\\n                  <canvas id=\\\"canvas_user_activity_task\\\" height=\\\"400\\\"></canvas>\\n              </div>\\n\\n          </div>\\n\\n      </div>\\n\\n\\n  </div>\\n\\n\\n  <div class=\\\"row-content-management row\\\">\\n\\n      <p class=\\\"overall-headline\\\" style=\\\"width:100%;text-align:center;\\\">CONTENT-MANAGEMENT</p>\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_general=show_cm_general?false:true;\\\">Allgemein</p>\\n\\n              <div [hidden]=\\\"!show_cm_general\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Adding Location -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-4 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Administriere Allgemeines</p>\\n\\n                      <hr class=\\\"hrForAdministration\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Hauptbild / Logo des Spiels<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <div >\\n                          <div style=\\\"float:left;width:50%;margin-top:10px;\\\">\\n                              <select [value]=\\\"getUniversalContent('MAIN_PICTURE_ID')\\\" (change)=\\\"setUniversalContent('MAIN_PICTURE_ID',$event.target.value);\\\" style=\\\"width:100%;\\\">\\n                                  <option *ngFor=\\\"let t_picture of getUniversalContentPictures();\\\" value='{{t_picture.picture_id}}'>{{t_picture.picturename}}</option>\\n                              </select>\\n                          </div>\\n                          <div style=\\\"float:left;width:50%;text-align:right;\\\">\\n                              <uploadpicture-component (reload)=\\\"reload.emit(true);\\\"></uploadpicture-component>\\n                          </div>\\n                          <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                          <div [hidden]=\\\"(getUniversalContent('MAIN_PICTURE_ID')+'').length == 0\\\" style=\\\"text-align:center;\\\">\\n                              <label style=\\\"width:100%;text-align:center;\\\">Hauptbild / Logo des Spiels Vorschau</label>\\n                              <br>\\n                              <img style='width:30%;' src='{{(getUniversalContent(\\\"MAIN_PICTURE_ID\\\")+\\\"\\\").length != 0 ? lService.getPictureLink(getUniversalContent(\\\"MAIN_PICTURE_ID\\\")) : \\\"\\\"}}'>\\n                          </div>\\n                      </div>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Zentraler Ort (Dieser Ort bestimmt, auf welchen Punkt beim \\u00D6ffnen der Aufgabensuche gezoomt werden soll)</label>\\n                      <br>\\n                      <select [value]=\\\"getUniversalContent('ROOT_LOCATION')\\\" (change)=\\\"setUniversalContent('ROOT_LOCATION',$event.target.value);\\\"  style=\\\"width:100%;\\\">\\n                        <option value='-1' selected=\\\"selected\\\">--None--</option>\\n                        <option *ngFor=\\\"let t_location of getLocations();\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n                      </select>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Inhalt der Startseite (bevor der User eingeloggt ist)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('START')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('START',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Inhalt der Startseite (wenn der User eingeloggt ist; \\\"Was kann ich hier machen?\\\")<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('HOME_1')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('HOME_1',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">AGB<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('TOU')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('TOU',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Datenschutzerkl\\u00E4rung<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('PP')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('PP',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Impressum<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('IMPRESSUM')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('IMPRESSUM',$event);\\\" ></htmleditor-component>\\n\\n                      <button (click)=\\\"upsertGeneralContent();\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">Speichere die allgemeinen Informationen</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertGeneralContentSuccessful\\\" style=\\\"padding: 5px;\\\">Allgemeinen Informationen erfolgreich gespeichert!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n\\n          <div id=\\\"cf-ad-manage-tasks\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_tasks=show_cm_tasks?false:true;\\\">Aufgaben</p>\\n\\n\\n\\n              <div [hidden]=\\\"!show_cm_tasks\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Editing Tasks -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Organisiere bestehende Aufgaben</p>\\n\\n                          <div *ngFor=\\\"let t_task of getTasks(); let i = index;\\\" class=\\\"cf-ad-manage-tasks-task\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                              <div  class=\\\"cf-ad-manage-tasks-task-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                                  <button (click)=\\\"setTaskDeleteTask(t_task.task_id)\\\" class=\\\"delete-task-button fa fa-minus\\\" title=\\\"L\\u00F6sche diese Aufgabe\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <button (click)=\\\"setTaskActiveInactive(getTasks()[i])\\\" [class.active]=\\\"t_task.is_task_active=='1'\\\" [class.inactive]=\\\"t_task.is_task_active!='1'\\\" class=\\\"set-task-active-inactive-button fa fa-circle\\\" title=\\\"Setze die Aufgabe aktiv/inaktiv\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <button (click)=\\\"t_task.showhelper_edit_open = t_task.showhelper_edit_open?false:true;\\\" [class.button-pressed]=\\\"t_task.showhelper_edit_open\\\" class=\\\"fa fa-edit\\\" title=\\\"Bearbeite die Aufgabe\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <button [hidden]=\\\"t_task.task_type_id != 6\\\" (click)=\\\"t_task.showhelper_information_open = t_task.showhelper_information_open?false:true; t_task.showhelper_information_open?showCanvasForTask(t_task.task_id,t_task.json_task_data.loc):'';\\\" [class.button-pressed]=\\\"t_task.showhelper_information_open\\\" class=\\\"fa fa-info\\\" title=\\\"Zeige weitere Informationen\\\" style=\\\"padding:0.1em 0.5em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                    {{t_task.de_DE?.taskname}}\\n                                  </p>\\n                                  <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                              </div>\\n\\n                              <div *ngIf=\\\"t_task.showhelper_edit_open\\\" class=\\\"cf-ad-manage-tasks-task-edit\\\">\\n\\n                                  <edittask-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [taskdata]=\\\"t_task\\\" [locationsdata]=\\\"getLocations()\\\" [tasktypesdata]=\\\"getTaskTypes()\\\" (taskdataoutput)=\\\"getTasks()[i]=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></edittask-component>\\n\\n                                  <button (click)=\\\"upsertTask(t_task)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">Speichere jetzt die \\u00C4nderungen</button>\\n                                  <div style=\\\"width:100%;text-align:center;\\\">\\n                                    <div *ngIf=\\\"t_task.upsert_successful\\\" style=\\\"padding: 5px;\\\">Aufgabe erfolgreich ge\\u00E4ndert!</div>\\n                                  </div>\\n                              </div>\\n\\n                              <div [hidden]=\\\"!t_task.showhelper_information_open\\\" class=\\\"cf-ad-manage-tasks-task-show-information\\\">\\n                                  <br>\\n                                  <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Nutze diesen QR Code, um den Usern die M\\u00F6glichkeit zu geben die Aufgabe direkt durch Scannen des QR Codes zu l\\u00F6sen:</label>\\n                                  <br>\\n                                  <div style=\\\"width:200px;height:250px;margin:0!important;margin-right:auto!important;margin-left:auto!important;margin-top:0.3em!important;margin-bottom:0.5em!important;\\\">\\n                                      <canvas [id]=\\\"'qrcode-task-img'+t_task.task_id\\\" height=\\\"200\\\" width=\\\"200\\\"></canvas>\\n                                  </div>\\n                              </div>\\n\\n                          </div>\\n\\n                  </div>\\n\\n                  <!-- Adding Tasks -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge eine neue Aufgabe hinzu</p>\\n\\n                      <edittask-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [taskdata]=\\\"new_task\\\" [locationsdata]=\\\"getLocations()\\\" [tasktypesdata]=\\\"getTaskTypes()\\\" (taskdataoutput)=\\\"new_task=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></edittask-component>\\n\\n                      <button (click)=\\\"upsertTask(new_task)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge die Aufgabe jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewTaskSuccessful\\\" style=\\\"padding: 5px;\\\">Aufgabe erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-manage-badges\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_badges=show_cm_badges?false:true;\\\">Abzeichen</p>\\n\\n\\n\\n              <div [hidden]=\\\"!show_cm_badges\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Editing Badges -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Organisiere bestehende Abzeichen</p>\\n\\n                      <div *ngFor=\\\"let t_badge of getBadges(); let i = index;\\\" class=\\\"cf-ad-manage-badges-badge\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                          <div  class=\\\"cf-ad-manage-badges-badge-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                              <button (click)=\\\"setBadgeDeleteBadge(t_badge.badge_id)\\\" class=\\\"delete-badge-button fa fa-minus\\\" title=\\\"L\\u00F6sche dieses Abzeichen\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"setBadgeActiveInactive(getBadges()[i])\\\" [class.active]=\\\"t_badge.is_active=='1'\\\" [class.inactive]=\\\"t_badge.is_active!='1'\\\" class=\\\"set-badge-active-inactive-button fa fa-circle\\\" title=\\\"Setze dieses Abzeichen aktiv/inaktiv\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"t_badge.showhelper_edit_open = t_badge.showhelper_edit_open?false:true;\\\" [class.button-pressed]=\\\"t_badge.showhelper_edit_open\\\" class=\\\"fa fa-edit\\\" title=\\\"Bearbeite das Abzeichen\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                  {{t_badge.de_DE?.badgename}}\\n                              </p>\\n                              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                          </div>\\n                          <div *ngIf=\\\"t_badge.showhelper_edit_open\\\" class=\\\"cf-ad-manage-badges-badge-edit-description\\\">\\n\\n                              <editbadge-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [badgedata]=\\\"t_badge\\\" [alltasksdata]=\\\"getTasks()\\\" (badgedataoutput)=\\\"getBadges()[i]=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editbadge-component>\\n\\n                              <button (click)=\\\"upsertBadge(t_badge)\\\" class=\\\"edit-badge-button button\\\" style=\\\"margin-top:2em;\\\">Speichere jetzt die \\u00C4nderungen</button>\\n                              <div style=\\\"width:100%;text-align:center;\\\">\\n                                <div *ngIf=\\\"t_badge.upsert_successful\\\" style=\\\"padding: 5px;\\\">Abzeichen erfolgreich ge\\u00E4ndert!</div>\\n                              </div>\\n                          </div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <!-- Adding Badges -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge ein neues Abzeichen hinzu</p>\\n\\n                      <editbadge-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [badgedata]=\\\"new_badge\\\" [alltasksdata]=\\\"getTasks()\\\" (badgedataoutput)=\\\"new_badge=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editbadge-component>\\n\\n                      <button (click)=\\\"upsertBadge(new_badge)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge das Abzeichen jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewBadgeSuccessful\\\" style=\\\"padding: 5px;\\\">Abzeichen erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-manage-quests\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_quests=show_cm_quests?false:true;\\\">Quests</p>\\n\\n              <div [hidden]=\\\"!show_cm_quests\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Editing Quests -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Organisiere bestehende Quests</p>\\n\\n                      <div *ngFor=\\\"let t_quest of getQuests(); let i = index;\\\" class=\\\"cf-ad-manage-quests-quest\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                          <div  class=\\\"cf-ad-manage-quests-quest-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                              <button (click)=\\\"setQuestDeleteQuest(t_quest.quest_id)\\\" class=\\\"delete-quest-button fa fa-minus\\\"  title=\\\"L\\u00F6sche diesen Quest\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"setQuestActiveInactive(getQuests()[i])\\\" [class.active]=\\\"t_quest.is_active=='1'\\\" [class.inactive]=\\\"t_quest.is_active!='1'\\\" class=\\\"set-quest-active-inactive-button fa fa-circle\\\" title=\\\"Setze diesen Quest aktiv/inaktiv\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"t_quest.showhelper_edit_open = t_quest.showhelper_edit_open?false:true;\\\" [class.button-pressed]=\\\"t_quest.showhelper_edit_open\\\" class=\\\"fa fa-edit\\\" title=\\\"Bearbeite den Quest\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                  {{t_quest.de_DE?.questname}}\\n                              </p>\\n                              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                          </div>\\n                          <div *ngIf=\\\"t_quest.showhelper_edit_open\\\" class=\\\"cf-ad-manage-quests-quest-edit-description\\\">\\n\\n                              <editquest-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [questdata]=\\\"t_quest\\\" [allquestsdata]=\\\"getQuests()\\\" [alltasksdata]=\\\"getTasks()\\\" [locationsdata]=\\\"getLocations()\\\" (questdataoutput)=\\\"getQuests()[i]=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editquest-component>\\n\\n                              <button (click)=\\\"upsertQuest(t_quest)\\\" class=\\\"edit-quest-button button\\\" style=\\\"margin-top:2em;\\\">Speichere jetzt die \\u00C4nderungen</button>\\n                              <div style=\\\"width:100%;text-align:center;\\\">\\n                                <div *ngIf=\\\"t_quest.upsert_successful\\\" style=\\\"padding: 5px;\\\">Quest erfolgreich ge\\u00E4ndert!</div>\\n                              </div>\\n\\n                          </div>\\n                      </div>\\n\\n\\n                  </div>\\n\\n                  <!-- Adding Quests -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge einen neuen Quest hinzu</p>\\n\\n                      <editquest-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [questdata]=\\\"new_quest\\\" [allquestsdata]=\\\"getQuests()\\\" [alltasksdata]=\\\"getTasks()\\\" [locationsdata]=\\\"getLocations()\\\" (questdataoutput)=\\\"new_quest=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editquest-component>\\n\\n                      <button (click)=\\\"upsertQuest(new_quest)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge den neuen Quest jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewQuestSuccessful\\\" style=\\\"padding: 5px;\\\">Quest erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n\\n          <div class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_locations=show_cm_locations?false:true;\\\">Orte</p>\\n\\n\\n\\n              <div [hidden]=\\\"!show_cm_locations\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Getting QR Code Location -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Orte</p>\\n\\n                      <div *ngFor=\\\"let t_location of getLocations()\\\" class=\\\"cf-ad-manage-locations-setted-location\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                          <div  class=\\\"cf-ad-manage-locations-setted-location-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                              <button (click)=\\\"setLocationDeleteLocation(t_location.location_id);\\\" class=\\\"delete-location-button fa fa-minus\\\" title=\\\"L\\u00F6sche diesen Ort\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"t_location.showhelper_information_open = t_location.showhelper_information_open?false:true; t_location.showhelper_information_open?showCanvasForLocation(t_location.location_id):'';\\\" [class.button-pressed]=\\\"t_location.showhelper_information_open\\\" class=\\\"fa fa-info\\\" title=\\\"Zeige weitere Informationen bzgl. diesem Ort\\\" style=\\\"padding:0.1em 0.5em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                  {{t_location.locationname}}<br>\\n                                  {{\\\"Lat: \\\"+t_location.geo_lati}}<br>\\n                                  {{\\\"Long: \\\"+t_location.geo_long}}<br>\\n                                  {{\\\"Radius: \\\"+t_location.geo_radius+\\\"m\\\"}}\\n                              </p>\\n                              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                              <div [hidden]=\\\"!t_location.showhelper_information_open\\\" class=\\\"cf-ad-manage-locations-setted-location-description\\\">\\n\\n                                  <div style=\\\"width:200px;height:250px;margin:0!important;margin-right:auto!important;margin-left:auto!important;margin-top:1em!important;margin-bottom:1em!important;\\\">\\n                                      <canvas [id]=\\\"'qrcode-location-img'+t_location.location_id\\\" height=\\\"200\\\" width=\\\"200\\\"></canvas>\\n                                  </div>\\n\\n                              </div>\\n                          </div>\\n                      </div>\\n\\n\\n\\n                  </div>\\n\\n                  <!-- Adding Location -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge neuen Ort hinzu</p>\\n\\n                      <!-- Choose Locationname[german] -->\\n                      <hr class=\\\"hrForAdministration\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Ortsname<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.de_DE.locationname\\\" type=\\\"text\\\" placeholder=\\\"Ortsname\\\" style=\\\"width:100%;\\\">\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <!-- Choose Latitude -->\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Breitengrad [Beispiel: 10.1435]<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.geo_lati\\\" type=\\\"text\\\" placeholder=\\\"Breitengrad\\\" style=\\\"width:100%;\\\">\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <!-- Choose Longitude -->\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>L\\u00E4ngengrad [Beispiel: 10.1435]<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.geo_long\\\" type=\\\"text\\\" placeholder=\\\"L\\u00E4ngengrad\\\" style=\\\"width:100%;\\\">\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <!-- Choose Radius -->\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Radius[meter]<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.geo_radius\\\" type=\\\"text\\\" placeholder=\\\"Radius[meter]\\\" style=\\\"width:100%;\\\">\\n\\n                      <button (click)=\\\"upsertLocation(new_location);\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge den neuen Ort jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewLocationSuccessful\\\" style=\\\"padding: 5px;\\\">Ort erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-reverse-faculty-score\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_reset_score=show_cm_reset_score?false:true;\\\">Setze Fakult\\u00E4tshighscore zur\\u00FCck</p>\\n\\n              <div [hidden]=\\\"!show_cm_reset_score\\\" style=\\\"width:100%;max-width:350px;width:100%;margin-left:auto;margin-right:auto;\\\">\\n\\n                  <button (click)=\\\"resetFacultyScore();\\\" class=\\\"button\\\" style=\\\"margin-top:2em;margin-bottom:2em;\\\">Setze den Fakult\\u00E4tshighscore jetzt zur\\u00FCck</button>\\n\\n              </div>\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n  </div>\\n\\n  <div class=\\\"row-user-management row\\\">\\n\\n      <p class=\\\"overall-headline\\\" style=\\\"width:100%;text-align:center;\\\">USER-MANAGEMENT</p>\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div *ngIf=\\\"user.user_type_id=='2'\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_um_add_admins=show_um_add_admins?false:true;\\\">F\\u00FCge Administratoren hinzu</p>\\n\\n              <div [hidden]=\\\"!show_um_add_admins\\\" style=\\\"width:100%;\\\">\\n\\n\\n                  <!-- Deleting/Editing Administrators -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Admins</p>\\n\\n                        <div *ngFor=\\\"let t_admin of getAdmins();\\\" class=\\\"cf-ad-admin\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                            <button (click)=\\\"deleteAdmin(t_admin.user_id)\\\" class=\\\"degrade-admin-button fa fa-minus\\\" title=\\\"L\\u00F6sche diesen Admin\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;\\\"></button>\\n                            <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                {{t_admin.username}}\\n                            </p>\\n                            <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                        </div>\\n\\n                        <div *ngFor=\\\"let t_admin of getSuperadmins();\\\" class=\\\"cf-ad-admin\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                            <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                {{'Superadmin: '+t_admin.username}}\\n                            </p>\\n                            <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                        </div>\\n\\n                  </div>\\n\\n                  <!-- Adding Administrators -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge einen neuen Admin hinzu</p>\\n\\n                      <div style=\\\"width:100%;\\\">\\n                          <select [(ngModel)]=\\\"addAdminId\\\"  style=\\\"width:100%;\\\">\\n                            <option value='-1'>--None--</option>\\n                            <option *ngFor=\\\"let t_user of getAllUsers();\\\" [hidden]=\\\"t_user.user_type_id != 0\\\" value='{{t_user.user_id}}'>{{t_user.username}}</option>\\n                          </select>\\n                      </div>\\n\\n                      <button (click)=\\\"setNewAdmin()\\\"  class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge den ausgew\\u00E4hlten Admin jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"addedNewAdminSuccessful\\\" style=\\\"padding: 5px;\\\">Admin erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-send-mail-to-users\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_um_send_mail=show_um_send_mail?false:true;\\\">Sende eine Mail an alle User</p>\\n\\n              <div [hidden]=\\\"!show_um_send_mail\\\" style=\\\"width:100%;\\\">\\n\\n                  <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-3 adm-frame\\\">\\n\\n                      <hr class=\\\"hrForAdministration\\\">\\n                      <label for=\\\"input-email-headline\\\" style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Betreff<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"send_email.headline\\\" type=\\\"text\\\" placeholder=\\\"Betreff\\\" style=\\\"width:100%;\\\"/>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label for=\\\"textarea-email-message\\\" style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Nachricht<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <textarea [(ngModel)]=\\\"send_email.content\\\" placeholder=\\\"Nachricht\\\" style=\\\"width:100%;height:8em;resize:none;\\\"></textarea>\\n\\n                      <button (click)=\\\"sendEmailMessageToAllUsers()\\\" class=\\\"button\\\">\\n                        <span [hidden]=\\\"loading_sendemails\\\">Sende jetzt die Nachricht(en) an alle User</span>\\n                        <span [hidden]=\\\"!loading_sendemails\\\"><i class=\\\"fa fa-spinner fa-pulse\\\"></i></span>\\n                      </button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"sendEmailToAllUsersSuccessful\\\" style=\\\"padding: 5px;\\\">Emails erfolgreich gesendet!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], AdministrationComponent);\n\t    return AdministrationComponent;\n\t}());\n\texports.AdministrationComponent = AdministrationComponent;\n\t//# sourceMappingURL=administration.component.js.map\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar BadgeComponent = (function () {\n\t    function BadgeComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t    }\n\t    BadgeComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        if (typeof this.badge_id === 'string' && this.badge_id.length != 0)\n\t            this.lService.loadSpecificContent('badge&badge_id=' + this.badge_id);\n\t    };\n\t    BadgeComponent.prototype.ngOnChanges = function (changes) {\n\t        for (var propName in changes) {\n\t            var changedProp = changes[propName];\n\t            var from = changedProp.previousValue;\n\t            var to = changedProp.currentValue;\n\t            if (propName == \"badge_id\" && from != to) {\n\t                this.lService.loadSpecificContent('badge&badge_id=' + to);\n\t            }\n\t        }\n\t    };\n\t    BadgeComponent.prototype.getBadgeData = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['BADGE_DATA'] !== 'undefined' ? this.specificcontent['BADGE_DATA'] : {\n\t            badgename: \"\",\n\t            description_long: \"\"\n\t        };\n\t    };\n\t    BadgeComponent.prototype.getUserBadge = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_BADGE'] !== 'undefined' ? this.specificcontent['USER_BADGE'] : {\n\t            completed: '0'\n\t        };\n\t    };\n\t    BadgeComponent.prototype.getProgressTasks = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PROGRESS_TASKS'] !== 'undefined' ? this.specificcontent['PROGRESS_TASKS'] : [];\n\t    };\n\t    BadgeComponent.prototype.navigateToQuest = function (quest_id) {\n\t        this.router.navigate(['/l/quest', quest_id]);\n\t    };\n\t    BadgeComponent.prototype.navigateToTask = function (task_id) {\n\t        this.router.navigate(['/l/task', task_id]);\n\t    };\n\t    BadgeComponent.prototype.navigateToBadge = function (badge_id) {\n\t        this.router.navigate(['/l/badge', badge_id]);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], BadgeComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], BadgeComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], BadgeComponent.prototype, \"badge_id\", void 0);\n\t    BadgeComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'badge-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <!-- Overview of badge -->\\n          <div id=\\\"cf-ba-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abzeichen {{getBadgeData().badgename}}</p>\\n\\n              <div class=\\\"depend-on-device-fifty-to-hundred-percentage-width depend-on-device-left-to-none-float\\\" style=\\\"padding:0 1em;\\\">\\n                  <div id=\\\"cf-ba-overview-badge-pic\\\" style=\\\"width:40%;margin-left:auto;margin-right:auto;\\\">\\n                      <div style='position:relative;'>\\n                          <img style='position:relative;top:0;left:0;width:100%;' src='{{lService.getPictureLink(getBadgeData().picture_id)}}'>\\n                          <div class='fa'\\n                            [class.fa-check-square]=\\\"getUserBadge().completed=='1'\\\"\\n                            [class.fa-minus-square]=\\\"getUserBadge().completed=='0'\\\" style='position:absolute;right:0;margin:0.3em;font-size:2em!important;color:white;'></div>\\n                      </div>\\n                  </div>\\n\\n                  <p id=\\\"cf-ba-overview-badge-description\\\" style=\\\"text-align:justify;\\\" [innerHTML]=\\\"getBadgeData().description_long\\\"></p>\\n              </div>\\n              <div class=\\\"depend-on-device-fifty-to-hundred-percentage-width depend-on-device-left-to-none-float\\\" style=\\\"padding:0 1em;\\\">\\n                  <div style=\\\"text-align:center;margin-top:0.3em;margin-bottom:0.5em;\\\">Ben\\u00F6tigte Aufgaben um Abzeichen zu sammeln</div>\\n                  <div *ngFor=\\\"let t_task of getProgressTasks()\\\" class='cf-ba-overview-task' style='overflow:hidden;cursor:pointer;font-weight:bold;font-size:1em;color:rgb(255,255,255);border:0px solid rgb(0,0,0);border-radius:4px;padding:0.2em 0.3em;background:rgb(50,50,50);margin-top:2px;margin-bottom:2px;' (click)=\\\"navigateToTask(t_task.task_id)\\\">\\n                    {{t_task.taskname}} <br />\\n                    <button class='fa'\\n                      [class.fa-check-square]=\\\"t_task.completed=='1'\\\"\\n                      [class.fa-minus-square]=\\\"t_task.completed=='0'\\\"\\n                      [style.color]=\\\"t_task.completed=='1'?'rgb(0,150,0)':'rgb(150,0,0)'\\\" style='padding:0;font-size:1em;border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;\\\"></div>\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], BadgeComponent);\n\t    return BadgeComponent;\n\t}());\n\texports.BadgeComponent = BadgeComponent;\n\t//# sourceMappingURL=badge.component.js.map\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar EditBadgeComponent = (function () {\n\t    function EditBadgeComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.badgedataoutput = new core_1.EventEmitter();\n\t        this.reload = new core_1.EventEmitter();\n\t    }\n\t    EditBadgeComponent.prototype.ngOnInit = function () {\n\t        if (typeof this.badgedata.badge_id === 'undefined' || this.badgedata.badge_id == -1) {\n\t            this.badgedata = {\n\t                de_DE: {\n\t                    badgename: \"\",\n\t                    description_long: \"\",\n\t                    solved_description: \"\"\n\t                },\n\t                badge_id: -1,\n\t                is_active: \"1\",\n\t                json_task_ids: [],\n\t                picture_id: -1\n\t            };\n\t        }\n\t    };\n\t    EditBadgeComponent.prototype.getUniversalContentPictures = function () {\n\t        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n\t    };\n\t    EditBadgeComponent.prototype.updateBadgeData = function () {\n\t        if (typeof this.badgedata !== 'undefined')\n\t            this.badgedataoutput.emit(this.badgedata);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditBadgeComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditBadgeComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditBadgeComponent.prototype, \"badgedata\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditBadgeComponent.prototype, \"alltasksdata\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], EditBadgeComponent.prototype, \"badgedataoutput\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], EditBadgeComponent.prototype, \"reload\", void 0);\n\t    EditBadgeComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'editbadge-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div style=\\\"margin:0;padding:0;\\\" (focusout)=\\\"updateBadgeData()\\\" (mouseleave)=\\\"updateBadgeData()\\\">\\n\\n    <!-- badgename, Description of badge -->\\n    <div>\\n        <div style=\\\"float:left;width:100%;\\\">\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Abzeichenname<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <input [(ngModel)]=\\\"badgedata.de_DE.badgename\\\" type=\\\"text\\\" placeholder=\\\"Abzeichenname\\\" style=\\\"width:100%;\\\"/>\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Beschreibung des Abzeichens<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <htmleditor-component [value]=\\\"badgedata.de_DE.description_long\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"badgedata.de_DE.description_long=$event;updateBadgeData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>Meldung, welche der User bei erfolgreichem L\\u00F6sen erh\\u00E4lt<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <htmleditor-component [value]=\\\"badgedata.de_DE.solved_description\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"badgedata.de_DE.solved_description=$event;updateBadgeData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n        </div>\\n        <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n    </div>\\n\\n    <!-- To solve tasks for badge -->\\n    <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Zu l\\u00F6sende Aufgaben, um Abzeichen zu sammeln<span style=\\\"color:#e9266d\\\">*</span></label>\\n    <br>\\n    <selecttask-component [chooseabletaskarray]=\\\"alltasksdata\\\" [selectedtaskarray]=\\\"badgedata.json_task_ids\\\" (taskarray)=\\\"badgedata.json_task_ids=$event;\\\"></selecttask-component>\\n    <hr class=\\\"hrForAdministration\\\">\\n\\n    <!-- badge pic -->\\n    <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">5.) </span>Abzeichenbild<span style=\\\"color:#e9266d\\\">*</span></label>\\n    <br>\\n    <div >\\n        <div style=\\\"float:left;width:50%;margin-top:10px;\\\">\\n            <select [(ngModel)]=\\\"badgedata.picture_id\\\" style=\\\"width:100%;\\\">\\n                <option *ngFor=\\\"let t_picture of getUniversalContentPictures();\\\" value='{{t_picture.picture_id}}'>{{t_picture.picturename}}</option>\\n            </select>\\n        </div>\\n        <div style=\\\"float:left;width:50%;text-align:right;\\\">\\n            <uploadpicture-component (reload)=\\\"reload.emit(true);\\\"></uploadpicture-component>\\n        </div>\\n        <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n        <div [hidden]=\\\"badgedata.picture_id==-1\\\" style=\\\"text-align:center;\\\">\\n            <label style=\\\"width:100%;text-align:center;\\\">Abzeichen Vorschau</label>\\n            <br>\\n            <img style='width:30%;' src='{{lService.getPictureLink(badgedata.picture_id)}}'>\\n        </div>\\n    </div>\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], EditBadgeComponent);\n\t    return EditBadgeComponent;\n\t}());\n\texports.EditBadgeComponent = EditBadgeComponent;\n\t//# sourceMappingURL=editbadge.component.js.map\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar EditQuestComponent = (function () {\n\t    function EditQuestComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.questdataoutput = new core_1.EventEmitter();\n\t        this.reload = new core_1.EventEmitter();\n\t        this.LevelsLength = 1;\n\t    }\n\t    EditQuestComponent.prototype.ngOnInit = function () {\n\t        if (typeof this.questdata.quest_id === 'undefined' || this.questdata.quest_id == -1) {\n\t            this.questdata = {\n\t                quest_id: -1,\n\t                de_DE: {\n\t                    questname: \"\",\n\t                    solved_description: \"\"\n\t                },\n\t                is_active: \"1\",\n\t                json_pre_quest_ids: [],\n\t                json_quest_task_ids: [[]],\n\t                location_id: -1,\n\t                is_starter_quest: \"0\",\n\t                score_rule: \"10\"\n\t            };\n\t        }\n\t        if (this.questdata.location_id == null) {\n\t            this.questdata.location_id = -1;\n\t        }\n\t        this.LevelsLength = this.questdata.json_quest_task_ids.length;\n\t    };\n\t    EditQuestComponent.prototype.getUniversalContentPictures = function () {\n\t        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n\t    };\n\t    EditQuestComponent.prototype.changeQuestTaskLevelLength = function (event) {\n\t        var t_value = parseInt(event.target.value);\n\t        var t_diff = t_value - this.questdata.json_quest_task_ids.length;\n\t        if (this.questdata.json_quest_task_ids.length > t_value) {\n\t            for (var i = this.questdata.json_quest_task_ids.length; i > 0; i--) {\n\t                if ((i - 1) >= t_value) {\n\t                    this.questdata.json_quest_task_ids.splice(i - 1, 1);\n\t                }\n\t            }\n\t        }\n\t        else if (this.questdata.json_quest_task_ids.length < t_value) {\n\t            for (var i = 0; i < t_diff; i++) {\n\t                this.questdata.json_quest_task_ids.push([]);\n\t            }\n\t        }\n\t    };\n\t    EditQuestComponent.prototype.updateQuestData = function () {\n\t        if (typeof this.questdata !== 'undefined')\n\t            this.questdataoutput.emit(this.questdata);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"questdata\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"allquestsdata\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"alltasksdata\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"locationsdata\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"questdataoutput\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], EditQuestComponent.prototype, \"reload\", void 0);\n\t    EditQuestComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'editquest-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n      <div style=\\\"margin:0;padding:0;\\\" (focusout)=\\\"updateQuestData()\\\" (mouseleave)=\\\"updateQuestData()\\\">\\n\\n            <!-- questname -->\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Questname<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <input [(ngModel)]=\\\"questdata.de_DE.questname\\\" type=\\\"text\\\"  placeholder=\\\"Questname\\\" style=\\\"width:100%;\\\">\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- solved_description -->\\n            <label id=\\\"label-quest-solved-description\\\" style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Meldung, welche der User bei erfolgreichem L\\u00F6sen erh\\u00E4lt<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <htmleditor-component [value]=\\\"questdata.de_DE.solved_description\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"questdata.de_DE.solved_description=$event;updateQuestData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- Location of quest -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>Fundort des Quests</label>\\n            <br>\\n            <select [(ngModel)]=\\\"questdata.location_id\\\" style=\\\"width:100%;\\\">\\n                <option value='-1' selected=\\\"selected\\\">--None--</option>\\n                <option *ngFor=\\\"let t_location of locationsdata;\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n            </select>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- pre quests -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Vorquests, um Quest zu erhalten und l\\u00F6sen zu k\\u00F6nnen</label>\\n            <br>\\n            <selectquest-component [chooseablequestarray]=\\\"allquestsdata\\\" [selectedquestarray]=\\\"questdata.json_pre_quest_ids\\\" (questarray)=\\\"questdata.json_pre_quest_ids=$event;updateQuestData();\\\"></selectquest-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- levels with to solve tasks -->\\n            <div >\\n                <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">5.) </span>Anzahl der Aufgabenstufen und Aufgaben f\\u00FCr jede Stufe<span style=\\\"color:#e9266d\\\">*</span></label>\\n                <br>\\n                <select [(ngModel)]=\\\"LevelsLength\\\" (change)=\\\"changeQuestTaskLevelLength($event)\\\" style=\\\"width:100%;\\\">\\n                    <option value=\\\"1\\\">1 Level</option>\\n                    <option value=\\\"2\\\">2 Levels</option>\\n                    <option value=\\\"3\\\">3 Levels</option>\\n                    <option value=\\\"4\\\">4 Levels</option>\\n                    <option value=\\\"5\\\">5 Levels</option>\\n                    <option value=\\\"6\\\">6 Levels</option>\\n                    <option value=\\\"7\\\">7 Levels</option>\\n                    <option value=\\\"8\\\">8 Levels</option>\\n                    <option value=\\\"9\\\">9 Levels</option>\\n                    <option value=\\\"10\\\">10 Levels</option>\\n                </select>\\n                <div>\\n\\n                    <div *ngFor=\\\"let t_level of questdata.json_quest_task_ids;let i = index;\\\" class=\\\"add-quest-tasks-level-1\\\" style=\\\"width:calc(100% - 10px);border:1px solid rgb(200,200,200);margin-left:10px;margin-bottom:5px;padding:3px;\\\">\\n                        <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">{{i+1}}.) </span>Aufgaben f\\u00FCr Stufe {{i+1}}</label>\\n                        <selecttask-component [chooseabletaskarray]=\\\"alltasksdata\\\" [selectedtaskarray]=\\\"questdata.json_quest_task_ids[i]\\\" (taskarray)=\\\"questdata.json_quest_task_ids[i]=$event;updateQuestData();\\\"></selecttask-component>\\n                    </div>\\n\\n                </div>\\n            </div>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- score rule -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">6.) </span>Exp. f\\u00FCr User bei Abschluss des Quests<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <input [(ngModel)]=\\\"questdata.score_rule\\\" type=\\\"text\\\" style=\\\"width:100%;padding-left:0.3em;\\\">\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- is starter quest? -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">7.) </span>Ist der Quest schon bei Spielbeginn dem User bekannt</label>\\n            <br>\\n            <input [checked]=\\\"questdata.is_starter_quest=='1'\\\" (click)=\\\"questdata.is_starter_quest=='1'?questdata.is_starter_quest='0':questdata.is_starter_quest='1';\\\" type=\\\"checkbox\\\" style=\\\"width:25px;margin-left:48%;\\\" />\\n\\n        </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], EditQuestComponent);\n\t    return EditQuestComponent;\n\t}());\n\texports.EditQuestComponent = EditQuestComponent;\n\t//# sourceMappingURL=editquest.component.js.map\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar EditTaskComponent = (function () {\n\t    function EditTaskComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.taskdataoutput = new core_1.EventEmitter();\n\t        this.reload = new core_1.EventEmitter();\n\t    }\n\t    EditTaskComponent.prototype.ngOnInit = function () {\n\t        console.log(\"EditTask Init\");\n\t        if (typeof this.taskdata.task_id === 'undefined' || this.taskdata.task_id == -1) {\n\t            this.taskdata = {\n\t                task_id: -1,\n\t                task_type_id: 1,\n\t                json_task_data: {},\n\t                de_DE: {\n\t                    taskname: \"\",\n\t                    description_long: \"\",\n\t                    solved_description: \"\"\n\t                },\n\t                is_task_active: \"1\",\n\t                score_rule: \"10\",\n\t                location_id: -1\n\t            };\n\t            this.changeTaskType();\n\t        }\n\t        if (typeof this.taskdata.location_id !== 'undefined' && this.taskdata.location_id == null)\n\t            this.taskdata.location_id = -1;\n\t        console.log(this.taskdata.de_DE);\n\t        console.log(this.taskdata);\n\t    };\n\t    EditTaskComponent.prototype.getUniversalContentPictures = function () {\n\t        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n\t    };\n\t    EditTaskComponent.prototype.changeTaskType = function () {\n\t        if (this.taskdata.task_type_id == 1) {\n\t            this.taskdata.json_task_data = { de_DE: { a1: \"\", a2: \"\", a3: \"\", a4: \"\", question: \"\" } };\n\t        }\n\t        else if (this.taskdata.task_type_id == 2) {\n\t            this.taskdata.json_task_data = { loc: 1 };\n\t        }\n\t        else if (this.taskdata.task_type_id == 3) {\n\t            this.taskdata.json_task_data = { isbn: \"\" };\n\t        }\n\t        else if (this.taskdata.task_type_id == 4) {\n\t            this.taskdata.json_task_data = { de_DE: { s1: \"\", s2: \"\", s3: \"\" } };\n\t        }\n\t        else if (this.taskdata.task_type_id == 5) {\n\t            this.taskdata.json_task_data = { de_DE: { answer: \"\", text: \"\" } };\n\t        }\n\t        else if (this.taskdata.task_type_id == 6) {\n\t            this.taskdata.json_task_data = {};\n\t        }\n\t    };\n\t    EditTaskComponent.prototype.updateTaskData = function () {\n\t        if (typeof this.taskdata !== 'undefined')\n\t            this.taskdataoutput.emit(this.taskdata);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditTaskComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditTaskComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditTaskComponent.prototype, \"taskdata\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditTaskComponent.prototype, \"locationsdata\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EditTaskComponent.prototype, \"tasktypesdata\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], EditTaskComponent.prototype, \"taskdataoutput\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], EditTaskComponent.prototype, \"reload\", void 0);\n\t    EditTaskComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'edittask-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n    <div style=\\\"margin:0;padding:0;\\\" (focusout)=\\\"updateTaskData()\\\" (mouseleave)=\\\"updateTaskData()\\\">\\n\\n      <!-- taskname, Description of task -->\\n      <div>\\n          <div  style=\\\"float:left;width:100%;\\\">\\n              <hr class=\\\"hrForAdministration\\\">\\n              <label  style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Name der Aufgabe<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <input [(ngModel)]=\\\"taskdata.de_DE.taskname\\\" type=\\\"text\\\" name=\\\"task-name\\\" placeholder=\\\"Name der Aufgabe\\\" style=\\\"width:100%;\\\"/>\\n              <hr class=\\\"hrForAdministration\\\">\\n              <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Beschreibung der Aufgabe<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <htmleditor-component [value]=\\\"taskdata.de_DE.description_long\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.de_DE.description_long=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n              <hr class=\\\"hrForAdministration\\\">\\n              <label  style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>Meldung, welche der User bei erfolgreichem L\\u00F6sen erh\\u00E4lt<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <htmleditor-component [value]=\\\"taskdata.de_DE.solved_description\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.de_DE.solved_description=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n              <hr class=\\\"hrForAdministration\\\">\\n          </div>\\n          <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n      </div>\\n\\n      <!-- Location of task -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Fundort der Aufgabe</label>\\n      <br>\\n      <select [(ngModel)]=\\\"taskdata.location_id\\\"  style=\\\"width:100%;\\\">\\n        <option value='-1' selected=\\\"selected\\\">--None--</option>\\n        <option *ngFor=\\\"let t_location of locationsdata;\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n      </select>\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <!-- score_rule -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">5.) </span>Exp., welche vom User gesammelt werden kann<span style=\\\"color:#e9266d\\\">*</span></label>\\n      <br>\\n      <input [(ngModel)]=\\\"taskdata.score_rule\\\" type=\\\"text\\\" style=\\\"width:100%;padding-left:0.3em;\\\">\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <!-- task type -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">6.) </span>W\\u00E4hle den Aufgabentyp (Dieser bestimmt die nun folgenden Eingaben)<span style=\\\"color:#e9266d\\\">*</span></label>\\n      <br>\\n      <select [(ngModel)]=\\\"taskdata.task_type_id\\\" (change)=\\\"changeTaskType()\\\" style=\\\"width:100%;\\\">\\n        <option *ngFor=\\\"let t_task_type of tasktypesdata;\\\" value='{{t_task_type.task_type_id}}'>-- {{t_task_type.task_type_name}} --</option>\\n      </select>\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <!-- Specification of task depend on task type -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">7.) </span>Aufgabenspezifikation [abh\\u00E4ngig von dem Aufgabetyp]<span style=\\\"color:#e9266d\\\">*</span></label>\\n      <br>\\n      <div style=\\\"width:100%;\\\">\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==1\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"float:left;width:100%;\\\">\\n                  <div style=\\\"width:100%;\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Frage<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.question\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.question=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.2.) </span>Richtige Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a1\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a1=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.3.) </span>1. Falsche Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a2\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a2=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.4.) </span>2. Falsche Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a3\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a3=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.5.) </span>3. Falsche Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a4\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a4=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==2\\\" style=\\\"width:100%;\\\">\\n              <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Ort<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <select [(ngModel)]=\\\"taskdata.json_task_data.loc\\\" style=\\\"width:100%;\\\">\\n                  <option value='-1' selected=\\\"selected\\\">--None--</option>\\n                  <option *ngFor=\\\"let t_location of locationsdata;\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n              </select>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==3\\\" style=\\\"width:100%;\\\">\\n              <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>ISBN<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <input [(ngModel)]=\\\"taskdata.json_task_data.isbn\\\" type=\\\"text\\\" placeholder=\\\"ISBN\\\" style=\\\"width:100%;\\\">\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==4\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"float:left;width:100%;\\\">\\n                  <div style=\\\"width:100%;\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Quelle 1 (gr\\u00FCn)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.s1\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.s1=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.2.) </span>Quelle 2 (gelb)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.s2\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.s2=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.3.) </span>Quelle 3 (rot)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.s3\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.s3=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==5\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"float:left;width:100%;\\\">\\n                  <div style=\\\"width:100%;\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Text mit L\\u00FCcke<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"taskdata.json_task_data.de_DE.text\\\" type=\\\"text\\\" class=\\\"input-add-task-specification-task-type-5-text-with-blank\\\" placeholder=\\\"Text mit L\\u00FCcke\\\" style=\\\"width:100%;\\\">\\n                      <button class=\\\"add-task-specification-task-type-5-mail-to-users-button button\\\" (click)=\\\"taskdata.json_task_data.de_DE.text=taskdata.json_task_data.de_DE.text+'[::BLANK::]';\\\" style=\\\"width:100%;cursor:pointer;text-align:center;padding:0.1em 0;\\\">Klicke hier, um die L\\u00FCcke einzuf\\u00FCgen!</button>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.2.) </span>Richtige Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"taskdata.json_task_data.de_DE.answer\\\" type=\\\"text\\\" class=\\\"input-add-task-specification-task-type-5-correct-answer\\\" placeholder=\\\"Richtige Antwort\\\" style=\\\"width:100%;\\\">\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==6\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"text-align:center;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Keine ben\\u00F6tigt</div>\\n          </div>\\n      </div>\\n\\n    </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], EditTaskComponent);\n\t    return EditTaskComponent;\n\t}());\n\texports.EditTaskComponent = EditTaskComponent;\n\t//# sourceMappingURL=edittask.component.js.map\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar LegalComponent = (function () {\n\t    function LegalComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t    }\n\t    LegalComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        this.lService.loadSpecificContent('legal');\n\t    };\n\t    LegalComponent.prototype.getTOU = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['TOU'] !== 'undefined' ? this.specificcontent['TOU'] : { text: \"\" };\n\t    };\n\t    LegalComponent.prototype.getPP = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PP'] !== 'undefined' ? this.specificcontent['PP'] : { text: \"\" };\n\t    };\n\t    LegalComponent.prototype.getIMPRESSUM = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['IMPRESSUM'] !== 'undefined' ? this.specificcontent['IMPRESSUM'] : { text: \"\" };\n\t    };\n\t    LegalComponent.prototype.getLegalcontent = function () {\n\t        if (this.legalcomponent == 'tou') {\n\t            return this.getTOU()[\"text\"];\n\t        }\n\t        else if (this.legalcomponent == 'pp') {\n\t            return this.getPP()[\"text\"];\n\t        }\n\t        else if (this.legalcomponent == 'impressum') {\n\t            return this.getIMPRESSUM()[\"text\"];\n\t        }\n\t        else {\n\t            return 'Nothing found!';\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], LegalComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], LegalComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], LegalComponent.prototype, \"legalcomponent\", void 0);\n\t    LegalComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'legal-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n    <section class=\\\"col-xs-12\\\" style=\\\"padding:0;background:white;\\\">\\n\\n        <div class=\\\"content-frame\\\">\\n\\n          <p *ngIf=\\\"legalcomponent=='tou'\\\" class=\\\"headline\\\"style=\\\"margin-top:10px;\\\">Allgemeine Gesch\\u00E4ftsbedingungen</p>\\n          <p *ngIf=\\\"legalcomponent=='pp'\\\" class=\\\"headline\\\"style=\\\"margin-top:10px;\\\">Datenschutzerkl\\u00E4rung</p>\\n          <p *ngIf=\\\"legalcomponent=='impressum'\\\" class=\\\"headline\\\"style=\\\"margin-top:10px;\\\">Impressum</p>\\n\\n          <div style=\\\"margin-top:20px;width:100%;padding:0 3em;\\\" [innerHTML]=\\\"getLegalcontent()\\\">\\n          </div>\\n\\n        </div>\\n\\n    </section>\\n</div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], LegalComponent);\n\t    return LegalComponent;\n\t}());\n\texports.LegalComponent = LegalComponent;\n\t//# sourceMappingURL=legal.component.js.map\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar HighscorelistComponent = (function () {\n\t    function HighscorelistComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = [];\n\t        this.loading_specificcontent = true;\n\t        this.number_of_shown_users_per_page = 20;\n\t    }\n\t    HighscorelistComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        this.lService.loadSpecificContent('highscorelist');\n\t    };\n\t    HighscorelistComponent.prototype.getRankedHighscoreListArray = function () {\n\t        return typeof this.specificcontent !== 'undefined' ? this.specificcontent : [];\n\t    };\n\t    HighscorelistComponent.prototype.getCurrentShownUsers = function () {\n\t        return this.getRankedHighscoreListArray().slice(this.highscorepage * this.number_of_shown_users_per_page, (this.highscorepage + 1) * this.number_of_shown_users_per_page);\n\t    };\n\t    HighscorelistComponent.prototype.getArrayTotalNumberOfHighscorePages = function () {\n\t        var t_return = [];\n\t        for (var i = 0; i < Math.ceil(this.getRankedHighscoreListArray().length / this.number_of_shown_users_per_page); i++)\n\t            t_return.push(i);\n\t        return t_return;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], HighscorelistComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], HighscorelistComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], HighscorelistComponent.prototype, \"highscorepage\", void 0);\n\t    HighscorelistComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'highscorelist-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-hi-highscore-list\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Highscore</p>\\n\\n              <div style=\\\"display:table;width:100%;border-spacing:2px 2px;color:rgb(255,255,255);\\\">\\n\\n                  <div style='display:table-row;width:100%;'>\\n\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Rang</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Name</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Exp.</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Fak.</p>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div *ngFor=\\\"let t_user of getCurrentShownUsers();\\\" [style.background]=\\\"t_user.user_id==user.user_id?'#990000':'inherit'\\\" style='display:table-row;vertical-align:top;'>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1.3em;text-align:center;'>{{t_user.ranking}}</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1em;text-align:center;'>{{t_user.username}}</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1.1em;text-align:center;'>{{t_user.user_score}}</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1em;text-align:center;'>{{t_user.facultyname}}</p>\\n                      </div>\\n                  </div>\\n\\n\\n\\n              </div>\\n\\n              <!-- Navigation Highscore List -->\\n\\n              <div style=\\\"width:95%;margin-top:20px;margin-bottom:0.3em;margin-left:auto;margin-right:auto;\\\">\\n\\n                <div *ngFor=\\\"let t_pageid of getArrayTotalNumberOfHighscorePages()\\\"\\n                  [class.cf-hi-nav-item-unselected]=\\\"t_pageid!=highscorepage\\\"\\n                  [class.cf-hi-nav-item]=\\\"t_pageid==highscorepage\\\"\\n                  (click)=\\\"highscorepage=t_pageid;\\\"\\n                  style='float:left;margin-right:2px;padding:10px 15px;border:1px solid black;'>{{t_pageid+1}}</div>\\n\\n                <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], HighscorelistComponent);\n\t    return HighscorelistComponent;\n\t}());\n\texports.HighscorelistComponent = HighscorelistComponent;\n\t//# sourceMappingURL=highscorelist.component.js.map\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar router_1 = __webpack_require__(29);\n\tvar LoggedcontentComponent = (function () {\n\t    function LoggedcontentComponent(router, route, lService) {\n\t        this.router = router;\n\t        this.route = route;\n\t        this.lService = lService;\n\t        this.user = {};\n\t        this.loading_user = true;\n\t        this.universalcontent = {};\n\t        this.loading_universalcontent = true;\n\t        this.showncomponent = \"\";\n\t        this.timeframeForCheckingLocation = 30000;\n\t        this.intervalTimerManageCheckLocation = null;\n\t        //Solved Overlay\n\t        this.solvedOverlayArray = [];\n\t        //Small Screen\n\t        this.toggled = false;\n\t        //Unmendatory\n\t        this.badge_id = \"\";\n\t        this.quest_id = \"\";\n\t        this.task_id = \"\";\n\t        this.legalcomponent = \"\";\n\t        this.highscorepage = 0;\n\t        this.additionalinformation = \"\";\n\t        this.locationfound_id = \"\";\n\t        this.reg_username = \"\";\n\t        this.reg_username_valid = true;\n\t        this.reg_username_exists = false;\n\t        this.reg_email = \"\";\n\t        this.reg_email_valid = true;\n\t        this.reg_email_exists = false;\n\t        this.reg_password = \"\";\n\t        this.reg_password_valid = true;\n\t        this.reg_password_repeat = \"\";\n\t        this.reg_password_repeat_valid = true;\n\t        this.reg_faculty_id = -2;\n\t    }\n\t    LoggedcontentComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.sub = this.route.params.subscribe(function (params) {\n\t            var scroll = typeof params['scroll'] !== 'undefined' ? params['scroll'] : '';\n\t            if (typeof scroll !== 'undefined' && scroll.length > 0) {\n\t                $('html, body').animate({ scrollTop: ($('#' + scroll).offset().top) }, 'slow');\n\t            }\n\t            else {\n\t                $('html, body').animate({ scrollTop: 0 }, 'slow');\n\t            }\n\t        });\n\t        $('#titleBar').show();\n\t        //User\n\t        this.loading_user = true;\n\t        this.lService.user$.subscribe(function (user) {\n\t            if (typeof user === 'undefined' || typeof user.user_id === 'undefined') {\n\t                _this.navigateToUnloggedComponent('home');\n\t            }\n\t            _this.user = user;\n\t            _this.loading_user = false;\n\t            if (typeof _this.user.user_id !== 'undefined' && _this.user.user_id != -1) {\n\t                _this.manageCheckLocation();\n\t                if (_this.intervalTimerManageCheckLocation != null) {\n\t                    window.clearInterval(_this.intervalTimerManageCheckLocation);\n\t                }\n\t                _this.intervalTimerManageCheckLocation = window.setInterval(function () { _this.manageCheckLocation(); }, _this.timeframeForCheckingLocation);\n\t            }\n\t        });\n\t        this.lService.loadUser();\n\t        //Universal Content\n\t        this.loading_universalcontent = true;\n\t        this.lService.universalcontent$.subscribe(function (universalcontent) {\n\t            _this.universalcontent = universalcontent;\n\t            _this.loading_universalcontent = false;\n\t        });\n\t        this.lService.loadUniversalContent();\n\t        //Sub Route\n\t        this.sub = this.route.params.subscribe(function (params) {\n\t            var component = typeof params['component'] !== 'undefined' ? params['component'] : '';\n\t            var id = typeof params['id'] !== 'undefined' ? params['id'] : '';\n\t            var additionalinformation = typeof params['additionalinformation'] !== 'undefined' ? params['additionalinformation'] : '';\n\t            component = component.toLowerCase();\n\t            id = id.toLowerCase();\n\t            if (component.length == 0 || component == 'tasks') {\n\t                _this.showncomponent = 'tasks';\n\t            }\n\t            else if (component == 'administration') {\n\t                _this.showncomponent = 'administration';\n\t            }\n\t            else if (component == 'task' && id.length != 0) {\n\t                _this.showncomponent = 'task';\n\t                _this.task_id = id;\n\t                _this.additionalinformation = additionalinformation;\n\t            }\n\t            else if (component == 'tasksearch') {\n\t                _this.showncomponent = 'tasksearch';\n\t            }\n\t            else if (component == 'highscorelist') {\n\t                _this.showncomponent = 'highscorelist';\n\t                _this.highscorepage = parseInt(id);\n\t            }\n\t            else if (component == 'quest' && id.length != 0) {\n\t                _this.showncomponent = 'quest';\n\t                _this.quest_id = id;\n\t            }\n\t            else if (component == 'badge' && id.length != 0) {\n\t                _this.showncomponent = 'badge';\n\t                _this.badge_id = id;\n\t            }\n\t            else if (component == 'legal' && id.length != 0) {\n\t                _this.showncomponent = 'legal';\n\t                _this.legalcomponent = id;\n\t            }\n\t            else if (component == 'statistics') {\n\t                _this.showncomponent = 'statistics';\n\t            }\n\t            else if (component == 'userprogress') {\n\t                _this.showncomponent = 'userprogress';\n\t            }\n\t            else if (component == 'usersettings') {\n\t                _this.showncomponent = 'usersettings';\n\t            }\n\t            else if (component == 'locationfound' && id.length != 0) {\n\t                _this.showncomponent = 'tasks';\n\t                _this.locationfound_id = id;\n\t                _this.checkLocation(\"\", \"\", _this.locationfound_id);\n\t            }\n\t            else {\n\t                _this.showncomponent = 'tasks';\n\t            }\n\t        });\n\t    };\n\t    LoggedcontentComponent.prototype.getUniversalContentFacultyArray = function () {\n\t        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Faculties\"] !== 'undefined') {\n\t            return this.universalcontent[\"_Faculties\"];\n\t        }\n\t        return [];\n\t    };\n\t    LoggedcontentComponent.prototype.getUniversalContentAnonymousUserPhrase = function () {\n\t        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"Anonymous_User_Phrase\"] !== 'undefined') {\n\t            return this.universalcontent[\"Anonymous_User_Phrase\"];\n\t        }\n\t        return \"\";\n\t    };\n\t    LoggedcontentComponent.prototype.getUniversalContentMainPictureId = function () {\n\t        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; }).length != 0) {\n\t            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; })[0].text;\n\t        }\n\t        return -1;\n\t    };\n\t    LoggedcontentComponent.prototype.isUserAnonymousUser = function () {\n\t        if (typeof this.user === 'undefined' || typeof this.user.username === 'undefined') {\n\t            return false;\n\t        }\n\t        if (this.getUniversalContentAnonymousUserPhrase().length == 0) {\n\t            return false;\n\t        }\n\t        if (this.user.username.indexOf(this.getUniversalContentAnonymousUserPhrase()) > -1) {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    LoggedcontentComponent.prototype.isUserAdminUser = function () {\n\t        if (typeof this.user === 'undefined' || typeof this.user.user_type_id === 'undefined' || (this.user.user_type_id != 1 && this.user.user_type_id != 2)) {\n\t            return false;\n\t        }\n\t        return true;\n\t    };\n\t    LoggedcontentComponent.prototype.logoutUser = function () {\n\t        var _this = this;\n\t        this.lService.logoutUser().subscribe(function (data) {\n\t            _this.router.navigate([\"/u/home\"]);\n\t        }, function (error) { console.error('Could not logout user.'); });\n\t    };\n\t    LoggedcontentComponent.prototype.navigateToComponent = function (componentname) {\n\t        this.router.navigate([\"/l/\" + componentname]);\n\t    };\n\t    LoggedcontentComponent.prototype.navigateToUnloggedComponent = function (componentname) {\n\t        this.router.navigate([\"/u/\" + componentname]);\n\t    };\n\t    LoggedcontentComponent.prototype.navigateToLegal = function (legalcomponentname) {\n\t        this.router.navigate([\"/l/legal\", legalcomponentname]);\n\t    };\n\t    LoggedcontentComponent.prototype.ngOnDestroy = function () {\n\t        this.sub.unsubscribe();\n\t        if (this.intervalTimerManageCheckLocation != null) {\n\t            window.clearInterval(this.intervalTimerManageCheckLocation);\n\t        }\n\t    };\n\t    LoggedcontentComponent.prototype.deleteUser = function () {\n\t        var _this = this;\n\t        if (confirm(\"Möchtest du deinen User jetzt löschen?\") == true) {\n\t            this.lService.deleteUser().subscribe(function (data) {\n\t                if (typeof data.result !== 'undefined' && data.result == true) {\n\t                    _this.navigateToUnloggedComponent(\"home\");\n\t                }\n\t                else {\n\t                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t                }\n\t            }, function (error) {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            });\n\t        }\n\t    };\n\t    //checkLocation\n\t    LoggedcontentComponent.prototype.manageCheckLocation = function () {\n\t        var _this = this;\n\t        if (navigator.geolocation) {\n\t            navigator.geolocation.getCurrentPosition(function (p) {\n\t                /*lati = p.coords.latitude;\n\t                long = p.coords.longitude;*/\n\t                _this.checkLocation(p.coords.latitude, p.coords.longitude, \"\");\n\t            }, function (error) {\n\t                console.log('Positioning Error: ');\n\t                console.log(error);\n\t                window.alert(\"Positionieren des Nutzers nicht möglich! Fehler: \" + (typeof error.message !== 'undefined' ? error.message : ''));\n\t            }, {\n\t                enableHighAccuracy: true,\n\t                maximumAge: 1000000\n\t            });\n\t        }\n\t        else {\n\t            window.alert(\"Bitte erlaube dem Spiel deine Position zu checken, da sonst das Spiel für dich nicht in vollem Umfang spielbar ist. Deine Position wird NICHT permanent gespeichert, sondern nur kurz (5-10 Sekunden) für die Suche von Aufgaben und Quests in deiner Nähe benutzt!\");\n\t        }\n\t    };\n\t    LoggedcontentComponent.prototype.checkLocation = function (lati, long, location_id) {\n\t        var _this = this;\n\t        if ((typeof lati === 'undefined' || typeof long === 'undefined') && typeof location_id === 'undefined') {\n\t            return;\n\t        }\n\t        this.lService.checkLocation(lati, long, location_id).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true && data.data != null) {\n\t                //console.log(data);\n\t                //New Tasks\n\t                for (var key in data.data[\"new_tasks\"]) {\n\t                    _this.solvedOverlayArray.push({\n\t                        type: 4,\n\t                        name: \"Aufgabe gefunden\",\n\t                        solved_description: \"Du hast eine neue Aufgabe gefunden: '\" + data.data[\"new_tasks\"][key][\"taskname\"] + \"'. Du findest sie ab sofort unter deinen aktuellen Aufgaben!\"\n\t                    });\n\t                }\n\t                //New Quests\n\t                for (var key in data.data[\"new_quests\"]) {\n\t                    _this.solvedOverlayArray.push({\n\t                        type: 4,\n\t                        name: \"Quest gefunden\",\n\t                        solved_description: \"Du hast einen neuen Quest gefunden: '\" + data.data[\"new_quests\"][key][\"questname\"] + \"'. Du findest sie ab sofort unter deinen aktuellen Aufgaben!\"\n\t                    });\n\t                }\n\t                //Solved Tasks\n\t                for (var key in data.data[\"all_tasks_to_solve_in_near\"]) {\n\t                    var t_solved_quests = \"\";\n\t                    var t_solved_badges = \"\";\n\t                    if (typeof data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"] !== 'undefined') {\n\t                        for (var t_key_quests in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"]) {\n\t                            t_solved_quests += \"-\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"questname\"] + \"<br />\";\n\t                        }\n\t                        for (var t_key_badges in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"]) {\n\t                            t_solved_badges += \"-\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"][t_key_badges][\"badgename\"] + \"<br />\";\n\t                        }\n\t                    }\n\t                    _this.solvedOverlayArray.push({\n\t                        type: 1,\n\t                        name: \"Aufgabe erfüllt\",\n\t                        solved_description: \"Herzlichen Glückwunsch! Du hast die Aufgabe '\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"taskname\"] + \"' abgeschlossen.\",\n\t                        score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"score_rule\"],\n\t                        faculty_score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"added_score_for_faculty\"],\n\t                        solved_quests: t_solved_quests,\n\t                        solved_badges: t_solved_badges\n\t                    });\n\t                    //Solved Quests\n\t                    if (typeof data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"] !== 'undefined') {\n\t                        for (var t_key_quests in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"]) {\n\t                            _this.solvedOverlayArray.push({\n\t                                type: 3,\n\t                                name: \"Quest erfüllt\",\n\t                                solved_description: \"Herzlichen Glückwunsch! Du hast den Quest '\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"questname\"] + \"' abgeschlossen.\",\n\t                                score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"score_rule\"],\n\t                                faculty_score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"score_rule\"]\n\t                            });\n\t                        }\n\t                    }\n\t                    //Solved Badges\n\t                    if (typeof data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"] !== 'undefined') {\n\t                        for (var t_key_badges in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"]) {\n\t                            _this.solvedOverlayArray.push({\n\t                                type: 2,\n\t                                name: \"Abzeichen erhalten\",\n\t                                solved_description: \"Herzlichen Glückwunsch! Du hast das Abzeichen '\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"][t_key_badges][\"badgename\"] + \"' abgeschlossen.<br /><img src='\" + _this.lService.getPictureLink(data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"][t_key_badges][\"picture_id\"]) + \"' />\"\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            else if (typeof data.result !== 'undefined' && data.result == true && data.data == null) {\n\t                if (_this.intervalTimerManageCheckLocation != null) {\n\t                    window.clearInterval(_this.intervalTimerManageCheckLocation);\n\t                    _this.intervalTimerManageCheckLocation = null;\n\t                }\n\t            }\n\t            else {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t        });\n\t    };\n\t    //Solved Overlay Methods\n\t    LoggedcontentComponent.prototype.removeFromSolvedOverlayArray = function (index) {\n\t        this.solvedOverlayArray.splice(index, 1);\n\t    };\n\t    //Register for Anonymous Users\n\t    LoggedcontentComponent.prototype.registerLoggedUser = function () {\n\t        //Username\n\t        var pattern = /^[A-Za-z0-9]{2,}$/;\n\t        if (this.reg_username.length == 0 || this.reg_username.match(pattern) == null) {\n\t            window.alert(\"Dein gewählter Username entspricht nicht unseren Richtlinien!\");\n\t            return;\n\t        }\n\t        if (this.reg_username_exists == true) {\n\t            window.alert(\"Dein gewählter Username ist bereits vergeben!\");\n\t            return;\n\t        }\n\t        //Email\n\t        pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\t        if (this.reg_email.length == 0 || this.reg_email.match(pattern) == null) {\n\t            window.alert(\"Bitte überprüfe deine E-Mail und versuche es erneut!\");\n\t            return;\n\t        }\n\t        if (this.reg_email_exists == true) {\n\t            window.alert(\"Deine gewählte E-Mail ist bereits vergeben!\");\n\t            return;\n\t        }\n\t        //Password\n\t        pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t        if (this.reg_password.length == 0 || this.reg_password.match(pattern) == null || this.reg_password != this.reg_password_repeat) {\n\t            window.alert(\"Dein Passwort entspricht nicht unseren Richtlinien oder du hast die beiden Passwörter stimmen nicht überein!\");\n\t            return;\n\t        }\n\t        //Faculty\n\t        if (this.reg_faculty_id == -2) {\n\t            window.alert(\"Bitte wähle vor der Registration eine Fakultät!\");\n\t            return;\n\t        }\n\t        //Accept TOU and PP\n\t        if ($(\"#reg_bed\").prop(\"checked\") == false) {\n\t            window.alert(\"Bitte akzeptiere vor der Registration die AGB sowie die Datenschutzerklärungen!\");\n\t            return;\n\t        }\n\t        this.lService.registerUser(this.reg_username, this.reg_email, this.reg_password, this.reg_password_repeat, this.reg_faculty_id).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t                window.location.reload();\n\t            }\n\t            else {\n\t                window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            console.error('Could not register user.');\n\t        });\n\t    };\n\t    LoggedcontentComponent.prototype.keyupRegisterUsername = function () {\n\t        var _this = this;\n\t        var pattern = /^[A-Za-z0-9]{2,}$/;\n\t        if (this.reg_username.length != 0 && this.reg_username.match(pattern) != null) {\n\t            this.reg_username_valid = true;\n\t        }\n\t        else {\n\t            this.reg_username_valid = false;\n\t        }\n\t        this.lService.checkUsername(this.reg_username).subscribe(function (data) {\n\t            if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == true) {\n\t                _this.reg_username_exists = true;\n\t            }\n\t            else if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == false) {\n\t                _this.reg_username_exists = false;\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            console.error('Could not login user.');\n\t        });\n\t    };\n\t    LoggedcontentComponent.prototype.keyupRegisterEmail = function () {\n\t        var _this = this;\n\t        var pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\t        if (this.reg_email.length != 0 && this.reg_email.match(pattern) != null) {\n\t            this.reg_email_valid = true;\n\t        }\n\t        else {\n\t            this.reg_email_valid = false;\n\t        }\n\t        this.lService.checkEmail(this.reg_email).subscribe(function (data) {\n\t            if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == true) {\n\t                _this.reg_email_exists = true;\n\t            }\n\t            else if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == false) {\n\t                _this.reg_email_exists = false;\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            console.error('Could not login user.');\n\t        });\n\t    };\n\t    LoggedcontentComponent.prototype.keyupRegisterPassword = function () {\n\t        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t        if (this.reg_password.length != 0 && this.reg_password.match(pattern) != null) {\n\t            this.reg_password_valid = true;\n\t        }\n\t        else {\n\t            this.reg_password_valid = false;\n\t        }\n\t    };\n\t    LoggedcontentComponent.prototype.keyupRegisterPasswordRepeat = function () {\n\t        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t        if (this.reg_password_repeat.length != 0 && this.reg_password == this.reg_password_repeat) {\n\t            this.reg_password_repeat_valid = true;\n\t        }\n\t        else {\n\t            this.reg_password_repeat_valid = false;\n\t        }\n\t    };\n\t    LoggedcontentComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'loggedcontent-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n\\n  <!-- -->\\n  <div id=\\\"wrapper\\\" [class.toggled]=\\\"toggled\\\">\\n\\n      <!-- Sidebar -->\\n      <div id=\\\"sidebar-wrapper\\\">\\n\\n        <!-- Logo -->\\n        <div id=\\\"logo\\\">\\n          <img [src]=\\\"getUniversalContentMainPictureId().length != 0 ? lService.getPictureLink(getUniversalContentMainPictureId()) : ''\\\" style=\\\"width:100%;\\\" />\\n        </div>\\n\\n        <!-- Nav -->\\n        <nav class=\\\"nav\\\">\\n            <ul>\\n                <li [class.current_page_item]=\\\"showncomponent=='tasks'\\\"><a id=\\\"tasks\\\" (click)=\\\"navigateToComponent('tasks')\\\" style=\\\"cursor:pointer;\\\">Aktuelle Aufgaben</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='tasksearch'\\\"><a id=\\\"map\\\" (click)=\\\"navigateToComponent('tasksearch')\\\" style=\\\"cursor:pointer;\\\">Aufgabensuche</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='userprogress'\\\"><a id=\\\"achievements\\\" (click)=\\\"navigateToComponent('userprogress')\\\" style=\\\"cursor:pointer;\\\">Spielstand</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='statistics'\\\"><a id=\\\"statistics\\\" (click)=\\\"navigateToComponent('statistics')\\\" style=\\\"cursor:pointer;\\\">Statistiken</a></li>\\n                <li><a id=\\\"logout\\\" (click)=\\\"logoutUser()\\\" style=\\\"cursor:pointer;\\\">Abmelden</a></li>\\n            </ul>\\n        </nav>\\n\\n        <nav *ngIf=\\\"isUserAdminUser()\\\" class=\\\"nav\\\" style=\\\"margin-top:0.5em;\\\">\\n            <ul>\\n                <li [class.current_page_item]=\\\"showncomponent=='administration'\\\"><a id=\\\"administration\\\" (click)=\\\"navigateToComponent('administration')\\\" style=\\\"cursor:pointer;\\\">Administration</a></li>\\n            </ul>\\n        </nav>\\n\\n        <!-- Copyright -->\\n        <!--\\n        <section id=\\\"copyright\\\" style=\\\"margin-top: 0.5em;\\\">\\n            <p>\\n                &copy; 2016 The Library Game.<br />\\n                CodeDesign, Database: <a href=\\\"http://company.aliru.de\\\">Julian Kissel</a><br />\\n                Design: Alexander Moch<br />\\n                Weitere Beteiligte: <a href=\\\"https://www.bib.uni-mannheim.de/\\\">Bibliothek der Universit\\u00E4t Mannheim</a>, <a href=\\\"http://ls.wim.uni-mannheim.de/de/pi4/people/philip-mildner/\\\">Philip Mildner</a>\\n            </p>\\n        </section>\\n        -->\\n\\n\\n        <!-- Register for Anonymous Player -->\\n        <section id=\\\"registerAsAnonymous\\\" *ngIf=\\\"getUniversalContentAnonymousUserPhrase().length!=0 && isUserAnonymousUser()\\\">\\n            <div style=\\\"padding:0px 10px;\\\">\\n\\n                <form id=\\\"registerForm\\\">\\n                      <input [(ngModel)]=\\\"reg_username\\\" (keyup)=\\\"keyupRegisterUsername()\\\" [style.background]=\\\"reg_username.length>0?(reg_username_valid && reg_username_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_username\\\" name=\\\"reg_username\\\" type=\\\"text\\\" maxlength=\\\"30\\\" placeholder=\\\"Username\\\" title=\\\"Gib hier deinen gew\\u00FCnschten Usernamen ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;\\\"/>\\n                      <div *ngIf=\\\"reg_username_exists\\\" style=\\\"padding: 5px;color: white;\\\">Username ist leider schon vergeben!</div>\\n\\n                      <input [(ngModel)]=\\\"reg_email\\\" (keyup)=\\\"keyupRegisterEmail()\\\" [style.background]=\\\"reg_email.length>0?(reg_email_valid && reg_email_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_email\\\" name=\\\"reg_email\\\" type=\\\"text\\\" maxlength=\\\"100\\\" placeholder=\\\"E-Mail\\\" title=\\\"Gib hier deine E-Mail ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.2em;\\\"/>\\n                      <div *ngIf=\\\"reg_email_exists\\\" style=\\\"padding: 5px;color: white;\\\">Ein User mit dieser E-Mail existiert leider bereits!</div>\\n\\n                      <input [(ngModel)]=\\\"reg_password\\\" (keyup)=\\\"keyupRegisterPassword();keyupRegisterPasswordRepeat();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password\\\" name=\\\"reg_password\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Passwort (Mind. 6 Zeichen)\\\" title=\\\"Gib hier dein Passwort ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.2em;\\\"/>\\n\\n                      <input [(ngModel)]=\\\"reg_password_repeat\\\" (keyup)=\\\"keyupRegisterPasswordRepeat();keyupRegisterPassword();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_repeat_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password_repeat\\\" name=\\\"reg_password_repeat\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Wiederhole dein Passwort\\\" title=\\\"Wiederhole hier dein Passwort\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.2em;\\\"/>\\n\\n                      <select [(ngModel)]=\\\"reg_faculty_id\\\" name=\\\"reg_department\\\" style=\\\"font-size:1em;background:#eeeeee;padding-top: 7px;padding-bottom: 7px;margin-top: 0.2em;\\\">\\n                        <option value=\\\"-2\\\">W\\u00E4hle deine Fakult\\u00E4t</option>\\n                        <option *ngFor=\\\"let t_faculty of getUniversalContentFacultyArray();\\\" value='{{t_faculty.faculty_id}}'>{{t_faculty.facultyname}}</option>\\n                      </select>\\n\\n                      <div style=\\\"margin:10px 5px;float:left;\\\">\\n                        <input id=\\\"reg_bed\\\" style=\\\"width:20px;height:20px;\\\" name=\\\"reg_bed\\\" type=\\\"checkbox\\\" value=\\\"bed\\\">\\n                      </div>\\n                      <div style=\\\"color:white;margin:10px 5px;\\\">Ich stimme den <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToLegal('tou')\\\" target=\\\"_blank\\\">AGB</a> sowie der <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToLegal('pp')\\\" target=\\\"_blank\\\">Datenschutzerkl\\u00E4rungen</a> zu</div>\\n                      <div style=\\\"clear:both;\\\"></div>\\n\\n                      <div (click)=\\\"registerLoggedUser()\\\" id=\\\"buttonReg\\\">Jetzt registrieren</div>\\n                </form>\\n\\n\\n            </div>\\n        </section>\\n\\n\\n        <!-- \\\"Delete ACC\\\" AND \\\"Go to Settings\\\" for Non-Anonymous Player -->\\n        <section id=\\\"deleteAcc\\\">\\n            <div style=\\\"padding:0px 10px;\\\">\\n\\n                <input (click)=\\\"deleteUser()\\\" type=\\\"button\\\" id=\\\"buttonDeleteAcc\\\" value=\\\"L\\u00F6sche meinen Account\\\" style=\\\"width:100%;\\\"/>\\n                <input (click)=\\\"navigateToComponent('usersettings')\\\" type=\\\"button\\\" id=\\\"buttonSettingsAcc\\\" value=\\\"Meine Einstellungen\\\" style=\\\"width:100%;margin-top:5px;\\\"/>\\n\\n            </div>\\n        </section>\\n\\n\\n        <!-- Nav -->\\n        <nav class=\\\"nav\\\">\\n            <ul>\\n                <li [class.current_page_item]=\\\"showncomponent=='legal' && legalcomponent=='tou'\\\"><a (click)=\\\"navigateToLegal('tou')\\\" style=\\\"cursor:pointer;\\\">Nutzungsbedingungen</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='legal' && legalcomponent=='pp'\\\"><a (click)=\\\"navigateToLegal('pp')\\\" style=\\\"cursor:pointer;\\\">Datenschutzerkl\\u00E4rung</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='legal' && legalcomponent=='impressum'\\\"><a (click)=\\\"navigateToLegal('impressum')\\\" style=\\\"cursor:pointer;\\\">Impressum</a></li>\\n            </ul>\\n        </nav>\\n\\n      </div>\\n      <!-- /#sidebar-wrapper -->\\n\\n      <!-- Page Content -->\\n      <div id=\\\"page-content-wrapper\\\" style=\\\"padding:0;\\\">\\n\\n        <div id=\\\"titleBar\\\" class=\\\"hidden-sm hidden-md hidden-lg\\\">\\n          <div class=\\\"toggleLeft\\\" (click)=\\\"toggled=toggled?false:true;\\\"></div><div class=\\\"reloadButton\\\" onclick=\\\"location.reload();\\\"></div>\\n        </div>\\n\\n        <div style=\\\"padding:15px;\\\">\\n\\n          <div class=\\\"container-fluid\\\">\\n\\n            <div id=\\\"content\\\">\\n\\n              <!-- Routing Logged User -->\\n              <tasks-component *ngIf=\\\"showncomponent=='tasks'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></tasks-component>\\n              <quest-component *ngIf=\\\"showncomponent=='quest'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [quest_id]=\\\"quest_id\\\"></quest-component>\\n              <badge-component *ngIf=\\\"showncomponent=='badge'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [badge_id]=\\\"badge_id\\\"></badge-component>\\n              <userprogress-component *ngIf=\\\"showncomponent=='userprogress'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></userprogress-component>\\n              <legal-component *ngIf=\\\"showncomponent=='legal'\\\" [user]=\\\"user\\\" [legalcomponent]=\\\"legalcomponent\\\" [universalcontent]=\\\"universalcontent\\\"></legal-component>\\n              <usersettings-component *ngIf=\\\"showncomponent=='usersettings'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></usersettings-component>\\n              <statistics-component *ngIf=\\\"showncomponent=='statistics'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></statistics-component>\\n              <highscorelist-component *ngIf=\\\"showncomponent=='highscorelist'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [highscorepage]=\\\"highscorepage\\\"></highscorelist-component>\\n              <tasksearch-component *ngIf=\\\"showncomponent=='tasksearch'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></tasksearch-component>\\n              <task-component *ngIf=\\\"showncomponent=='task'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [task_id]=\\\"task_id\\\" [additionalinformation]=\\\"additionalinformation\\\"></task-component>\\n              <administration-component *ngIf=\\\"showncomponent=='administration'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" (reload)=\\\"lService.loadUniversalContent();\\\"></administration-component>\\n\\n              <footer id=\\\"is-footer\\\">\\n                <hr style=\\\"width:100%\\\">\\n              </footer>\\n\\n\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <!-- /#page-content-wrapper -->\\n\\n  </div>\\n  <!-- -->\\n\\n  <!-- Overlay -->\\n  <div *ngFor=\\\"let solvedOverlayDataObject of solvedOverlayArray;let i = index;\\\">\\n    <solvedoverlay-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [solveddata]=\\\"solvedOverlayDataObject\\\" (closeOverlay)=\\\"removeFromSolvedOverlayArray(i);\\\"></solvedoverlay-component>\\n  </div>\\n\\n\\n  <!-- Dialog -->\\n  <div id=\\\"dialog-confirm\\\" style=\\\"display:none;\\\">\\n    <div id=\\\"dialog-content\\\"></div>\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, router_1.ActivatedRoute, libgame_service_1.LibgameService])\n\t    ], LoggedcontentComponent);\n\t    return LoggedcontentComponent;\n\t}());\n\texports.LoggedcontentComponent = LoggedcontentComponent;\n\t//# sourceMappingURL=loggedcontent.component.js.map\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar QuestComponent = (function () {\n\t    function QuestComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t    }\n\t    QuestComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        if (typeof this.quest_id === 'string' && this.quest_id.length != 0)\n\t            this.lService.loadSpecificContent('quest&quest_id=' + this.quest_id);\n\t    };\n\t    QuestComponent.prototype.ngOnChanges = function (changes) {\n\t        var log = [];\n\t        for (var propName in changes) {\n\t            var changedProp = changes[propName];\n\t            var from = changedProp.previousValue;\n\t            var to = changedProp.currentValue;\n\t            if (propName == \"quest_id\" && from != to) {\n\t                this.lService.loadSpecificContent('quest&quest_id=' + to);\n\t            }\n\t        }\n\t    };\n\t    QuestComponent.prototype.getQuestData = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['QUEST_DATA'] !== 'undefined' ? this.specificcontent['QUEST_DATA']\n\t            : {\n\t                json_quest_task_ids: [],\n\t                score_rule: 0,\n\t                is_starter_quest: \"0\",\n\t                is_active: \"1\"\n\t            };\n\t    };\n\t    QuestComponent.prototype.getProgressPreQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PROGRESS_PRE_QUESTS'] !== 'undefined' ? this.specificcontent['PROGRESS_PRE_QUESTS'] : [];\n\t    };\n\t    QuestComponent.prototype.getUserQuest = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_QUEST'] !== 'undefined' ? this.specificcontent['USER_QUEST'] : { completed: \"0\", ts_quest_completed: \"\" };\n\t    };\n\t    QuestComponent.prototype.getProgressTasks = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PROGRESS_TASKS'] !== 'undefined' ? this.specificcontent['PROGRESS_TASKS'] : [];\n\t    };\n\t    QuestComponent.prototype.getProgressTasksArrayForView = function () {\n\t        if ($.isEmptyObject(this.specificcontent) || typeof this.specificcontent['PROGRESS_TASKS'] === 'undefined')\n\t            return [];\n\t        var t_returnarray = [];\n\t        for (var key in this.specificcontent['PROGRESS_TASKS']) {\n\t            if (typeof this.getProgressTasks()[key] === 'object' && this.getProgressTasks()[key][\"completed\"] == true) {\n\t                t_returnarray.push(this.getProgressTasks()[key]);\n\t            }\n\t            else if (typeof this.getProgressTasks()[key] === 'object') {\n\t                t_returnarray.push(this.getProgressTasks()[key]);\n\t                return t_returnarray;\n\t            }\n\t        }\n\t        return t_returnarray;\n\t    };\n\t    QuestComponent.prototype.getTaskArrayForProgressTasksArrayKey = function (taskarraykey) {\n\t        var t_taskarray = [];\n\t        for (var key in this.getProgressTasks()[taskarraykey]) {\n\t            if (typeof this.getProgressTasks()[key] === 'object') {\n\t                t_taskarray.push(this.getProgressTasks()[taskarraykey][key]);\n\t            }\n\t        }\n\t        return t_taskarray;\n\t    };\n\t    QuestComponent.prototype.navigateToQuest = function (quest_id) {\n\t        this.router.navigate(['/l/quest', quest_id]);\n\t    };\n\t    QuestComponent.prototype.navigateToTask = function (task_id) {\n\t        this.router.navigate(['/l/task', task_id]);\n\t    };\n\t    QuestComponent.prototype.navigateToBadge = function (badge_id) {\n\t        this.router.navigate(['/l/badge', badge_id]);\n\t    };\n\t    QuestComponent.prototype.isQuestCompleted = function () {\n\t        return typeof this.getUserQuest().completed !== 'undefined' && this.getUserQuest().completed == \"1\";\n\t    };\n\t    QuestComponent.prototype.getNumberOfCompletedLevels = function () {\n\t        var t_completedlevels = 0;\n\t        for (var key in this.getProgressTasks()) {\n\t            if (typeof this.getProgressTasks()[key] === 'object') {\n\t                if (this.getProgressTasks()[key][\"completed\"] == true) {\n\t                    t_completedlevels++;\n\t                }\n\t                else {\n\t                    return t_completedlevels;\n\t                }\n\t            }\n\t        }\n\t        return t_completedlevels;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], QuestComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], QuestComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], QuestComponent.prototype, \"quest_id\", void 0);\n\t    QuestComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'quest-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- Overview of quest -->\\n        <div id=\\\"cf-qu-overview\\\" class=\\\"content-frame\\\">\\n\\n            <div class=\\\"content-quest-frame\\\" style=\\\"width: 100%!important;padding: 0!important;margin: 0!important;border-radius: 0;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">{{'Quest: '+getQuestData()?.questname}}</div>\\n                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{getQuestData()?.score_rule}}</span> Exp.</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"isQuestCompleted()\\\" style=\\\"width:100%;padding: 0!important;\\\">\\n              <p class='headline' style=\\\"background:rgb(120,255,120);\\\">\\n                  Du hast diesen Quest bereits gel\\u00F6st.\\n                  <br>\\n                  Gel\\u00F6st am: {{lService.getFormatedDate(getUserQuest().ts_quest_completed)}}\\n              </p>\\n            </div>\\n\\n\\n\\n            <div style=\\\"padding:1em 1em;width:100%;max-width:30em;margin-left:auto;margin-right:auto;\\\">\\n\\n                <div style=\\\"display:table;border-spacing:0 2px;width:100%;\\\">\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Erfahrung</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">+{{getQuestData()?.score_rule}}\\n                          <span [hidden]=\\\"!isQuestCompleted()\\\" class='fa fa-check-square' style='color:rgb(0,150,0);background:transparent;'></span>\\n                          <span [hidden]=\\\"isQuestCompleted()\\\" class='fa fa-minus-square' style='color:rgb(150,0,0);background:transparent;'></span>\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Dein Fortschritt</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">\\n                          <span style=\\\"color:green;\\\">{{getNumberOfCompletedLevels()}}</span> / {{getProgressTasks().length}}\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Deine gesammelten Exp.</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;color:green!important;\\\">\\n                          +{{isQuestCompleted()?getQuestData()?.score_rule:'0'}}\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Starterquest</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">\\n                          {{getQuestData().is_starter_quest=='1'?'Yes':'No'}}\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n\\n\\n                <div style=\\\"text-align:center;margin-top:0.5em;\\\">Ben\\u00F6tigte Vorquests</div>\\n\\n                  <div [hidden]=\\\"getProgressPreQuests().length != 0\\\" id='cf-qu-overview-no-pre-quests' style='font-weight:bold;font-size:1em;color:rgb(0,0,0);margin-bottom:0.3em;margin-top:0.2em;'>Es werden keine Vorquests ben\\u00F6tigt</div>\\n\\n                  <div *ngFor=\\\"let t_quest of getProgressPreQuests();\\\" id='cf-qu-overview-pre-quest' style='overflow:hidden;cursor:pointer;font-weight:bold;font-size:1.2em;color:rgb(255,255,255);border:0px solid rgb(0,0,0);border-radius:4px;padding:0.2em 0.3em;background:rgb(50,50,50);' (click)=\\\"navigateToQuest(t_quest.quest_id)\\\">\\n                    {{t_quest.questname}}<br>\\n                    <button [hidden]=\\\"!t_quest.completed\\\" class='fa fa-check-square' style='padding:0;font-size:1em;color:rgb(0,150,0);border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n                    <button [hidden]=\\\"t_quest.completed\\\" class='fa fa-minus-square' style='padding:0;font-size:1em;color:rgb(150,0,0);border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n                  </div>\\n\\n            </div>\\n            <div style=\\\"clear:both;\\\"></div>\\n\\n        </div>\\n\\n\\n        <div [hidden]=\\\"getQuestData().is_active=='1'\\\" class=\\\"content-frame\\\" >\\n            <p class='headline' style=\\\"background:rgb(255,120,120);\\\">\\n              Der Quest ist nicht l\\u00E4nger aktiv\\n            </p>\\n        </div>\\n\\n        <div [hidden]=\\\"getQuestData().is_active!='1'\\\" id=\\\"cf-qu-quest-progress\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Dein Fortschritt</p>\\n\\n\\n            <div *ngFor=\\\"let t_tasklevelinfo of getProgressTasksArrayForView(); let i = index;\\\" class=\\\"cf-qu-quest-progress-step\\\"style=\\\"margin-top:1em;\\\">\\n                <p class=\\\"cf-qu-quest-progress-step-headline\\\" style=\\\"text-align:center;width:100%;\\\">Stufe {{i+1}}/{{getProgressTasks().length}}\\n\\n                  <span class='fa'\\n                    [class.fa-check-square]=\\\"t_tasklevelinfo.completed\\\"\\n                    [class.fa-minus-square]=\\\"!t_tasklevelinfo.completed\\\"\\n                    [style.color]=\\\"t_tasklevelinfo.completed?'rgb(0,150,0)':'rgb(150,0,0)'\\\" style='padding:0;font-size:1em;border:0;margin:0;background:transparent;margin-left:5px;'></span>\\n                </p>\\n\\n                <div class=\\\"cf-qu-quest-progress-step-tasks\\\" style=\\\"padding:0 1.5em;\\\">\\n                  <div *ngFor=\\\"let t_taskarray of getTaskArrayForProgressTasksArrayKey(i); let i_t = in\\\" (click)=\\\"navigateToTask(t_taskarray.task_id)\\\" class=\\\"content-task-frame\\\" style=\\\"width:100%;\\\">\\n                      <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                          <div style=\\\"float:left;\\\">Aufgabe: {{t_taskarray.taskname}}</div>\\n                          <button class='fa fa-check-square'\\n                          [class.fa-check-square]=\\\"t_taskarray.completed\\\"\\n                          [class.fa-minus-square]=\\\"!t_taskarray.completed\\\"\\n                          [style.color]=\\\"t_taskarray.completed?'rgb(20,100,20)!important':'rgb(100,20,20)!important'\\\" style='padding:0;font-size:1.5em!important;border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n                  </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n\\n\\n</div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], QuestComponent);\n\t    return QuestComponent;\n\t}());\n\texports.QuestComponent = QuestComponent;\n\t//# sourceMappingURL=quest.component.js.map\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar SolvedOverlayComponent = (function () {\n\t    function SolvedOverlayComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        //type: 1: Task, 2: Badge, 3: Quest, 4: Other\n\t        //name:\n\t        //score_rule:\n\t        //faculty_score_rule:\n\t        //solved_description:\n\t        //solved_quests:\n\t        //solved_badges:\n\t        this.closeOverlay = new core_1.EventEmitter();\n\t        this.stars = [];\n\t    }\n\t    SolvedOverlayComponent.prototype.ngOnInit = function () {\n\t        this.stars = [\n\t            { show: false, opacity: 1 },\n\t            { show: false, opacity: 1 },\n\t            { show: false, opacity: 1 },\n\t            { show: false, opacity: 1 },\n\t            { show: false, opacity: 1 }\n\t        ];\n\t        this.animateStar(0);\n\t        this.animateStar(1);\n\t        this.animateStar(2);\n\t        this.animateStar(3);\n\t        this.animateStar(4);\n\t    };\n\t    SolvedOverlayComponent.prototype.getType = function () {\n\t        return typeof this.solveddata[\"type\"] !== 'undefined' ? this.solveddata[\"type\"] : -1;\n\t    };\n\t    SolvedOverlayComponent.prototype.getName = function () {\n\t        return typeof this.solveddata[\"name\"] !== 'undefined' ? this.solveddata[\"name\"] : \"\";\n\t    };\n\t    SolvedOverlayComponent.prototype.getSolvedDescription = function () {\n\t        return typeof this.solveddata[\"solved_description\"] !== 'undefined' ? this.solveddata[\"solved_description\"] : \"\";\n\t    };\n\t    SolvedOverlayComponent.prototype.getScoreRule = function () {\n\t        return typeof this.solveddata[\"score_rule\"] !== 'undefined' ? this.solveddata[\"score_rule\"] : \"\";\n\t    };\n\t    SolvedOverlayComponent.prototype.getFacultyScoreRule = function () {\n\t        return typeof this.solveddata[\"faculty_score_rule\"] !== 'undefined' ? this.solveddata[\"faculty_score_rule\"] : \"\";\n\t    };\n\t    SolvedOverlayComponent.prototype.getSolvedQuests = function () {\n\t        return typeof this.solveddata[\"solved_quests\"] !== 'undefined' ? this.solveddata[\"solved_quests\"] : \"\";\n\t    };\n\t    SolvedOverlayComponent.prototype.getSolvedBadges = function () {\n\t        return typeof this.solveddata[\"solved_badges\"] !== 'undefined' ? this.solveddata[\"solved_badges\"] : \"\";\n\t    };\n\t    //Show Helper Functions\n\t    SolvedOverlayComponent.prototype.animateStar = function (starindex) {\n\t        var _this = this;\n\t        var randomNumber1 = 0;\n\t        this.stars[starindex].opacity = 0.5 + Math.random() * 0.5;\n\t        if (this.stars[starindex].show == false) {\n\t            this.stars[starindex].show = true;\n\t            randomNumber1 = Math.random() * 500;\n\t        }\n\t        else {\n\t            this.stars[starindex].show = false;\n\t            randomNumber1 = Math.random() * 3500;\n\t        }\n\t        setTimeout(function (s_index) { _this.animateStar(s_index); }, randomNumber1, starindex);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], SolvedOverlayComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], SolvedOverlayComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], SolvedOverlayComponent.prototype, \"solveddata\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], SolvedOverlayComponent.prototype, \"closeOverlay\", void 0);\n\t    SolvedOverlayComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'solvedoverlay-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n        <div class=\\\"overlay\\\" style=\\\"display: block;\\\">\\n          <div class=\\\"overlay_lightbox\\\" style=\\\"height: auto;\\\">\\n            <div class=\\\"overlay_buttons\\\" style=\\\"text-align: right;\\\">\\n              <div class=\\\"button\\\" (click)=\\\"closeOverlay.emit(true);\\\" style=\\\"width: 50px; float: right; margin-right: 5px; margin-top: 5px;text-align: center;\\\">X</div>\\n            </div>\\n            <div class=\\\"overlay_content\\\">\\n              <div style=\\\"position:relative;\\\">\\n                <img class=\\\"star-1\\\" [hidden]=\\\"stars[0].show==false\\\" [style.opacity]=\\\"stars[0].opacity\\\" src=\\\"./../public/images/star1.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-2\\\" [hidden]=\\\"stars[1].show==false\\\" [style.opacity]=\\\"stars[1].opacity\\\" src=\\\"./../public/images/star1.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-3\\\" [hidden]=\\\"stars[2].show==false\\\" [style.opacity]=\\\"stars[2].opacity\\\" src=\\\"./../public/images/star1.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-4\\\" [hidden]=\\\"stars[3].show==false\\\" [style.opacity]=\\\"stars[3].opacity\\\" src=\\\"./../public/images/star2.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-5\\\" [hidden]=\\\"stars[4].show==false\\\" [style.opacity]=\\\"stars[4].opacity\\\" src=\\\"./../public/images/star2.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n              </div>\\n              <p class=\\\"headline\\\" style=\\\"font-size:1.4em!important;font-weight:bold!important;width:90%;margin-left:auto;margin-right:auto;padding-top:1em;text-align:center;\\\">\\n                {{getName()}}\\n              </p>\\n              <p [hidden]=\\\"getType() != 1 && getType() != 3\\\" class=\\\"headline2\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;text-align:center;\\\">\\n                Deine Erfahrung: +{{getScoreRule()}} EXP. <br>\\n                Fakult\\u00E4tsscore: +{{getFacultyScoreRule()}} EXP.\\n              </p>\\n              <div [innerHTML]=\\\"getSolvedDescription()\\\" [style.padding-bottom]=\\\"getSolvedQuests().length == 0 && getSolvedBadges().length == 0? '50px':'10px'\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;\\\">\\n              </div>\\n              <div [hidden]=\\\"getSolvedQuests().length == 0\\\" [style.padding-bottom]=\\\"getSolvedBadges().length == 0? '50px':'10px'\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;\\\">\\n                Damit hast du folgende Quests ebenfalls abgeschlossen:<br />\\n                <div [innerHTML]=\\\"getSolvedQuests()\\\"></div>\\n              </div>\\n              <div [hidden]=\\\"getSolvedBadges().length == 0\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;padding-bottom:50px;\\\">\\n                Damit hast du folgende Abzeichen ebenfalls erhalten:<br />\\n                <div [innerHTML]=\\\"getSolvedBadges()\\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], SolvedOverlayComponent);\n\t    return SolvedOverlayComponent;\n\t}());\n\texports.SolvedOverlayComponent = SolvedOverlayComponent;\n\t//# sourceMappingURL=solvedoverlay.component.js.map\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar StatisticsComponent = (function () {\n\t    function StatisticsComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t        this.user_score_period_active = \"10d\";\n\t        this.user_task_period_active = \"10d\";\n\t    }\n\t    StatisticsComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.user_score_period_active = \"10d\";\n\t        this.user_task_period_active = \"10d\";\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t            _this.initFacultyChart();\n\t            _this.updateChartUserScore(10, 0, 0, true);\n\t            _this.updateChartUserTasks(10, 0, 0, true);\n\t        });\n\t        this.lService.loadSpecificContent('statistics');\n\t    };\n\t    StatisticsComponent.prototype.getStatistics = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Statistics'] !== 'undefined' ? this.specificcontent['Statistics'] : {};\n\t    };\n\t    StatisticsComponent.prototype.getLastCompletedQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Last_Completed_Quests'] !== 'undefined' ? this.specificcontent['Last_Completed_Quests'] : [];\n\t    };\n\t    StatisticsComponent.prototype.getLastCompletedBadges = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Last_Completed_Badges'] !== 'undefined' ? this.specificcontent['Last_Completed_Badges'] : [];\n\t    };\n\t    StatisticsComponent.prototype.getLastCompletedTasks = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Last_Completed_Tasks'] !== 'undefined' ? this.specificcontent['Last_Completed_Tasks'] : [];\n\t    };\n\t    StatisticsComponent.prototype.getFaculties = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Faculties'] !== 'undefined' ? this.specificcontent['Faculties'] : [];\n\t    };\n\t    StatisticsComponent.prototype.getBestUsers = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Best_Users'] !== 'undefined' ? this.specificcontent['Best_Users'] : [];\n\t    };\n\t    StatisticsComponent.prototype.getBestUsersForFaculty = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Best_Users_For_Faculty'] !== 'undefined' ? this.specificcontent['Best_Users_For_Faculty'] : [];\n\t    };\n\t    StatisticsComponent.prototype.getCountBadges = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Badges'] !== 'undefined' ? this.specificcontent['Count_Badges'] : 0;\n\t    };\n\t    StatisticsComponent.prototype.getCountQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Quests'] !== 'undefined' ? this.specificcontent['Count_Quests'] : 0;\n\t    };\n\t    StatisticsComponent.prototype.navigateToQuest = function (quest_id) {\n\t        this.router.navigate(['/l/quest', quest_id]);\n\t    };\n\t    StatisticsComponent.prototype.navigateToTask = function (task_id) {\n\t        this.router.navigate(['/l/task', task_id]);\n\t    };\n\t    StatisticsComponent.prototype.navigateToBadge = function (badge_id) {\n\t        this.router.navigate(['/l/badge', badge_id]);\n\t    };\n\t    StatisticsComponent.prototype.navigateToComponent = function (componentname) {\n\t        this.router.navigate([\"/l/\" + componentname]);\n\t    };\n\t    StatisticsComponent.prototype.updateChartUserScore = function (d, m, y, init) {\n\t        var ObjectForCalculation = {};\n\t        var tempObject = typeof this.getStatistics()[\"User_Statistic_2\"] !== 'undefined' ? this.getStatistics()[\"User_Statistic_2\"][\"json_statistic\"] : [];\n\t        for (var key in tempObject) {\n\t            ObjectForCalculation[key] = {};\n\t            ObjectForCalculation[key]['data'] = tempObject[key]['data'];\n\t            ObjectForCalculation[key]['ts'] = tempObject[key]['ts'];\n\t        }\n\t        var CalculatedChartDataScore = this.lService.getLabelsAndDataForChart(JSON.stringify(ObjectForCalculation), d, m, y, 'normal_comb');\n\t        var lineChartData_canvas_user_score = {\n\t            labels: $.map(CalculatedChartDataScore['labels'], function (el) { return el; }),\n\t            datasets: [\n\t                {\n\t                    strokeColor: 'rgba(251,78,0,1)',\n\t                    pointColor: 'rgba(251,78,0,1)',\n\t                    pointStrokeColor: '#fff',\n\t                    pointHighlightStroke: 'rgba(220,220,220,1)',\n\t                    data: $.map(CalculatedChartDataScore['data'], function (el) { return el; })\n\t                }\n\t            ]\n\t        };\n\t        var settingsObj_canvas_user_score = {\n\t            animation: false,\n\t            responsive: true,\n\t            scaleFontColor: '#000',\n\t            bezierCurve: false,\n\t            datasetFill: false,\n\t            scaleOverride: true,\n\t            scaleSteps: 8,\n\t            scaleStepWidth: Math.ceil(CalculatedChartDataScore['data'][Object.keys(CalculatedChartDataScore['data']).length - 1] / 8) + 1,\n\t            scaleStartValue: 0,\n\t            scaleLineColor: 'rgba(0,0,0,.6)',\n\t            scaleGridLineColor: 'rgba(0,0,0,.2)',\n\t            graphTitle: 'Erfahrung',\n\t            graphTitleFontSize: 18,\n\t            graphTitleFontColor: '#000',\n\t        };\n\t        if (typeof init === 'undefined' || init == false) {\n\t            var t_canvas = document.getElementById('canvas_user_score');\n\t            updateChart(t_canvas.getContext('2d'), lineChartData_canvas_user_score, settingsObj_canvas_user_score, false, false);\n\t        }\n\t        else {\n\t            $('#canvas_user_score').attr('width', $('#canvas_user_score').parent().width());\n\t            var t_canvas = document.getElementById('canvas_user_score');\n\t            new Chart(t_canvas.getContext('2d')).Line(lineChartData_canvas_user_score, settingsObj_canvas_user_score);\n\t        }\n\t    };\n\t    StatisticsComponent.prototype.updateChartUserTasks = function (d, m, y, init) {\n\t        var ObjectForCalculation = {};\n\t        var tempObject = typeof this.getStatistics()[\"User_Statistic_1\"] !== 'undefined' ? this.getStatistics()[\"User_Statistic_1\"][\"json_statistic\"] : [];\n\t        for (var key in tempObject) {\n\t            ObjectForCalculation[key] = {};\n\t            ObjectForCalculation[key]['data'] = tempObject[key]['data'];\n\t            ObjectForCalculation[key]['ts'] = tempObject[key]['ts'];\n\t        }\n\t        var CalculatedChartDataTasks = this.lService.getLabelsAndDataForChart(JSON.stringify(ObjectForCalculation), d, m, y, 'normal_comb');\n\t        var lineChartData_canvas_user_tasks = {\n\t            labels: $.map(CalculatedChartDataTasks['labels'], function (el) { return el; }),\n\t            datasets: [\n\t                {\n\t                    strokeColor: 'rgba(251,78,0,1)',\n\t                    pointColor: 'rgba(251,78,0,1)',\n\t                    pointStrokeColor: '#fff',\n\t                    pointHighlightStroke: 'rgba(220,220,220,1)',\n\t                    data: $.map(CalculatedChartDataTasks['data'], function (el) { return el; })\n\t                }\n\t            ]\n\t        };\n\t        var settingsObj_canvas_user_tasks = {\n\t            animation: false,\n\t            responsive: true,\n\t            scaleFontColor: '#000',\n\t            bezierCurve: false,\n\t            datasetFill: false,\n\t            scaleOverride: true,\n\t            scaleSteps: 8,\n\t            scaleStepWidth: Math.ceil(CalculatedChartDataTasks['data'][Object.keys(CalculatedChartDataTasks['data']).length - 1] / 8) + 1,\n\t            scaleStartValue: 0,\n\t            scaleLineColor: 'rgba(0,0,0,.6)',\n\t            scaleGridLineColor: 'rgba(0,0,0,.2)',\n\t            graphTitle: 'Aufgaben',\n\t            graphTitleFontSize: 18,\n\t            graphTitleFontColor: '#000',\n\t        };\n\t        if (typeof init === 'undefined' || init == false) {\n\t            var t_canvas = document.getElementById('canvas_user_tasks');\n\t            updateChart(t_canvas.getContext('2d'), lineChartData_canvas_user_tasks, settingsObj_canvas_user_tasks, false, false);\n\t        }\n\t        else {\n\t            $('#canvas_user_tasks').attr('width', $('#canvas_user_tasks').parent().width());\n\t            var t_canvas = document.getElementById('canvas_user_tasks');\n\t            new Chart(t_canvas.getContext('2d')).Line(lineChartData_canvas_user_tasks, settingsObj_canvas_user_tasks);\n\t        }\n\t    };\n\t    StatisticsComponent.prototype.initFacultyChart = function () {\n\t        var t_facultyname_array = [];\n\t        var t_facultyscore_array = [];\n\t        var max_value_faculty_score = 0;\n\t        for (var _i = 0, _a = this.getFaculties(); _i < _a.length; _i++) {\n\t            var t_faculty = _a[_i];\n\t            t_facultyname_array.push(t_faculty.facultyname);\n\t            t_facultyscore_array.push(t_faculty.faculty_score);\n\t            if (parseInt(t_faculty.faculty_score) > max_value_faculty_score)\n\t                max_value_faculty_score = parseInt(t_faculty.faculty_score);\n\t        }\n\t        var lineChartData_canvas_faculties = {\n\t            labels: t_facultyname_array,\n\t            datasets: [\n\t                {\n\t                    fillColor: 'green',\n\t                    data: t_facultyscore_array,\n\t                }\n\t            ]\n\t        };\n\t        var settingsObj_canvas_faculties = {\n\t            animation: false,\n\t            responsive: true,\n\t            scaleFontColor: '#000',\n\t            scaleOverride: true,\n\t            scaleSteps: 8,\n\t            scaleStepWidth: Math.ceil(max_value_faculty_score / 8) + 1,\n\t            scaleStartValue: 0,\n\t            inGraphDataShow: true,\n\t            inGraphDataXPosition: 2,\n\t            inGraphDataAlign: 'center',\n\t            inGraphDataFontColor: '#fff',\n\t            graphTitle: 'Fakultätenhighscore',\n\t            graphTitleFontSize: 18,\n\t            graphTitleFontColor: '#000',\n\t        };\n\t        $('#canvas_faculties').attr('width', $('#canvas_faculties').parent().width());\n\t        var t_canvas = document.getElementById('canvas_faculties');\n\t        new Chart(t_canvas.getContext('2d')).HorizontalBar(lineChartData_canvas_faculties, settingsObj_canvas_faculties);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], StatisticsComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], StatisticsComponent.prototype, \"universalcontent\", void 0);\n\t    StatisticsComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'statistics-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12 col-sm-7\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- USER \\u00DCbersicht -->\\n        <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Dein Fortschritt</p>\\n\\n            <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                <div class=\\\"depend-on-device-tablerow-to-none\\\" style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                    <div id=\\\"cf-ho-overview-stats-quests\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Quests</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.completed_quests}}/{{getCountQuests()}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div id=\\\"cf-ho-overview-stats-badges\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Abzeichen</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.completed_badges}}/{{getCountBadges()}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div id=\\\"cf-ho-overview-stats-tasks\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aufgaben</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.completed_tasks}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Erfahrung</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.user_score}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div style=\\\"clear:both;\\\"></div>\\n\\n                </div>\\n\\n\\n            </div>\\n\\n\\n\\n        </div>\\n\\n        <!-- Overview departments -->\\n        <div id=\\\"cf-ho-statistic-departments\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">\\u00DCbersicht \\u00FCber die Fakult\\u00E4ten</p>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <canvas id=\\\"canvas_faculties\\\" height=\\\"300\\\"></canvas>\\n            </div>\\n\\n        </div>\\n\\n        <!-- USER SCORE -->\\n        <div id=\\\"cf-st-user-score\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Deine Erfahrung im Zeitverlauf</p>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <div style=\\\"display:inline-block;border:2px solid rgb(0,0,0);border-radius:4px;\\\">\\n                    <div (click)=\\\"updateChartUserScore(10,0,0);user_score_period_active='10d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='10d'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='10d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">10 Tage</div>\\n                    <div (click)=\\\"updateChartUserScore(30,0,0);user_score_period_active='30d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='30d'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='30d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">30 Tage</div>\\n                    <div (click)=\\\"updateChartUserScore(0,6,0);user_score_period_active='6m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='6m'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='6m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">6 Monate</div>\\n                    <div (click)=\\\"updateChartUserScore(0,12,0);user_score_period_active='12m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='12m'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='12m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">12 Monate</div>\\n                    <div (click)=\\\"updateChartUserScore(0,24,0);user_score_period_active='24m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='24m'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='24m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">24 Monate</div>\\n                    <div (click)=\\\"updateChartUserScore(0,0,5);user_score_period_active='5y';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='5y'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='5y'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">5 Jahre</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <canvas id=\\\"canvas_user_score\\\" height=\\\"400\\\"></canvas>\\n            </div>\\n\\n        </div>\\n\\n        <!-- USER COMPLETED TASKS -->\\n        <div id=\\\"cf-st-user-tasks\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Deine gel\\u00F6sten Aufgaben im Zeitverlauf</p>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <div style=\\\"display:inline-block;border:2px solid rgb(0,0,0);border-radius:4px;\\\">\\n                    <div (click)=\\\"updateChartUserTasks(10,0,0);user_task_period_active='10d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='10d'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='10d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">10 Tage</div>\\n                    <div (click)=\\\"updateChartUserTasks(30,0,0);user_task_period_active='30d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='30d'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='30d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">30 Tage</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,6,0);user_task_period_active='6m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='6m'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='6m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">6 Monate</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,12,0);user_task_period_active='12m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='12m'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='12m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">12 Monate</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,24,0);user_task_period_active='24m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='24m'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='24m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">24 Monate</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,0,5);user_task_period_active='5y';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='5y'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='5y'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">5 Jahre</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <canvas id=\\\"canvas_user_tasks\\\" height=\\\"400\\\"></canvas>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-sm-5 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- Last gathered quests -->\\n        <div id=\\\"cf-ho-completed-quests\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Zuletzt gel\\u00F6ste Quests</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 10px!important;color:rgb(255,255,255);\\\">\\n\\n              <div *ngIf=\\\"getLastCompletedQuests().length == 0\\\" (click)=\\\"navigateToComponent('tasks')\\\" style='width:100%;padding:0 20px;text-align:justify;margin-bottom:1em;'><span class='link'>Du hast leider noch keine abgeschlossenen Quests. Klicke hier, um zu deinen aktuellen Quests zu gelangen.</span></div>\\n\\n              <div *ngFor=\\\"let t_quest_data of getLastCompletedQuests();\\\" style='display:table-row;vertical-align:top;'>\\n                  <div style='display:table-cell;vertical-align:top;'>\\n                      <p style='font-size:1.1em;text-align:center;'><span (click)=\\\"navigateToQuest(t_quest_data.quest_id)\\\" class='link'>{{t_quest_data.questname}}</span></p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;min-width:100px;'>\\n                      <p style='font-size:1.1em;text-align:center;'>+{{t_quest_data.score_rule}} Exp.</p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;'>\\n                      <p style='font-size:1em;text-align:center;'>{{lService.getFormatedDate(t_quest_data.ts_quest_completed)}}</p>\\n                  </div>\\n              </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <!-- Last gathered badges -->\\n        <div id=\\\"cf-ho-gathered-badges\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Zuletzt gesammelte Abzeichen</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 10px!important;color:rgb(255,255,255);\\\">\\n\\n              <div *ngIf=\\\"getLastCompletedBadges().length == 0\\\" (click)=\\\"navigateToComponent('userprogress')\\\" style='width:100%;padding:0 20px;text-align:justify;margin-bottom:1em;'><span class='link'>Du hast leider noch kein gesammeltes Abzeichen.</span></div>\\n\\n              <div *ngFor=\\\"let t_badge_data of getLastCompletedBadges()\\\" style='display:table-row;vertical-align:top;'>\\n                  <div style='display:table-cell;vertical-align:top;'>\\n                      <img style='width:5em;' src='{{lService.getPictureLink(t_badge_data.picture_id)}}'>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;min-width:120px;'>\\n                      <p style='font-size:1.1em;text-align:center;'>{{t_badge_data.badgename}}</p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;'>\\n                      <p style='font-size:1em;text-align:center;'>{{lService.getFormatedDate(t_badge_data.ts_badge_completed)}}</p>\\n                  </div>\\n              </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <!-- Last completed tasks -->\\n        <div id=\\\"cf-ho-completed-tasks\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Zuletzt gel\\u00F6ste Aufgaben</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 10px!important;color:rgb(255,255,255);\\\">\\n\\n              <div *ngIf=\\\"getLastCompletedTasks().length == 0\\\" (click)=\\\"navigateToComponent('tasks')\\\" style='width:100%;padding:0 20px;text-align:justify;margin-bottom:1em;'><span class='link'>Du hast leider noch keine gel\\u00F6sten Aufgaben. Klicke hier, um zu deinen aktuellen Aufgaben zu gelangen.</span></div>\\n\\n              <div *ngFor=\\\"let t_task_data of getLastCompletedTasks()\\\" style='display:table-row;vertical-align:top;'>\\n                  <p style='display:table-cell;vertical-align:middle;font-size:1.1em;text-align:center;'><span (click)=\\\"navigateToTask(t_task_data.task_id)\\\" class='link'>{{t_task_data.taskname}}</span></p>\\n                  <div style='display:table-cell;vertical-align:middle;min-width:100px;'>\\n                      <p style='font-size:1.1em;text-align:center;'>+{{t_task_data.score_rule}} Exp.</p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;'>\\n                      <p style='font-size:1em;text-align:center;'>{{lService.getFormatedDate(t_task_data.ts_last_update)}}</p>\\n                  </div>\\n              </div>\\n\\n            </div>\\n\\n\\n        </div>\\n\\n        <!-- Best Users -->\\n        <div id=\\\"cf-ho-best-users\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\"><span (click)=\\\"navigateToComponent('highscorelist/0')\\\" class=\\\"link\\\">Die besten User</span></p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 2px;color:rgb(255,255,255);\\\">\\n\\n\\n                <div style='display:table-row;width:100%;'>\\n\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">NAME</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">EXP.</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">FAK.</p>\\n                    </div>\\n\\n                </div>\\n\\n                <div *ngFor=\\\"let t_user of getBestUsers()\\\" style='display:table-row;vertical-align:top;'>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1em;text-align:center;'>{{t_user.username}}</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1.1em;text-align:center;'>{{t_user.user_score}}</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1em;text-align:center;'>{{t_user.facultyname}}</p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <!-- Best Users for Users Faculty -->\\n        <div id=\\\"cf-ho-best-users-faculty\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Die besten User deiner Fakult\\u00E4t</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 2px;color:rgb(255,255,255);\\\">\\n\\n\\n                <div style='display:table-row;width:100%;'>\\n\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">NAME</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">EXP.</p>\\n                    </div>\\n\\n                </div>\\n\\n                <div *ngFor=\\\"let t_user of getBestUsersForFaculty()\\\" style='display:table-row;vertical-align:top;'>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1em;text-align:center;'>{{t_user.username}}</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1.1em;text-align:center;'>{{t_user.user_score}}</p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n\\n    </div>\\n\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], StatisticsComponent);\n\t    return StatisticsComponent;\n\t}());\n\texports.StatisticsComponent = StatisticsComponent;\n\t//# sourceMappingURL=statistics.component.js.map\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar TaskComponent = (function () {\n\t    function TaskComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t        //Task Type 1\n\t        this.shuffleArrayTaskType1 = [1, 2, 3, 4];\n\t        this.shuffleArrayTaskType4 = [1, 2, 3];\n\t        //Solving Parameters\n\t        this.successfullSolved = false;\n\t        this.notSuccessfullSolved = false;\n\t        //Solved Overlay\n\t        this.solvedOverlayArray = [];\n\t    }\n\t    TaskComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.successfullSolved = false;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            console.log(\"Specific Content\");\n\t            console.log(specificcontent);\n\t            if (typeof specificcontent[\"TASK_DATA\"] !== 'undefined' && typeof specificcontent[\"TASK_DATA\"].json_task_data !== 'undefined')\n\t                specificcontent[\"TASK_DATA\"].json_task_data = JSON.parse(specificcontent[\"TASK_DATA\"].json_task_data);\n\t            _this.shuffle(_this.shuffleArrayTaskType1);\n\t            _this.shuffle(_this.shuffleArrayTaskType4);\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t            if (_this.getTaskData().task_type_id == \"3\") {\n\t                setTimeout(function () { _this.initBarcodeReader(); }, 300);\n\t            }\n\t            if (_this.getTaskData().task_type_id == \"6\" && _this.additionalinformation.length != 0 && !isNaN(parseFloat(_this.additionalinformation))) {\n\t                _this.solveTaskType6(_this.additionalinformation);\n\t            }\n\t        });\n\t        this.lService.loadSpecificContent('task&task_id=' + this.task_id);\n\t    };\n\t    TaskComponent.prototype.getTaskBlockedData = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['TASK_BLOCKED_DATA'] !== 'undefined' ? this.specificcontent['TASK_BLOCKED_DATA'] : {};\n\t    };\n\t    TaskComponent.prototype.getUserTaskScore = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_TASK_SCORE'] !== 'undefined' ? this.specificcontent['USER_TASK_SCORE'] : {\n\t            value: \"0\",\n\t            score: \"0\"\n\t        };\n\t    };\n\t    TaskComponent.prototype.getTaskData = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['TASK_DATA'] !== 'undefined' ? this.specificcontent['TASK_DATA'] : {\n\t            task_type_id: \"0\",\n\t            json_task_data: {},\n\t            needed_value: \"0\",\n\t            score_rule: \"1\"\n\t        };\n\t    };\n\t    TaskComponent.prototype.getQuestsContainingTaskId = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['QUESTS_CONTAINING_TASK_ID'] !== 'undefined' ? this.specificcontent['QUESTS_CONTAINING_TASK_ID'] : [];\n\t    };\n\t    TaskComponent.prototype.getIsTaskBlocked = function () {\n\t        return typeof this.getTaskBlockedData().ts_blocked !== 'undefined' && (this.getTaskBlockedData().ts_blocked + \"\").length != 0;\n\t    };\n\t    TaskComponent.prototype.getIsTaskSolvedByUser = function () {\n\t        return parseFloat(this.getUserTaskScore().value) >= parseFloat(this.getTaskData().needed_value);\n\t    };\n\t    TaskComponent.prototype.getIsTaskActive = function () {\n\t        return this.getTaskData().is_task_active == '1';\n\t    };\n\t    TaskComponent.prototype.navigateToQuest = function (quest_id) {\n\t        this.router.navigate(['/l/quest', quest_id]);\n\t    };\n\t    TaskComponent.prototype.solveTaskOverall = function (solvedata, task_id) {\n\t        var _this = this;\n\t        this.lService.solveTask(solvedata, task_id).subscribe(function (data) {\n\t            console.log(data);\n\t            if (typeof data.result !== 'undefined' && data.result == true && typeof data.data !== 'undefined' && typeof data.data.task_solved !== 'undefined' && data.data.task_solved == true) {\n\t                _this.successfullSolved = true;\n\t                //Start Solved Overlay\n\t                var t_solved_badges = \"\";\n\t                var t_solved_quests = \"\";\n\t                //Solved Badges\n\t                if (typeof data.data[\"badges\"] !== 'undefined') {\n\t                    for (var t_key_badges in data.data[\"badges\"]) {\n\t                        t_solved_badges += \"-\" + data.data[\"badges\"][t_key_badges][\"badgename\"] + \"<br />\";\n\t                        _this.solvedOverlayArray.push({\n\t                            type: 2,\n\t                            name: \"Abzeichen erhalten\",\n\t                            solved_description: \"Herzlichen Glückwunsch! Du hast das Abzeichen '\" + data.data[\"badges\"][t_key_badges][\"badgename\"] + \"' abgeschlossen.<br /><img src='\" + _this.lService.getPictureLink(data.data[\"badges\"][t_key_badges][\"picture_id\"]) + \"' />\"\n\t                        });\n\t                    }\n\t                }\n\t                //Solved Quests\n\t                if (typeof data.data[\"quests\"] !== 'undefined') {\n\t                    for (var t_key_quests in data.data[\"quests\"]) {\n\t                        t_solved_quests += \"-\" + data.data[\"quests\"][t_key_quests][\"questname\"] + \"<br />\";\n\t                        _this.solvedOverlayArray.push({\n\t                            type: 3,\n\t                            name: \"Quest erfüllt\",\n\t                            solved_description: \"Herzlichen Glückwunsch! Du hast den Quest '\" + data.data[\"quests\"][t_key_quests][\"questname\"] + \"' abgeschlossen.\",\n\t                            score_rule: data.data[\"quests\"][t_key_quests][\"score_rule\"],\n\t                            faculty_score_rule: data.data[\"quests\"][t_key_quests][\"score_rule\"]\n\t                        });\n\t                    }\n\t                }\n\t                //Solved Tasks\n\t                if (typeof data.data[\"tasks\"] !== 'undefined') {\n\t                    for (var t_key_tasks in data.data[\"tasks\"]) {\n\t                        _this.solvedOverlayArray.push({\n\t                            type: 1,\n\t                            name: \"Aufgabe erfüllt\",\n\t                            solved_description: \"Herzlichen Glückwunsch! Du hast die Aufgabe '\" + data.data[\"tasks\"][t_key_tasks][\"taskname\"] + \"' abgeschlossen.\",\n\t                            score_rule: data.data[\"tasks\"][t_key_tasks][\"score_rule\"],\n\t                            faculty_score_rule: data.data[\"tasks\"][t_key_tasks][\"score_rule\"],\n\t                            solved_quests: t_solved_quests,\n\t                            solved_badges: t_solved_badges\n\t                        });\n\t                    }\n\t                }\n\t                //End Solved Overlay\n\t                //Reload Data\n\t                _this.lService.loadSpecificContent('task&task_id=' + _this.task_id);\n\t            }\n\t            else {\n\t                window.alert(\"Leider hast du die Aufgabe nicht erfolgreich gelöst! Bitte versuche es erneut!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t        });\n\t    };\n\t    //Task Type 1\n\t    TaskComponent.prototype.getTaskType1Answer = function (id) {\n\t        if (typeof this.user.language === 'undefined' || this.user.language.length == 0 || $.isEmptyObject(this.getTaskData().json_task_data))\n\t            return { id: \"\", answer: \"\" };\n\t        return { id: \"a\" + this.shuffleArrayTaskType1[id], answer: this.getTaskData().json_task_data[this.user.language][\"a\" + this.shuffleArrayTaskType1[id]] };\n\t    };\n\t    TaskComponent.prototype.solveTaskType1 = function (id) {\n\t        var solvedata = JSON.stringify({ chosenanswer: this.getTaskType1Answer(id).id });\n\t        this.solveTaskOverall(solvedata, this.task_id);\n\t    };\n\t    //Task Type 2 -- Locationsearch\n\t    TaskComponent.prototype.solveTaskType2 = function (id) {\n\t    };\n\t    //Task Type 3\n\t    TaskComponent.prototype.solveTaskType3 = function (isbn) {\n\t        var solvedata = JSON.stringify({ \"isbn\": isbn });\n\t        this.solveTaskOverall(solvedata, this.task_id);\n\t    };\n\t    TaskComponent.prototype.initBarcodeReader = function () {\n\t        var _this = this;\n\t        var takePicture = document.querySelector(\"#upload-barcode-pic\");\n\t        var showPicture = document.createElement(\"img\");\n\t        var Result = document.querySelector(\"#cf-tas-specification-task-3-result-text\");\n\t        var canvas = document.getElementById(\"task-3-picture\");\n\t        var ctx = canvas.getContext(\"2d\");\n\t        JOB.Init();\n\t        JOB.SetImageCallback(function (result) {\n\t            if (result.length > 0) {\n\t                var tempArray = [];\n\t                for (var i = 0; i < result.length; i++) {\n\t                    tempArray.push(\"Gefundene ISBN : \" + result[i].Value);\n\t                }\n\t                Result.innerHTML = tempArray.join(\"<br />\");\n\t                //Wert ist in result[0].Value enthalten\n\t                //Sende die Daten hier noch\n\t                _this.solveTaskType3(result[0].Value + \"\");\n\t            }\n\t            else {\n\t                if (result.length === 0) {\n\t                    Result.innerHTML = \"Dekodieren ist leider fehlgeschlagen. Bitte versuche es mit einem Bild von besserer Qualität!\";\n\t                }\n\t            }\n\t        });\n\t        JOB.PostOrientation = true;\n\t        JOB.OrientationCallback = function (result) {\n\t            canvas.width = result.width;\n\t            canvas.height = result.height;\n\t            var data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t            for (var i = 0; i < data.data.length; i++) {\n\t                data.data[i] = result.data[i];\n\t            }\n\t            ctx.putImageData(data, 0, 0);\n\t        };\n\t        JOB.SwitchLocalizationFeedback(true);\n\t        JOB.SetLocalizationCallback(function (result) {\n\t            ctx.beginPath();\n\t            ctx.lineWIdth = \"2\";\n\t            ctx.strokeStyle = \"red\";\n\t            for (var i = 0; i < result.length; i++) {\n\t                ctx.rect(result[i].x, result[i].y, result[i].width, result[i].height);\n\t            }\n\t            ctx.stroke();\n\t        });\n\t        if (takePicture && showPicture) {\n\t            takePicture.onchange = function (event) {\n\t                $(\"#task-3-picture\").show();\n\t                var files = event.target.files;\n\t                if (files && files.length > 0) {\n\t                    var file = files[0];\n\t                    try {\n\t                        var URL = window.URL || window.webkitURL;\n\t                        showPicture.onload = function (event) {\n\t                            Result.innerHTML = \"\";\n\t                            JOB.DecodeImage(showPicture);\n\t                            URL.revokeObjectURL(showPicture.src);\n\t                        };\n\t                        showPicture.src = URL.createObjectURL(file);\n\t                    }\n\t                    catch (e) {\n\t                        try {\n\t                            var fileReader = new FileReader();\n\t                            fileReader.onload = function (event) {\n\t                                showPicture.onload = function (event) {\n\t                                    Result.innerHTML = \"\";\n\t                                    console.log(\"filereader\");\n\t                                    JOB.DecodeImage(showPicture);\n\t                                };\n\t                                showPicture.src = event.target.result;\n\t                            };\n\t                            fileReader.readAsDataURL(file);\n\t                        }\n\t                        catch (e) {\n\t                            Result.innerHTML = \"Neither createObjectURL or FileReader are supported\";\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t        }\n\t    };\n\t    //Task Type 4\n\t    TaskComponent.prototype.getTaskType4Answer = function (id) {\n\t        if (typeof this.user.language === 'undefined' || this.user.language.length == 0 || $.isEmptyObject(this.getTaskData().json_task_data))\n\t            return { id: \"\", answer: \"\" };\n\t        return { id: \"s\" + this.shuffleArrayTaskType4[id], answer: this.getTaskData().json_task_data[this.user.language][\"s\" + this.shuffleArrayTaskType4[id]] };\n\t    };\n\t    TaskComponent.prototype.exchangeShuffleArrayPosition = function (id1, id2) {\n\t        var t_value_id1 = this.shuffleArrayTaskType4[id1];\n\t        this.shuffleArrayTaskType4[id1] = this.shuffleArrayTaskType4[id2];\n\t        this.shuffleArrayTaskType4[id2] = t_value_id1;\n\t    };\n\t    TaskComponent.prototype.solveTaskType4 = function () {\n\t        var solvedata = JSON.stringify({ \"1\": \"s\" + this.shuffleArrayTaskType4[0], \"2\": \"s\" + this.shuffleArrayTaskType4[1], \"3\": \"s\" + this.shuffleArrayTaskType4[2] });\n\t        this.solveTaskOverall(solvedata, this.task_id);\n\t    };\n\t    //Task Type 5\n\t    TaskComponent.prototype.getTaskType5TextWithoutBlankStatement = function () {\n\t        if (typeof this.user.language === 'undefined' || this.user.language.length == 0 || $.isEmptyObject(this.getTaskData().json_task_data))\n\t            return { text: \"\" };\n\t        return { text: this.getTaskData().json_task_data[this.user.language][\"text\"].replace(\"[::BLANK::]\", \"___\") };\n\t    };\n\t    TaskComponent.prototype.solveTaskType5 = function () {\n\t        var solvedata = JSON.stringify({ text: $('#input-specification-task-blank').val() });\n\t        this.solveTaskOverall(solvedata, this.task_id);\n\t    };\n\t    //Task Type 6\n\t    TaskComponent.prototype.solveTaskType6 = function (location_id) {\n\t        var solvedata = JSON.stringify({ \"loc\": location_id });\n\t        this.solveTaskOverall(solvedata, this.task_id);\n\t    };\n\t    //Solved Overlay Methods\n\t    TaskComponent.prototype.removeFromSolvedOverlayArray = function (index) {\n\t        this.solvedOverlayArray.splice(index, 1);\n\t    };\n\t    //Helper\n\t    TaskComponent.prototype.shuffle = function (a) {\n\t        for (var i = a.length; i; i--) {\n\t            var j = Math.floor(Math.random() * i);\n\t            _a = [a[j], a[i - 1]], a[i - 1] = _a[0], a[j] = _a[1];\n\t        }\n\t        var _a;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TaskComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TaskComponent.prototype, \"universalcontent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TaskComponent.prototype, \"task_id\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TaskComponent.prototype, \"additionalinformation\", void 0);\n\t    TaskComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'task-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n        <div *ngIf=\\\"getIsTaskBlocked()\\\" class=\\\"content-frame\\\">\\n\\n            <div class=\\\"content-task-frame\\\" style=\\\"margin:0px;border-radius:0px;width:100%!important;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div style=\\\"font-size:1.5em!important;\\\">Aufgabe: {{getTaskData().taskname}}</div>\\n                    <br>\\n                    <div id=\\\"task-description-healine\\\" [innerHTML]=\\\"getTaskData().description_long\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <p class='headline' style=\\\"background:rgb(255,120,120);\\\">\\n                Diese Aufgabe ist zur Zeit f\\u00FCr dich nicht l\\u00F6sbar.\\n                <br>\\n                Wieder l\\u00F6sbar ab: {{lService.getFormatedDate(getTaskBlockedData().ts_blocked)}}\\n            </p>\\n        </div>\\n\\n        <div *ngIf=\\\"getIsTaskSolvedByUser()\\\" class=\\\"content-frame\\\">\\n\\n            <div class=\\\"content-task-frame\\\" style=\\\"margin:0px;border-radius:0px;width:100%!important;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div style=\\\"font-size:1.5em!important;\\\">Aufgabe: {{getTaskData().taskname}}</div>\\n                    <br>\\n                    <div id=\\\"task-description-healine\\\" [innerHTML]=\\\"getTaskData().description_long\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <p class='headline' style=\\\"background:rgb(120,255,120);\\\">\\n                Du hast diese Aufgabe bereits gel\\u00F6st.\\n                <br>\\n                Gel\\u00F6st am: {{lService.getFormatedDate(getUserTaskScore().ts_last_update)}}\\n            </p>\\n        </div>\\n\\n        <div *ngIf=\\\"!getIsTaskActive()\\\" class=\\\"content-frame\\\" >\\n            <p class='headline' style=\\\"background:rgb(255,120,120);\\\">\\n                Diese Aufgabe ist nicht l\\u00E4nger aktiv!\\n            </p>\\n        </div>\\n\\n        <!-- Specific Task Data -->\\n        <div *ngIf=\\\"!getIsTaskBlocked() && !getIsTaskSolvedByUser() && getIsTaskActive()\\\" id=\\\"cf-tas-specification-task\\\" class=\\\"content-frame\\\" style=\\\"padding-bottom: 10px;\\\">\\n\\n            <div class=\\\"content-task-frame\\\" style=\\\"margin:0px;border-radius:0px;width:100%!important;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div style=\\\"font-size:1.5em!important;\\\">Aufgabe: {{getTaskData().taskname}}</div>\\n                    <br>\\n                    <div id=\\\"task-description-healine\\\" [innerHTML]=\\\"getTaskData().description_long\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <!-- Task Type 1 -->\\n            <div *ngIf=\\\"getTaskData().task_type_id==1\\\" class='cf-tas-specification-task-1 depend-on-device-table-to-none' style='width:100%;border-spacing:10px 15px;margin-top:5px;'>\\n                <div class='depend-on-device-tablerow-to-none' style='width:100%;'>\\n\\n                    <div (click)=\\\"solveTaskType1(0)\\\" [innerHTML]=\\\"getTaskType1Answer(0).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;'>\\n                    </div>\\n\\n                    <div (click)=\\\"solveTaskType1(1)\\\" [innerHTML]=\\\"getTaskType1Answer(1).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;color:white!important;'>\\n                    </div>\\n\\n                </div>\\n                <div class='depend-on-device-tablerow-to-none' style='width:100%;'>\\n\\n                    <div (click)=\\\"solveTaskType1(2)\\\" [innerHTML]=\\\"getTaskType1Answer(2).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;'>\\n                    </div>\\n\\n                    <div (click)=\\\"solveTaskType1(3)\\\" [innerHTML]=\\\"getTaskType1Answer(3).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;'>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <!-- Task Type 2 -->\\n            <div *ngIf=\\\"getTaskData().task_type_id==2\\\" class=\\\"cf-tas-specification-task-2\\\">\\n\\n                <div id=\\\"map\\\" style=\\\"width:100%;height:350px;text-align:center;font-size:1.5em;color:black;background:url(../public/images/kachel.png);background-repeat:repeat;\\\">\\n                    Du wirst zur Zeit lokalisiert. Bitte checke, ob du deinem Browser das Recht gew\\u00E4hrst auf deinen Standort zuzugreifen.\\n                </div>\\n\\n\\n                <button id=\\\"cf-tas-specification-task-2-check-in\\\" class=\\\"button\\\">QR Code hochladen</button>\\n\\n                <div style=\\\"width:320px;margin:0!important;margin-right:auto!important;margin-left:auto!important;margin-top:1em!important;\\\">\\n                    <img id=\\\"qrcode-picture-img\\\" width=\\\"320\\\" style=\\\"display:none;\\\">\\n                </div>\\n\\n                <div class=\\\"content-frame\\\">\\n                    <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                        <span class=\\\"fa fa-exclamation-triangle\\\"></span> Du kannst diese Aufgabe auch durch Scannen des QR Codes an dem Ort l\\u00F6sen!\\n                    </p>\\n                </div>\\n\\n                <div class=\\\"content-frame\\\">\\n                    <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                        <span class=\\\"fa fa-exclamation-triangle\\\"></span> Das Spiel lokalisiert deine Position in einem gewissen Interval, sobald du die Webseite ge\\u00F6ffnet hast und deine Zustimmung hierzu gegeben hast! Solltest du also in der N\\u00E4he des gesuchten Ortes sein, wirst du automatisch benachrichtigt.\\n                    </p>\\n                </div>\\n\\n            </div>\\n\\n            <!-- Task Type 3 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==3\\\" class=\\\"cf-tas-specification-task-3\\\" style=\\\"margin-top:30px;\\\">\\n                <div style=\\\"width:320px;margin:0!important;margin-right:auto!important;margin-left:auto!important;\\\">\\n                    <canvas width=\\\"320\\\" height=\\\"240\\\" id=\\\"task-3-picture\\\" style=\\\"display:none;\\\"></canvas>\\n                </div>\\n                <p id=\\\"cf-tas-specification-task-3-result-text\\\" style=\\\"width:100%;text-align:center;margin-top:20px;\\\"></p>\\n                <button onclick=\\\"$('#upload-barcode-pic').click();\\\" class=\\\"button\\\">Lade einen Barcode hoch!</button>\\n                <input id=\\\"upload-barcode-pic\\\" type=\\\"file\\\" accept=\\\"image/*\\\" style=\\\"display:none;\\\" />\\n            </div>\\n\\n\\n            <!-- Task Type 4 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==4\\\" class=\\\"cf-tas-specification-task-4\\\" style=\\\"padding:0 1.5em;\\\">\\n                <div id=\\\"cf-tas-specification-task-source-1\\\" style=\\\"margin-top:1em;width:100%;line-height:3em;background:green;color:rgb(0,0,0);vertical-align:middle;text-align:center;\\\">\\n                    <div style=\\\"min-width:30%;float:left;color:transparent;\\\">a</div>\\n                    <div class=\\\"cf-tas-specification-task-4-source\\\" style=\\\"width:40%;float:left;\\\">{{getTaskType4Answer(0).answer}}</div>\\n                    <div class=\\\"fa fa-arrow-circle-o-down\\\" (click)=\\\"exchangeShuffleArrayPosition(0,1);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n                <div id=\\\"cf-tas-specification-task-source-2\\\" style=\\\"margin-top:1em;width:100%;line-height:3em;background:yellow;color:rgb(0,0,0);vertical-align:middle;text-align:center;cursor:pointer;\\\">\\n                    <div class=\\\"fa fa-arrow-circle-o-up\\\" (click)=\\\"exchangeShuffleArrayPosition(0,1);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div class=\\\"cf-tas-specification-task-4-source\\\" style=\\\"width:40%;float:left;\\\">{{getTaskType4Answer(1).answer}}</div>\\n                    <div class=\\\"fa fa-arrow-circle-o-down\\\" (click)=\\\"exchangeShuffleArrayPosition(1,2);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n                <div id=\\\"cf-tas-specification-task-source-3\\\" style=\\\"margin-top:1em;width:100%;line-height:3em;background:red;color:rgb(0,0,0);vertical-align:middle;text-align:center;cursor:pointer;\\\">\\n                    <div class=\\\"fa fa-arrow-circle-o-up\\\" (click)=\\\"exchangeShuffleArrayPosition(1,2);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div class=\\\"cf-tas-specification-task-4-source\\\" style=\\\"width:40%;float:left;\\\">{{getTaskType4Answer(2).answer}}</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n\\n                <button id=\\\"cf-tas-specification-task-4-send-button\\\" (click)=\\\"solveTaskType4()\\\" class=\\\"button\\\" style=\\\"margin-top:3em;margin-bottom:0.3em;\\\">\\u00DCberpr\\u00FCfe jetzt meine Antwort</button>\\n            </div>\\n\\n            <!-- Task Type 5 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==5\\\" class=\\\"cf-tas-specification-task-5\\\" style=\\\"padding:0 1.5em;\\\">\\n                <div class=\\\"cf-tas-specification-task-blank-text\\\" style=\\\"margin-top:1em;width:100%;color:rgb(0,0,0);vertical-align:middle;text-align:center;\\\">\\n                    <p>{{getTaskType5TextWithoutBlankStatement().text}}</p>\\n                </div>\\n                <div class=\\\"cf-tas-specification-task-blank-input\\\" style=\\\"margin-top:0.3em;width:100%;color:rgb(0,0,0);vertical-align:middle;text-align:center;\\\">\\n                    <input type=\\\"text\\\" [id]=\\\"'input-specification-task-blank'\\\" placeholder=\\\"Gib hier deine Antwort ein\\\" style=\\\"width:100%;\\\">\\n                </div>\\n\\n                <button id=\\\"cf-tas-specification-task-5-send-button\\\" (click)=\\\"solveTaskType5()\\\" class=\\\"button\\\" style=\\\"margin-top:2em;margin-bottom:0.3em;\\\">\\u00DCberpr\\u00FCfe jetzt meine Antwort</button>\\n            </div>\\n\\n            <!-- Task Type 6 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==6\\\" class=\\\"cf-tas-specification-task-6\\\">\\n\\n                <div class=\\\"content-frame\\\">\\n                    <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                        <span class=\\\"fa fa-exclamation-triangle\\\"></span> Da nicht alle g\\u00E4ngigen Browser den QR Code Scan unterst\\u00FCtzen. Muss leider ein externer QR Code Scanner auf deinem Smartphone benutzt werden, um die Aufgabe zu l\\u00F6sen. Folge dann dem Link in dem gescannten QR Code und du hast diese Aufgabe abgeschlossen!\\n                    </p>\\n                </div>\\n\\n            </div>\\n\\n\\n        </div>\\n\\n        <!-- Overview of task -->\\n        <div id=\\\"cf-tas-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Mehr Informationen zu der Aufgabe</p>\\n\\n\\n\\n            <div style=\\\"padding:1em 1em;width:100%;max-width:30em;margin-left:auto;margin-right:auto;\\\">\\n\\n\\n                <div style=\\\"display:table;border-spacing:0 2px;width:100%;\\\">\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Erfahrung:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">\\n                          +{{getTaskData().score_rule}}\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Dein Fortschritt:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">{{getUserTaskScore().value}}</div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Ben\\u00F6tigter Fortschritt:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">{{getTaskData().needed_value}}</div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Deine gesammelten Exp.:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;color:green!important;\\\">+{{getUserTaskScore().score}}</div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Diese Aufgabe ist Teil des folgenden Quests:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">{{getQuestsContainingTaskId().length==0?'-':''}}</div>\\n                    </div>\\n\\n                    <div *ngFor=\\\"let t_quest of getQuestsContainingTaskId();\\\" [hidden]=\\\"t_quest.is_active!='1'\\\" style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">\\n                            <div (click)=\\\"navigateToQuest(t_quest.quest_id)\\\" class=\\\"content-quest-frame\\\" style=\\\"width:100%;\\\">\\n                                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">Quest: {{t_quest.questname}}</div>\\n                                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_quest.score_rule}}</span> Exp.</div>\\n                                    <div style=\\\"clear:both;\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\"></div>\\n                    </div>\\n\\n\\n                </div>\\n\\n            </div>\\n            <div style=\\\"clear:both;\\\"></div>\\n\\n        </div>\\n\\n    </div>\\n\\n\\n\\n</div>\\n\\n    <!-- Solved Overlay -->\\n    <div *ngFor=\\\"let solvedOverlayDataObject of solvedOverlayArray;let i = index;\\\">\\n      <solvedoverlay-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [solveddata]=\\\"solvedOverlayDataObject\\\" (closeOverlay)=\\\"removeFromSolvedOverlayArray(i);\\\"></solvedoverlay-component>\\n    </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], TaskComponent);\n\t    return TaskComponent;\n\t}());\n\texports.TaskComponent = TaskComponent;\n\t//# sourceMappingURL=task.component.js.map\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar TasksComponent = (function () {\n\t    function TasksComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t    }\n\t    TasksComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        this.lService.loadSpecificContent('tasks');\n\t    };\n\t    TasksComponent.prototype.getUniversalContentHome1Description = function () {\n\t        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'HOME_1'; }).length != 0) {\n\t            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'HOME_1'; })[0][\"text\"];\n\t        }\n\t        return '';\n\t    };\n\t    TasksComponent.prototype.tasksAvailable = function () {\n\t        if ($.isEmptyObject(this.specificcontent) ||\n\t            typeof this.specificcontent['Active_Tasks'] === 'undefined' ||\n\t            typeof this.specificcontent['Active_Quests'] === 'undefined')\n\t            return false;\n\t        if (this.specificcontent['Active_Tasks'].length == 0 &&\n\t            this.specificcontent['Active_Quests'].length == 0)\n\t            return false;\n\t        return true;\n\t    };\n\t    TasksComponent.prototype.getActiveQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Active_Quests'] !== 'undefined' ? this.specificcontent['Active_Quests'] : [];\n\t    };\n\t    TasksComponent.prototype.getActiveTasks = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Active_Tasks'] !== 'undefined' ? this.specificcontent['Active_Tasks'] : [];\n\t    };\n\t    TasksComponent.prototype.isStepCompleted = function (tasks) {\n\t        for (var key in tasks) {\n\t            if (typeof tasks[key].completed === 'undefined' || tasks[key].completed == false)\n\t                return false;\n\t        }\n\t        return true;\n\t    };\n\t    TasksComponent.prototype.hasQuestStepAnUncompletedPrestep = function (queststeps, step) {\n\t        return parseInt(step) == 0 ? false : !this.isStepCompleted(queststeps[parseInt(step) - 1]);\n\t    };\n\t    TasksComponent.prototype.navigateToQuest = function (quest_id) {\n\t        this.router.navigate(['/l/quest', quest_id]);\n\t    };\n\t    TasksComponent.prototype.navigateToTask = function (task_id) {\n\t        this.router.navigate(['/l/task', task_id]);\n\t    };\n\t    TasksComponent.prototype.navigateToBadge = function (badge_id) {\n\t        this.router.navigate(['/l/badge', badge_id]);\n\t    };\n\t    TasksComponent.prototype.clickHome1Button = function () {\n\t        $('#cf-ta-introduction-content').fadeToggle(0);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TasksComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TasksComponent.prototype, \"universalcontent\", void 0);\n\t    TasksComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'tasks-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12 col-sm-3\\\" style=\\\"padding:0;\\\">\\n\\n        <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\"><span class=\\\"special-font-color\\\">{{user?.username}}</span></p>\\n\\n            <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                <div style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                    <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"depend-on-device-tablecell-to-none\\\" style=\\\"width:100%;vertical-align:middle;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;margin-top:0.5em;\\\">Erfahrung</p>\\n                        <p style=\\\"font-size:1em;text-align:center;\\\"><span style=\\\"font-size:1.6em!important;font-weight:bold;color:#0e9873;\\\">{{user?.user_score}}</span></p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                </div>\\n\\n\\n            </div>\\n\\n\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-sm-9 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- What can I do here -->\\n        <div id=\\\"cf-ta-introduction\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline headline-as-button\\\" (click)=\\\"clickHome1Button();\\\" style=\\\"height:auto;padding-top:0px!important;\\\"><button class=\\\"button\\\">Was kann ich hier machen?</button></p>\\n\\n            <div id=\\\"cf-ta-introduction-content\\\" style='display:none;width:100%;border-spacing:3px 10px;'>\\n\\n                <div style='line-height:1.4em;text-align:justify;width:100%;vertical-align:top;color:rgb(0,0,0);padding:1em 0;'>\\n                    {{getUniversalContentHome1Description()}}\\n                </div>\\n\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n\\n\\n  </div>\\n\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- Overview of tasks -->\\n        <div id=\\\"cf-ta-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Deine n\\u00E4chsten Ziele</p>\\n\\n            <p *ngIf=\\\"!tasksAvailable()\\\" class='content-none-placeholder' style='width:100%;text-align:center;margin-top:1em;margin-bottom:1em;background: yellow;padding:0.5em 0;'>Keine weiteren Aufgaben vorhanden</p>\\n\\n            <!-- ACTIVE TASKS -->\\n\\n            <div *ngFor=\\\"let t_task of getActiveTasks();\\\" (click)=\\\"navigateToTask(t_task.task_id)\\\" class=\\\"content-task-frame\\\" style=\\\"width:100%;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">Aufgabe: {{t_task.taskname}}</div>\\n                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_task.score_rule}}</span> Exp.</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                    <div style=\\\"font-size:1em;text-align:justify;margin-top:1em;\\\">{{t_task.description_long}}</div>\\n                </div>\\n            </div>\\n\\n            <!-- Quests -->\\n            <div *ngFor=\\\"let t_quest of getActiveQuests()\\\" (click)=\\\"navigateToQuest(t_quest.quest_id)\\\" class=\\\"content-quest-frame\\\" style=\\\"width:100%;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">{{'Quest: '+t_quest.questname}}</div>\\n                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_quest.score_rule}}</span> Exp.</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n\\n                    <div *ngFor=\\\"let t_quest_step of t_quest.json_quest_task_ids; let i = index;\\\" [hidden]=\\\"hasQuestStepAnUncompletedPrestep(t_quest.json_quest_task_ids, i)\\\">\\n                      <div style='font-size:1.2em;font-weight:bold;text-align:center;margin-top:0.3em;margin-bottom:0.2em;'>Stufe {{i+1}} von {{t_quest.json_quest_task_ids.length}}</div>\\n\\n                      <div *ngFor=\\\"let t_quest_step_task of t_quest_step; let i_tasks = index;\\\">\\n                        <div style='cursor:pointer;font-weight:bold;font-size:1em;color:rgb(255,255,255);border:0px solid rgb(0,0,0);border-radius:4px;padding:0.2em 0.3em;background:rgb(50,50,50);margin-bottom:2px;' >\\n                          {{t_quest_step_task.taskname}}\\n                          <button\\n                            [class.fa-check-square]=\\\"t_quest_step_task.completed\\\"\\n                            [style.color]=\\\"t_quest_step_task.completed ?'rgb(0,150,0)':'rgb(150,0,0)'\\\"\\n                            [class.fa-minus-square]=\\\"!t_quest_step_task.completed\\\"\\n                            class='fa' style='padding:0;font-size:1em;border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n\\n                        </div>\\n                      </div>\\n\\n\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n        </div>\\n\\n\\n    </div>\\n\\n\\n\\n  </div>\\n\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], TasksComponent);\n\t    return TasksComponent;\n\t}());\n\texports.TasksComponent = TasksComponent;\n\t//# sourceMappingURL=tasks.component.js.map\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar TasksearchComponent = (function () {\n\t    function TasksearchComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t    }\n\t    TasksearchComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t            _this.initMap();\n\t        });\n\t        this.lService.loadSpecificContent('tasksearch');\n\t    };\n\t    TasksearchComponent.prototype.getLocationsWhereUserCanFindTaskOrQuest = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['LOCATIONS_WHERE_USER_CAN_FIND_TASK_OR_QUEST'] !== 'undefined' ? this.specificcontent['LOCATIONS_WHERE_USER_CAN_FIND_TASK_OR_QUEST'] : [];\n\t    };\n\t    TasksearchComponent.prototype.getAllLocations = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['ALL_LOCATIONS'] !== 'undefined' ? this.specificcontent['ALL_LOCATIONS'] : [];\n\t    };\n\t    TasksearchComponent.prototype.getUniversalContent = function (content_mapper) {\n\t        if ($.isEmptyObject(this.universalcontent) || typeof this.universalcontent['_Content'] === 'undefined') {\n\t            return \"\";\n\t        }\n\t        var t_content = this.universalcontent['_Content'].filter(function (x) { return x.content_mapper.toLowerCase() == content_mapper.toLowerCase(); });\n\t        if (t_content.length > 0) {\n\t            return t_content[0].text;\n\t        }\n\t        else {\n\t            return \"\";\n\t        }\n\t    };\n\t    TasksearchComponent.prototype.navigateToQuest = function (quest_id) {\n\t        this.router.navigate(['/l/quest', quest_id]);\n\t    };\n\t    TasksearchComponent.prototype.navigateToTask = function (task_id) {\n\t        this.router.navigate(['/l/task', task_id]);\n\t    };\n\t    TasksearchComponent.prototype.navigateToBadge = function (badge_id) {\n\t        this.router.navigate(['/l/badge', badge_id]);\n\t    };\n\t    TasksearchComponent.prototype.initMap = function () {\n\t        var _this = this;\n\t        OpenLayers.Lang.setCode('de');\n\t        // Position und Zoomstufe der Karte\n\t        this.map = new OpenLayers.Map('show_map', {\n\t            projection: new OpenLayers.Projection(\"EPSG:900913\"),\n\t            displayProjection: new OpenLayers.Projection(\"EPSG:4326\"),\n\t            controls: [\n\t                new OpenLayers.Control.Navigation(),\n\t                new OpenLayers.Control.PanZoomBar()],\n\t            maxExtent: new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34),\n\t            numZoomLevels: 18,\n\t            maxResolution: 156543,\n\t            units: 'meters'\n\t        });\n\t        this.layer_mapnik = new OpenLayers.Layer.OSM.Mapnik(\"Mapnik\");\n\t        this.layer_markers = new OpenLayers.Layer.Markers(\"Address\", { projection: new OpenLayers.Projection(\"EPSG:4326\"),\n\t            visibility: true, displayInLayerSwitcher: false });\n\t        this.layer_vector = new OpenLayers.Layer.Vector('vector');\n\t        this.map.addLayers([this.layer_mapnik, this.layer_markers, this.layer_vector]);\n\t        // Position des Markers\n\t        //this.addMarker(this.layer_markers, 8.45657, 49.4875);\n\t        var t_locations = this.getAllLocations();\n\t        for (var t_location_key in t_locations) {\n\t            this.addMarker(this.layer_markers, parseFloat(t_locations[t_location_key].geo_long), parseFloat(t_locations[t_location_key].geo_lati));\n\t        }\n\t        //Jump to Main Location\n\t        var lon = 8.4610;\n\t        var lat = 49.4855;\n\t        var zoom = 14;\n\t        var t_root_location = t_locations.length > 0 ? t_locations[0] : {};\n\t        for (var t_location_key in t_locations) {\n\t            if (t_locations[t_location_key].location_id + \"\" == this.getUniversalContent(\"ROOT_LOCATION\")) {\n\t                t_root_location = t_locations[t_location_key];\n\t            }\n\t        }\n\t        if (typeof t_root_location.location_id !== 'undefined') {\n\t            lon = parseFloat(t_root_location.geo_long);\n\t            lat = parseFloat(t_root_location.geo_lati);\n\t        }\n\t        this.jumpTo(lon, lat, zoom);\n\t        this.geolocate = new OpenLayers.Control.Geolocate({\n\t            bind: false,\n\t            geolocationOptions: {\n\t                enableHighAccuracy: false,\n\t                maximumAge: 0,\n\t                timeout: 7000\n\t            }\n\t        });\n\t        this.map.addControl(this.geolocate);\n\t        this.geolocate.events.register(\"locationupdated\", this.geolocate, function (e) {\n\t            _this.layer_vector.removeAllFeatures();\n\t            var circle = new OpenLayers.Feature.Vector(OpenLayers.Geometry.Polygon.createRegularPolygon(new OpenLayers.Geometry.Point(e.point.x, e.point.y), e.position.coords.accuracy / 8, 40, 0), {}, {\n\t                fillColor: '#000',\n\t                fillOpacity: 0.1,\n\t                strokeWidth: 0\n\t            });\n\t            _this.layer_vector.addFeatures([\n\t                new OpenLayers.Feature.Vector(e.point, {}, {\n\t                    graphicName: 'cross',\n\t                    strokeColor: '#f00',\n\t                    strokeWidth: 2,\n\t                    fillOpacity: 0,\n\t                    pointRadius: 10\n\t                }),\n\t                circle\n\t            ]);\n\t        });\n\t        this.geolocate.activate();\n\t        this.locate();\n\t    };\n\t    TasksearchComponent.prototype.jumpTo = function (lon, lat, zoom) {\n\t        var x = this.Lon2Merc(lon);\n\t        var y = this.Lat2Merc(lat);\n\t        this.map.setCenter(new OpenLayers.LonLat(x, y), zoom);\n\t        return false;\n\t    };\n\t    TasksearchComponent.prototype.Lon2Merc = function (lon) {\n\t        return 20037508.34 * lon / 180;\n\t    };\n\t    TasksearchComponent.prototype.Lat2Merc = function (lat) {\n\t        var PI = 3.14159265358979323846;\n\t        lat = Math.log(Math.tan((90 + lat) * PI / 360)) / (PI / 180);\n\t        return 20037508.34 * lat / 180;\n\t    };\n\t    TasksearchComponent.prototype.addMarker = function (layer, lon, lat) {\n\t        var ll = new OpenLayers.LonLat(this.Lon2Merc(lon), this.Lat2Merc(lat));\n\t        var marker = new OpenLayers.Marker(ll);\n\t        layer.addMarker(marker);\n\t    };\n\t    TasksearchComponent.prototype.locate = function () {\n\t        var _this = this;\n\t        this.geolocate.getCurrentLocation();\n\t        setTimeout(function () { _this.locate(); }, 5000);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TasksearchComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], TasksearchComponent.prototype, \"universalcontent\", void 0);\n\t    TasksearchComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'tasksearch-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12 col-sm-3\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\"><span class=\\\"special-font-color\\\">{{user?.username}}</span></p>\\n\\n              <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                  <div class=\\\"depend-on-device-tablerow-to-none\\\" style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"depend-on-device-tablecell-to-none\\\" style=\\\"width:100%;vertical-align:middle;\\\">\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1.3em;font-weight:bold;text-align:center;margin-top:0.5em;\\\">Erfahrung</p>\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1em;text-align:center;\\\"><span style=\\\"font-size:1.6em!important;font-weight:bold;color:#0e9873;\\\">{{user?.user_score}}</span></p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n\\n      <div class=\\\"col-xs-12 col-sm-9 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n          <!-- Locations where user can find a task or a quest -->\\n          <div *ngFor=\\\"let t_location of getLocationsWhereUserCanFindTaskOrQuest();\\\" class=\\\"content-frame\\\">\\n             <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                 <span class=\\\"fa fa-exclamation-triangle\\\"></span> Besuche {{t_location.locationname}}\\n             </p>\\n          </div>\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <!-- Searching for near tasks -->\\n          <div id=\\\"cf-ma-map\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Suche nach Aufgaben in deiner N\\u00E4he</p>\\n\\n              <div id=\\\"show_map\\\" style=\\\"width:100%;height:500px;text-align:center;font-size:1.5em;color:black;background:url(../public/images/kachel.png);background-repeat:repeat;\\\">\\n              </div>\\n\\n              <div style=\\\"background: white;\\\">\\n               <div id=\\\"osm\\\">\\u00A9 <a href=\\\"http://www.openstreetmap.org\\\">OpenStreetMap</a>\\n                 und <a href=\\\"http://www.openstreetmap.org/copyright\\\">Mitwirkende</a>,\\n                 <a href=\\\"http://creativecommons.org/licenses/by-sa/2.0/deed.de\\\">CC-BY-SA</a>\\n               </div>\\n              </div>\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div class=\\\"content-frame\\\">\\n              <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                  <span class=\\\"fa fa-exclamation-triangle\\\"></span> Du kannst auch den QR-Code an dem Ort scannen und dem Link folgen!\\n              </p>\\n          </div>\\n\\n      </div>\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], TasksearchComponent);\n\t    return TasksearchComponent;\n\t}());\n\texports.TasksearchComponent = TasksearchComponent;\n\t//# sourceMappingURL=tasksearch.component.js.map\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar router_1 = __webpack_require__(29);\n\tvar UnloggedcontentComponent = (function () {\n\t    function UnloggedcontentComponent(router, route, lService) {\n\t        this.router = router;\n\t        this.route = route;\n\t        this.lService = lService;\n\t        this.user = {};\n\t        this.loading_user = true;\n\t        this.universalcontent = {};\n\t        this.loading_universalcontent = true;\n\t        this.showncomponent = \"\";\n\t        this.legalcomponent = \"\";\n\t        //\n\t        this.username = \"\";\n\t        this.pwd = \"\";\n\t        this.new_password_email = \"\";\n\t        this.reg_username = \"\";\n\t        this.reg_username_valid = true;\n\t        this.reg_username_exists = false;\n\t        this.reg_email = \"\";\n\t        this.reg_email_valid = true;\n\t        this.reg_email_exists = false;\n\t        this.reg_password = \"\";\n\t        this.reg_password_valid = true;\n\t        this.reg_password_repeat = \"\";\n\t        this.reg_password_repeat_valid = true;\n\t        this.reg_faculty_id = -2;\n\t    }\n\t    UnloggedcontentComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        $('#titleBar').hide();\n\t        //User\n\t        this.loading_user = true;\n\t        this.lService.user$.subscribe(function (user) {\n\t            console.log(user);\n\t            _this.user = user;\n\t            _this.loading_user = false;\n\t        });\n\t        this.lService.loadUser();\n\t        //Universal Content\n\t        this.loading_universalcontent = true;\n\t        this.lService.universalcontent$.subscribe(function (universalcontent) {\n\t            _this.universalcontent = universalcontent;\n\t            _this.loading_universalcontent = false;\n\t        });\n\t        this.lService.loadUniversalContent();\n\t        //Sub Route\n\t        this.sub = this.route.params.subscribe(function (params) {\n\t            var component = typeof params['component'] !== 'undefined' ? params['component'] : '';\n\t            var id = typeof params['id'] !== 'undefined' ? params['id'] : '';\n\t            component = component.toLowerCase();\n\t            id = id.toLowerCase();\n\t            if (component.length == 0 || component == 'home') {\n\t                _this.showncomponent = 'home';\n\t            }\n\t            else if (component == 'registration') {\n\t                _this.showncomponent = 'registration';\n\t            }\n\t            else if (component == 'sendpwd') {\n\t                _this.showncomponent = 'sendpwd';\n\t            }\n\t            else if (component == 'legal' && id.length != 0) {\n\t                _this.showncomponent = 'legal';\n\t                _this.legalcomponent = id;\n\t            }\n\t            else {\n\t                _this.showncomponent = 'home';\n\t            }\n\t        });\n\t    };\n\t    UnloggedcontentComponent.prototype.ngOnDestroy = function () {\n\t        this.sub.unsubscribe();\n\t    };\n\t    UnloggedcontentComponent.prototype.navigateToComponent = function (componentname) {\n\t        this.router.navigate([\"/l/\" + componentname]);\n\t    };\n\t    UnloggedcontentComponent.prototype.navigateToUnloggedComponent = function (componentname) {\n\t        this.router.navigate([\"/u/\" + componentname]);\n\t    };\n\t    UnloggedcontentComponent.prototype.loginAsAnonym = function () {\n\t        var _this = this;\n\t        this.lService.loginAsAnonym().subscribe(function (data) {\n\t            if (typeof data !== 'undefined' && data.result == true) {\n\t                _this.navigateToComponent(\"tasks\");\n\t            }\n\t            else {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen!\");\n\t        });\n\t    };\n\t    UnloggedcontentComponent.prototype.sendNewPassword = function () {\n\t        if (this.new_password_email.length == 0 || !/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/.test(this.new_password_email)) {\n\t            window.alert(\"Bitte gib zuerst deine korrekte E-Mail ein!\");\n\t            return;\n\t        }\n\t        this.lService.sendNewPassword(this.new_password_email).subscribe(function (data) {\n\t            if (typeof data !== 'undefined' && data.result == true) {\n\t                window.alert(\"Dir wurde eine Mail mit deinen neuen Zugangsdaten gesendet!\");\n\t            }\n\t            else {\n\t                window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen und nochmal versuchen!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen und nochmal versuchen!\");\n\t        });\n\t    };\n\t    UnloggedcontentComponent.prototype.registerUser = function () {\n\t        var _this = this;\n\t        //Username\n\t        var pattern = /^[A-Za-z0-9]{2,}$/;\n\t        if (this.reg_username.length == 0 || this.reg_username.match(pattern) == null) {\n\t            window.alert(\"Dein gewählter Username entspricht nicht unseren Richtlinien!\");\n\t            return;\n\t        }\n\t        if (this.reg_username_exists == true) {\n\t            window.alert(\"Dein gewählter Username ist bereits vergeben!\");\n\t            return;\n\t        }\n\t        //Email\n\t        pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\t        if (this.reg_email.length == 0 || this.reg_email.match(pattern) == null) {\n\t            window.alert(\"Bitte überprüfe deine E-Mail und versuche es erneut!\");\n\t            return;\n\t        }\n\t        if (this.reg_email_exists == true) {\n\t            window.alert(\"Deine gewählte E-Mail ist bereits vergeben!\");\n\t            return;\n\t        }\n\t        //Password\n\t        pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t        if (this.reg_password.length == 0 || this.reg_password.match(pattern) == null || this.reg_password != this.reg_password_repeat) {\n\t            window.alert(\"Dein Passwort entspricht nicht unseren Richtlinien oder du hast die beiden Passwörter stimmen nicht überein!\");\n\t            return;\n\t        }\n\t        //Faculty\n\t        if (this.reg_faculty_id == -2) {\n\t            window.alert(\"Bitte wähle vor der Registration eine Fakultät!\");\n\t            return;\n\t        }\n\t        //Accept TOU and PP\n\t        if ($(\"#reg_bed\").prop(\"checked\") == false) {\n\t            window.alert(\"Bitte akzeptiere vor der Registration die AGB sowie die Datenschutzerklärungen!\");\n\t            return;\n\t        }\n\t        this.lService.registerUser(this.reg_username, this.reg_email, this.reg_password, this.reg_password_repeat, this.reg_faculty_id).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t                _this.router.navigate([\"/l/tasks\"]);\n\t            }\n\t            else {\n\t                window.alert(\"Bitte überprüfe deine Eingaben!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            console.error('Could not register user.');\n\t        });\n\t    };\n\t    UnloggedcontentComponent.prototype.getUniversalContentStart = function () {\n\t        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'START'; }).length != 0) {\n\t            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'START'; })[0][\"text\"];\n\t        }\n\t        return '';\n\t    };\n\t    UnloggedcontentComponent.prototype.getUniversalContentFacultyArray = function () {\n\t        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Faculties\"] !== 'undefined') {\n\t            return this.universalcontent[\"_Faculties\"];\n\t        }\n\t        return [];\n\t    };\n\t    UnloggedcontentComponent.prototype.getUniversalContentMainPictureId = function () {\n\t        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; }).length != 0) {\n\t            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; })[0].text;\n\t        }\n\t        return -1;\n\t    };\n\t    UnloggedcontentComponent.prototype.loginUser = function () {\n\t        var _this = this;\n\t        this.lService.loginUser(this.username, this.pwd).subscribe(function (data) {\n\t            if (typeof data.result !== 'undefined' && data.result == true) {\n\t                _this.router.navigate([\"/l/tasks\"]);\n\t            }\n\t            else {\n\t                window.alert(\"Bitte überprüfe deinen Username und Passwort!\");\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            console.error('Could not login user.');\n\t        });\n\t    };\n\t    UnloggedcontentComponent.prototype.keyupRegisterUsername = function () {\n\t        var _this = this;\n\t        var pattern = /^[A-Za-z0-9]{2,}$/;\n\t        if (this.reg_username.length != 0 && this.reg_username.match(pattern) != null) {\n\t            this.reg_username_valid = true;\n\t        }\n\t        else {\n\t            this.reg_username_valid = false;\n\t        }\n\t        this.lService.checkUsername(this.reg_username).subscribe(function (data) {\n\t            if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == true) {\n\t                _this.reg_username_exists = true;\n\t            }\n\t            else if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == false) {\n\t                _this.reg_username_exists = false;\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            console.error('Could not login user.');\n\t        });\n\t    };\n\t    UnloggedcontentComponent.prototype.keyupRegisterEmail = function () {\n\t        var _this = this;\n\t        var pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\t        if (this.reg_email.length != 0 && this.reg_email.match(pattern) != null) {\n\t            this.reg_email_valid = true;\n\t        }\n\t        else {\n\t            this.reg_email_valid = false;\n\t        }\n\t        this.lService.checkEmail(this.reg_email).subscribe(function (data) {\n\t            if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == true) {\n\t                _this.reg_email_exists = true;\n\t            }\n\t            else if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == false) {\n\t                _this.reg_email_exists = false;\n\t            }\n\t        }, function (error) {\n\t            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n\t            console.error('Could not login user.');\n\t        });\n\t    };\n\t    UnloggedcontentComponent.prototype.keyupRegisterPassword = function () {\n\t        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t        if (this.reg_password.length != 0 && this.reg_password.match(pattern) != null) {\n\t            this.reg_password_valid = true;\n\t        }\n\t        else {\n\t            this.reg_password_valid = false;\n\t        }\n\t    };\n\t    UnloggedcontentComponent.prototype.keyupRegisterPasswordRepeat = function () {\n\t        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t        if (this.reg_password_repeat.length != 0 && this.reg_password == this.reg_password_repeat) {\n\t            this.reg_password_repeat_valid = true;\n\t        }\n\t        else {\n\t            this.reg_password_repeat_valid = false;\n\t        }\n\t    };\n\t    UnloggedcontentComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'unloggedcontent-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n<div style=\\\"width:100%;background-color: #990000;min-height: 100%;position: absolute;padding-top: 50px;\\\">\\n\\n  <div id=\\\"content-landing\\\">\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-10 col-xs-offset-1 col-sm-4 col-sm-offset-4\\\" style=\\\"padding:0;\\\">\\n\\n            <!-- Logo -->\\n            <div id=\\\"logo\\\" style=\\\"width:200px;margin-left:auto;margin-right:auto;margin-bottom: 20px;\\\">\\n                <img [src]=\\\"getUniversalContentMainPictureId().length != 0 ? lService.getPictureLink(getUniversalContentMainPictureId()) : ''\\\" style=\\\"width:100%;\\\" />\\n            </div>\\n\\n            <div id=\\\"wrapper\\\" style=\\\"padding-left:0;\\\">\\n\\n                <div *ngIf=\\\"showncomponent=='registration'\\\">\\n\\n                  <p class=\\\"lp-headline\\\" style=\\\"text-align:center;text-decoration:underline;font-size:1.2em;margin:0;color:white;margin-bottom:0.8em;\\\">Registriere dich jetzt!</p>\\n\\n                  <form id=\\\"registerForm\\\">\\n                        <input [(ngModel)]=\\\"reg_username\\\" (keyup)=\\\"keyupRegisterUsername()\\\" [style.background]=\\\"reg_username.length>0?(reg_username_valid && reg_username_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_username\\\" name=\\\"reg_username\\\" type=\\\"text\\\" maxlength=\\\"30\\\" placeholder=\\\"Username\\\" title=\\\"Gib hier deinen gew\\u00FCnschten Usernamen ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;\\\"/>\\n                        <div *ngIf=\\\"reg_username_exists\\\" style=\\\"padding: 5px;color: white;\\\">Username ist leider schon vergeben!</div>\\n\\n                        <input [(ngModel)]=\\\"reg_email\\\" (keyup)=\\\"keyupRegisterEmail()\\\" [style.background]=\\\"reg_email.length>0?(reg_email_valid && reg_email_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_email\\\" name=\\\"reg_email\\\" type=\\\"text\\\" maxlength=\\\"100\\\" placeholder=\\\"E-Mail\\\" title=\\\"Gib hier deine E-Mail ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.4em;\\\"/>\\n                        <div *ngIf=\\\"reg_email_exists\\\" style=\\\"padding: 5px;color: white;\\\">Ein User mit dieser E-Mail existiert leider bereits!</div>\\n\\n                        <input [(ngModel)]=\\\"reg_password\\\" (keyup)=\\\"keyupRegisterPassword();keyupRegisterPasswordRepeat();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password\\\" name=\\\"reg_password\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Passwort (Mind. 6 Zeichen)\\\" title=\\\"Gib hier dein Passwort ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.4em;\\\"/>\\n\\n                        <input [(ngModel)]=\\\"reg_password_repeat\\\" (keyup)=\\\"keyupRegisterPasswordRepeat();keyupRegisterPassword();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_repeat_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password_repeat\\\" name=\\\"reg_password_repeat\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Wiederhole dein Passwort\\\" title=\\\"Wiederhole hier dein Passwort\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.4em;\\\"/>\\n\\n                        <select [(ngModel)]=\\\"reg_faculty_id\\\" name=\\\"reg_department\\\" style=\\\"font-size:1em;background:#eeeeee;padding-top: 7px;padding-bottom: 7px;margin-top: 0.4em;\\\">\\n                          <option value=\\\"-2\\\">W\\u00E4hle deine Fakult\\u00E4t</option>\\n                          <option *ngFor=\\\"let t_faculty of getUniversalContentFacultyArray();\\\" value='{{t_faculty.faculty_id}}'>{{t_faculty.facultyname}}</option>\\n                        </select>\\n\\n                        <input id=\\\"reg_bed\\\" style=\\\"margin:10px 5px;float:left;width:20px;height:20px;margin-top:8px;\\\" name=\\\"reg_bed\\\" type=\\\"checkbox\\\" value=\\\"bed\\\">\\n                        <div style=\\\"color:white;margin:10px 5px;\\\">Ich stimme den <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToUnloggedComponent('legal/tou')\\\" target=\\\"_blank\\\">AGB</a> sowie der <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToUnloggedComponent('legal/pp')\\\" target=\\\"_blank\\\">Datenschutzerkl\\u00E4rungen</a> zu</div>\\n                        <div style=\\\"clear:both;\\\"></div>\\n\\n                        <div (click)=\\\"registerUser()\\\" id=\\\"buttonReg\\\">Jetzt registrieren</div>\\n                        <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('home')\\\">Zur\\u00FCck zum Login</div>\\n                  </form>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"showncomponent=='sendpwd'\\\">\\n\\n                  <p class=\\\"lp-headline\\\" style=\\\"text-align:center;font-size:1.2em;margin:0;color:white;margin-bottom:0.8em;\\\">Trage deine E-Mail ein und du wirst ein neues Passwort per Mail erhalten!</p>\\n\\n                  <form>\\n                        <input [(ngModel)]=\\\"new_password_email\\\" name=\\\"fp_email\\\" type=\\\"text\\\" maxlength=\\\"100\\\" placeholder=\\\"E-Mail\\\" title=\\\"Gib hier deine E-Mail ein\\\"/>\\n                        <div (click)=\\\"sendNewPassword()\\\" id=\\\"buttonSendPassword\\\">Neues Passwort jetzt senden</div>\\n                        <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('home')\\\">Zur\\u00FCck zum Login</div>\\n                  </form>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"showncomponent=='legal'\\\">\\n                  <legal-component [user]=\\\"user\\\" [legalcomponent]=\\\"legalcomponent\\\" [universalcontent]=\\\"universalcontent\\\"></legal-component>\\n\\n                  <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('home')\\\">Zur\\u00FCck zum Login</div>\\n                </div>\\n\\n                <div *ngIf=\\\"showncomponent=='home'\\\">\\n\\n                  <div [innerHTML]=\\\"getUniversalContentStart() | safeHtml\\\" class=\\\"unloggedcontent\\\">\\n                  </div>\\n\\n                  <!-- Click In -->\\n                  <form id=\\\"registerForm\\\" style=\\\"margin-top:1em;\\\">\\n                      <input [(ngModel)]=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Dein Username\\\" style=\\\"padding-top:7px;padding-bottom:7px;\\\"/>\\n                      <input [(ngModel)]=\\\"pwd\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Dein Passwort\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.5em;\\\"/>\\n                      <div (click)=\\\"loginUser()\\\" id=\\\"buttonLogIn\\\">Log In</div>\\n                      <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('registration')\\\">Registriere dich jetzt</div>\\n                      <div class=\\\"buttonForLoginAsAnonym\\\" (click)=\\\"loginAsAnonym()\\\">Erstmal Anonym spielen</div>\\n                      <div class=\\\"buttonForForgotPasswordChange\\\" (click)=\\\"navigateToUnloggedComponent('sendpwd')\\\">Passwort vergessen</div>\\n                  </form>\\n\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, router_1.ActivatedRoute, libgame_service_1.LibgameService])\n\t    ], UnloggedcontentComponent);\n\t    return UnloggedcontentComponent;\n\t}());\n\texports.UnloggedcontentComponent = UnloggedcontentComponent;\n\t//# sourceMappingURL=unloggedcontent.component.js.map\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar UserprogressComponent = (function () {\n\t    function UserprogressComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t        this.open_tasks_type_key = -1;\n\t    }\n\t    UserprogressComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        this.lService.loadSpecificContent('userprogress');\n\t    };\n\t    UserprogressComponent.prototype.getCompletedQuests = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['COMPLETED_QUESTS'] !== 'undefined' ? this.specificcontent['COMPLETED_QUESTS'] : [];\n\t    };\n\t    UserprogressComponent.prototype.getBadgesWithProgressStatement = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['ALL_BADGES_WITH_COMPLETED_STATEMENT'] !== 'undefined' ? this.specificcontent['ALL_BADGES_WITH_COMPLETED_STATEMENT'] : [];\n\t    };\n\t    UserprogressComponent.prototype.getUserTaskInfoArray = function () {\n\t        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_TASK_INFO'] !== 'undefined' ? this.specificcontent['USER_TASK_INFO'] : [];\n\t    };\n\t    UserprogressComponent.prototype.navigateToQuest = function (quest_id) {\n\t        this.router.navigate(['/l/quest', quest_id]);\n\t    };\n\t    UserprogressComponent.prototype.navigateToTask = function (task_id) {\n\t        this.router.navigate(['/l/task', task_id]);\n\t    };\n\t    UserprogressComponent.prototype.navigateToBadge = function (badge_id) {\n\t        this.router.navigate(['/l/badge', badge_id]);\n\t    };\n\t    //User_Task_Info\n\t    UserprogressComponent.prototype.isTaskSolved = function (value, needed_value) {\n\t        return parseFloat(value) >= parseFloat(needed_value);\n\t    };\n\t    UserprogressComponent.prototype.getMinScoreForTaskInUserTaskInfo = function (key) {\n\t        var t_minscore = 1000000;\n\t        if (this.getUserTaskInfoArray()[key][\"tasks\"].length == 0)\n\t            return 0;\n\t        for (var t_task_key in this.getUserTaskInfoArray()[key][\"tasks\"]) {\n\t            if (parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]) < t_minscore) {\n\t                t_minscore = parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]);\n\t            }\n\t        }\n\t        return t_minscore;\n\t    };\n\t    UserprogressComponent.prototype.getMaxScoreForTaskInUserTaskInfo = function (key) {\n\t        var t_maxscore = 0;\n\t        if (this.getUserTaskInfoArray()[key][\"tasks\"].length == 0)\n\t            return 0;\n\t        for (var t_task_key in this.getUserTaskInfoArray()[key][\"tasks\"]) {\n\t            if (parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]) > t_maxscore) {\n\t                t_maxscore = parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]);\n\t            }\n\t        }\n\t        return t_maxscore;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], UserprogressComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], UserprogressComponent.prototype, \"universalcontent\", void 0);\n\t    UserprogressComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'userprogress-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12 col-sm-3\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\"><span class=\\\"special-font-color\\\">{{user?.username}}</span></p>\\n\\n              <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                  <div class=\\\"depend-on-device-tablerow-to-none\\\" style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"depend-on-device-tablecell-to-none\\\" style=\\\"width:100%;vertical-align:middle;\\\">\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1.3em;font-weight:bold;text-align:center;margin-top:0.5em;\\\">Erfahrung</p>\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1em;text-align:center;\\\"><span style=\\\"font-size:1.6em!important;font-weight:bold;color:#0e9873;\\\">{{user?.user_score}}</span></p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n\\n\\n              </div>\\n\\n\\n\\n          </div>\\n\\n      </div>\\n\\n\\n      <div class=\\\"col-xs-12 col-sm-9 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n\\n          <!-- Quests -->\\n          <div id=\\\"cf-ac-quests\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abgeschlossene Quests</p>\\n\\n              <p [hidden]=\\\"getCompletedQuests().length!=0\\\" style='width:100%;text-align:center;margin-top:1em;margin-bottom:1em;'>Keine abgeschlossenen Quests vorhanden</p>\\n\\n              <div *ngFor=\\\"let t_c_quest of getCompletedQuests();\\\" (click)=\\\"navigateToQuest(t_c_quest.quest_id)\\\" class=\\\"content-quest-frame\\\" style=\\\"width:100%;\\\">\\n                  <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                      <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">Quest: {{t_c_quest.questname}}</div>\\n                      <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_c_quest.score_rule}}</span> Exp.</div>\\n                      <div style=\\\"clear:both;\\\"></div>\\n                      <div style=\\\"font-size:1.2em;font-weight:bold;text-align:center;margin-top:0.3em;margin-bottom:0.2em;\\\">Abgeschlossen</div>\\n                  </div>\\n              </div>\\n\\n\\n          </div>\\n\\n      </div>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n\\n          <!-- Badges -->\\n          <div id=\\\"cf-ac-badges\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abzeichen</p>\\n\\n              <div style=\\\"display:block;width: 100%;\\\">\\n\\n\\n                  <div *ngFor=\\\"let t_badge of getBadgesWithProgressStatement();\\\" (click)=\\\"navigateToBadge(t_badge.badge_id)\\\" class='col-xs-6 col-sm-1' style='display:inline-block;padding:1em;'>\\n                      <div style='position:relative;cursor:pointer;'>\\n                          <img style='position:relative;top:0;left:0;width:100%;' src='{{lService.getPictureLink(t_badge.picture_id)}}'>\\n                          <div *ngIf=\\\"t_badge.completed\\\" class='fa fa-check-square' style='position:absolute;right:0;margin:0.3em;font-size:2em!important;color:white;'></div>\\n                          <div *ngIf=\\\"!t_badge.completed\\\" class='fa fa-minus-square' style='position:absolute;right:0;margin:0.3em;font-size:2em!important;color:white;'></div>\\n                      </div>\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n\\n\\n              </div>\\n\\n          </div>\\n\\n\\n\\n          <!-- Tasks -->\\n          <div id=\\\"cf-ac-tasks\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abgeschlossene Aufgaben</p>\\n\\n\\n              <div *ngFor=\\\"let t_task_type of getUserTaskInfoArray(); let i = index;\\\" class=\\\"content-inner-frame\\\" style=\\\"width:100%;\\\">\\n                  <!-- Description of Task_Type -->\\n                  <div class=\\\"cf-ac-tasks-task-type-button\\\"\\n                    (click)=\\\"open_tasks_type_key==i?open_tasks_type_key=-1:open_tasks_type_key=i;\\\"\\n                    [class.separator]=\\\"open_tasks_type_key==i\\\"\\n                    style=\\\"width:100%;color:rgb(255,255,255);cursor:pointer;padding:0.5em 0;\\\">\\n                      <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;text-decoration:underline;\\\">\\n                        {{t_task_type.task_type_name}}\\n                      </div>\\n                      <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">\\n                        +[{{getMinScoreForTaskInUserTaskInfo(i)}} - {{getMaxScoreForTaskInUserTaskInfo(i)}}]</span> Exp. pro Aufgabe ({{t_task_type[\\\"tasks\\\"].length}} Aufgaben)\\n                      </div>\\n                      <div style=\\\"clear:both;\\\"></div>\\n                  </div>\\n\\n                  <!-- Tasks -->\\n                  <div *ngIf=\\\"t_task_type['tasks'].length==0 && open_tasks_type_key==i\\\" class='cf-ac-tasks-no-tasks' style='width:100%;text-align:center;font-size:1.3em;font-weight:bold;color:black;margin-top:5px;margin-bottom:10px;'>Keine Aufgaben vorhanden</div>\\n\\n                  <div *ngIf=\\\"t_task_type['tasks'].length!=0 && open_tasks_type_key==i\\\" class='cf-ac-tasks-tasks depend-on-device-table-to-none' style='width:100%;border-spacing:10px 15px;margin-top:5px;'>\\n                    <div *ngFor=\\\"let t_task of t_task_type['tasks']\\\"  class='cf-ac-tasks-task depend-on-device-tablerow-to-none' style='width:100%;padding:0.8em 0;'>\\n\\n                          <div class='col-xs-9' style='text-align:left;vertical-align:middle;line-height:1.1em !important;'>\\n                              <span class=\\\"link\\\" (click)=\\\"navigateToTask(t_task.task_id)\\\" style=\\\"font-size:1.3em;font-weight:bold;\\\">{{t_task.taskname}}</span>\\n                          </div>\\n\\n                          <div class='col-xs-1' style='text-align:center;vertical-align:middle;'>\\n                              <button *ngIf=\\\"isTaskSolved(t_task.value,t_task.needed_value)\\\" class='fa fa-check-square' style='padding:0;font-size:2em;color:rgb(0,150,0);border:0;margin:0;background:transparent;'></button>\\n                              <button *ngIf=\\\"!isTaskSolved(t_task.value,t_task.needed_value)\\\" class='fa fa-minus-square' style='padding:0;font-size:2em;color:rgb(150,0,0);border:0;margin:0;background:transparent;'></button>\\n                          </div>\\n\\n                          <div class='col-xs-1' style='text-align:center;vertical-align:middle;'>\\n                              <span style=\\\"color:rgb(0,0,0);\\\"><span style=\\\"font-size:1.3em;font-weight:bold;\\\">{{t_task.value}}</span>/{{t_task.needed_value}}</span>\\n                          </div>\\n\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n                    </div>\\n\\n              </div>\\n\\n          </div>\\n\\n      </div>\\n\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], UserprogressComponent);\n\t    return UserprogressComponent;\n\t}());\n\texports.UserprogressComponent = UserprogressComponent;\n\t//# sourceMappingURL=userprogress.component.js.map\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(29);\n\tvar libgame_service_1 = __webpack_require__(61);\n\tvar UsersettingsComponent = (function () {\n\t    function UsersettingsComponent(router, lService) {\n\t        this.router = router;\n\t        this.lService = lService;\n\t        this.specificcontent = {};\n\t        this.loading_specificcontent = true;\n\t        this.error_setting_new_password = false;\n\t        this.show_update_password_button = true;\n\t    }\n\t    UsersettingsComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        //Specific Content\n\t        this.loading_specificcontent = true;\n\t        this.lService.specificcontent$.subscribe(function (specificcontent) {\n\t            _this.specificcontent = specificcontent;\n\t            _this.loading_specificcontent = false;\n\t        });\n\t        this.lService.loadSpecificContent('usersettings');\n\t        $(document).ready(function () {\n\t            $('#settings_new_password').keyup(function () {\n\t                var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t                if ($(this).val().match(pattern) != null) {\n\t                    $(this).css(\"background\", \"rgb(120,255,120)\");\n\t                }\n\t                else {\n\t                    $(this).css(\"background\", \"rgb(255,120,120)\");\n\t                }\n\t            });\n\t            $('#settings_new_password_repeat').keyup(function () {\n\t                if ($(this).val() == $('#settings_new_password').val()) {\n\t                    $(this).css(\"background\", \"rgb(120,255,120)\");\n\t                }\n\t                else {\n\t                    $(this).css(\"background\", \"rgb(255,120,120)\");\n\t                }\n\t            });\n\t        });\n\t    };\n\t    UsersettingsComponent.prototype.setNewPassword = function () {\n\t        var _this = this;\n\t        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n\t        if ($('#settings_new_password').val().match(pattern) == null) {\n\t            window.alert(\"Das Passwort entspricht nicht unseren Passwort Richtlinien!\");\n\t            return;\n\t        }\n\t        if ($('#settings_new_password').val() != $('#settings_new_password_repeat').val()) {\n\t            window.alert(\"Das Passwort und dessen wiederholte Eingabe müssen übereinstimmen!\");\n\t            return;\n\t        }\n\t        this.show_update_password_button = false;\n\t        this.lService.updatePassword($('#settings_old_password').val(), $('#settings_new_password').val()).subscribe(function (data) {\n\t            _this.show_update_password_button = true;\n\t            if (typeof data.data === 'undefined' || data.data != true) {\n\t                _this.error_setting_new_password = true;\n\t                window.alert(\"Beim Setzen des neuen Passworts ist ein Fehler aufgetreten.\");\n\t            }\n\t            else {\n\t                $('#settings_old_password').val('');\n\t                $('#settings_new_password').val('');\n\t                $('#settings_new_password_repeat').val('');\n\t                window.alert(\"Ihr Passwort wurde neu gesetzt!\");\n\t            }\n\t        }, function (error) {\n\t            _this.show_update_password_button = true;\n\t            _this.error_setting_new_password = true;\n\t            window.alert(\"Beim Setzen des neuen Passworts ist ein Fehler aufgetreten.\");\n\t            console.error('Could not set new password.');\n\t        });\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], UsersettingsComponent.prototype, \"user\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], UsersettingsComponent.prototype, \"universalcontent\", void 0);\n\t    UsersettingsComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'usersettings-component',\n\t            providers: [libgame_service_1.LibgameService],\n\t            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-se-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Neues Passwort</p>\\n\\n              <div style=\\\"width:70%;margin-left:auto;margin-right:auto;\\\">\\n                  <input type=\\\"password\\\" placeholder=\\\"Altes Passwort\\\" id=\\\"settings_old_password\\\" style=\\\"width:100%;margin-top:0.3em;margin-bottom:0.3em;\\\">\\n                  <br>\\n                  <input type=\\\"password\\\" placeholder=\\\"Neues Passwort (Min. 6 Zeichen)\\\" id=\\\"settings_new_password\\\" style=\\\"width:100%;margin-top:0.3em;margin-bottom:0.3em;\\\">\\n                  <br>\\n                  <input type=\\\"password\\\" placeholder=\\\"Wiederhole das neue Passwort\\\" id=\\\"settings_new_password_repeat\\\" style=\\\"width:100%;margin-top:0.3em;margin-bottom:0.3em;\\\">\\n                  <br>\\n                  <button (click)=\\\"setNewPassword()\\\" *ngIf=\\\"show_update_password_button\\\" class=\\\"button\\\" style=\\\"margin-top:0.5em;margin-bottom:0.3em;width:100%;\\\">Neues Passwort jetzt setzen</button>\\n                  <button *ngIf=\\\"!show_update_password_button\\\" class=\\\"button\\\" style=\\\"margin-top:0.5em;margin-bottom:0.3em;width:100%;\\\"><i class=\\\"fa fa-spinner fa-pulse\\\"></i></button>\\n\\n              </div>\\n\\n\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  \"\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n\t    ], UsersettingsComponent);\n\t    return UsersettingsComponent;\n\t}());\n\texports.UsersettingsComponent = UsersettingsComponent;\n\t//# sourceMappingURL=usersettings.component.js.map\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar SafeHtmlPipe = (function () {\n\t    function SafeHtmlPipe(sanitized) {\n\t        this.sanitized = sanitized;\n\t    }\n\t    SafeHtmlPipe.prototype.transform = function (value) {\n\t        console.log(this.sanitized.bypassSecurityTrustHtml(value));\n\t        return this.sanitized.bypassSecurityTrustHtml(value);\n\t    };\n\t    SafeHtmlPipe = __decorate([\n\t        core_1.Pipe({ name: 'safeHtml' }), \n\t        __metadata('design:paramtypes', [platform_browser_1.DomSanitizer])\n\t    ], SafeHtmlPipe);\n\t    return SafeHtmlPipe;\n\t}());\n\texports.SafeHtmlPipe = SafeHtmlPipe;\n\t//# sourceMappingURL=safehtml.pipe.js.map\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** app.b90f4c24d266e725abef.js\n **/","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.ts\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar forms_1 = require('@angular/forms');\nvar http_1 = require('@angular/http');\nvar router_1 = require('@angular/router');\nvar app_component_1 = require('./app.component');\nvar htmleditor_component_1 = require('./components/subcomponents/htmleditor.component');\nvar selectquest_component_1 = require('./components/subcomponents/selectquest.component');\nvar selecttask_component_1 = require('./components/subcomponents/selecttask.component');\nvar uploadpicture_component_1 = require('./components/subcomponents/uploadpicture.component');\nvar administration_component_1 = require('./components/administration.component');\nvar badge_component_1 = require('./components/badge.component');\nvar editbadge_component_1 = require('./components/editbadge.component');\nvar editquest_component_1 = require('./components/editquest.component');\nvar edittask_component_1 = require('./components/edittask.component');\nvar legal_component_1 = require('./components/legal.component');\nvar highscorelist_component_1 = require('./components/highscorelist.component');\nvar loggedcontent_component_1 = require('./components/loggedcontent.component');\nvar quest_component_1 = require('./components/quest.component');\nvar solvedoverlay_component_1 = require('./components/solvedoverlay.component');\nvar statistics_component_1 = require('./components/statistics.component');\nvar task_component_1 = require('./components/task.component');\nvar tasks_component_1 = require('./components/tasks.component');\nvar tasksearch_component_1 = require('./components/tasksearch.component');\nvar unloggedcontent_component_1 = require('./components/unloggedcontent.component');\nvar userprogress_component_1 = require('./components/userprogress.component');\nvar usersettings_component_1 = require('./components/usersettings.component');\nvar safehtml_pipe_1 = require('./components/pipes/safehtml.pipe');\nvar libgame_service_1 = require('./services/libgame.service');\nvar routes = [\n    {\n        path: '',\n        redirectTo: '/l/tasks',\n        pathMatch: 'full'\n    },\n    {\n        path: 'u/:component',\n        component: unloggedcontent_component_1.UnloggedcontentComponent\n    },\n    {\n        path: 'u/:component/:id',\n        component: unloggedcontent_component_1.UnloggedcontentComponent\n    },\n    {\n        path: 'l/home',\n        redirectTo: '/l/tasks',\n        pathMatch: 'full'\n    },\n    {\n        path: 'l/:component',\n        component: loggedcontent_component_1.LoggedcontentComponent\n    },\n    {\n        path: 'l/:component/:id',\n        component: loggedcontent_component_1.LoggedcontentComponent\n    },\n    {\n        path: 'l/:component/:id/:additionalinformation',\n        component: loggedcontent_component_1.LoggedcontentComponent\n    }\n];\nvar AppModule = (function () {\n    function AppModule() {\n    }\n    AppModule = __decorate([\n        core_1.NgModule({\n            imports: [\n                platform_browser_1.BrowserModule,\n                forms_1.FormsModule,\n                http_1.HttpModule,\n                router_1.RouterModule.forRoot(routes, { useHash: false })\n            ],\n            declarations: [\n                app_component_1.AppComponent,\n                htmleditor_component_1.HTMLEditorComponent,\n                selectquest_component_1.SelectQuestComponent,\n                selecttask_component_1.SelectTaskComponent,\n                uploadpicture_component_1.UploadPictureComponent,\n                administration_component_1.AdministrationComponent,\n                badge_component_1.BadgeComponent,\n                editbadge_component_1.EditBadgeComponent,\n                editquest_component_1.EditQuestComponent,\n                edittask_component_1.EditTaskComponent,\n                highscorelist_component_1.HighscorelistComponent,\n                legal_component_1.LegalComponent,\n                loggedcontent_component_1.LoggedcontentComponent,\n                quest_component_1.QuestComponent,\n                solvedoverlay_component_1.SolvedOverlayComponent,\n                statistics_component_1.StatisticsComponent,\n                task_component_1.TaskComponent,\n                tasks_component_1.TasksComponent,\n                tasksearch_component_1.TasksearchComponent,\n                unloggedcontent_component_1.UnloggedcontentComponent,\n                userprogress_component_1.UserprogressComponent,\n                usersettings_component_1.UsersettingsComponent,\n                safehtml_pipe_1.SafeHtmlPipe\n            ],\n            providers: [\n                libgame_service_1.LibgameService\n            ],\n            bootstrap: [app_component_1.AppComponent]\n        }), \n        __metadata('design:paramtypes', [])\n    ], AppModule);\n    return AppModule;\n}());\nexports.AppModule = AppModule;\n//# sourceMappingURL=app.module.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.module.js\n ** module id = 23\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar AppComponent = (function () {\n    function AppComponent(router) {\n        this.router = router;\n    }\n    AppComponent = __decorate([\n        core_1.Component({\n            selector: 'lib-app',\n            template: \"\\n\\n    <!-- Router -->\\n    <router-outlet></router-outlet>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router])\n    ], AppComponent);\n    return AppComponent;\n}());\nexports.AppComponent = AppComponent;\n//# sourceMappingURL=app.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.js\n ** module id = 59\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar libgame_service_1 = require('./../../services/libgame.service');\nvar HTMLEditorComponent = (function () {\n    function HTMLEditorComponent(lService) {\n        this.lService = lService;\n        this.htmlcontent = new core_1.EventEmitter();\n        this.reload = new core_1.EventEmitter();\n        this.id = \"\";\n        this.hasFocus = false;\n        this.showInsertPicture = false;\n        this.showInsertLink = false;\n        this.tempPictureLink = \"\";\n        this.tempPictureWidth = \"\";\n        this.tempPictureHeight = \"\";\n        this.tempPictureId = -1;\n        this.id = this.makeid();\n    }\n    HTMLEditorComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        document.addEventListener('mousedown', function () {\n            _this.hasFocus = false;\n        }, false);\n        this.setInnerHTMLOfDiv(this.value);\n    };\n    HTMLEditorComponent.prototype.setInnerHTMLOfDiv = function (value) {\n        var _this = this;\n        if (typeof document.getElementById(this.id) === 'undefined' || document.getElementById(this.id) == null || typeof this.value === 'undefined') {\n            setTimeout(function () { _this.setInnerHTMLOfDiv(value); }, 10);\n            return;\n        }\n        if (this.value.length != document.getElementById(this.id).innerHTML.length)\n            document.getElementById(this.id).innerHTML = value;\n    };\n    HTMLEditorComponent.prototype.ngOnChanges = function (changes) {\n        if (typeof changes[\"value\"] !== 'undefined')\n            this.setInnerHTMLOfDiv(changes[\"value\"].currentValue);\n    };\n    HTMLEditorComponent.prototype.updateValue = function () {\n        this.htmlcontent.emit($('#' + this.id).html().trim());\n    };\n    HTMLEditorComponent.prototype.getPictures = function () {\n        return typeof this.pictures !== 'undefined' ? this.pictures : [];\n    };\n    //Overlay Insert Picture\n    //Overlay Insert Link\n    //Editor Functionality\n    HTMLEditorComponent.prototype.focusFunction = function () {\n        this.hasFocus = true;\n    };\n    HTMLEditorComponent.prototype.makeUnderline = function (e) {\n        var _this = this;\n        document.execCommand('underline');\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n        return false;\n    };\n    HTMLEditorComponent.prototype.makeBold = function (e) {\n        var _this = this;\n        document.execCommand('bold');\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n    };\n    HTMLEditorComponent.prototype.makeItalic = function (e) {\n        var _this = this;\n        document.execCommand('italic');\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n    };\n    HTMLEditorComponent.prototype.makeLineThrough = function (e) {\n        var _this = this;\n        document.execCommand('strikethrough');\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n    };\n    HTMLEditorComponent.prototype.makeAlignLeft = function (e) {\n        var _this = this;\n        document.execCommand('justifyLeft');\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n    };\n    HTMLEditorComponent.prototype.makeAlignRight = function (e) {\n        var _this = this;\n        document.execCommand('justifyRight');\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n    };\n    HTMLEditorComponent.prototype.makeAlignCenter = function (e) {\n        var _this = this;\n        document.execCommand('justifyCenter');\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n    };\n    HTMLEditorComponent.prototype.makeInsertPicture = function (e) {\n        var _this = this;\n        this.showInsertPicture = true;\n        this.pictureInsertID = this.makeid();\n        document.execCommand(\"insertHTML\", false, \"<img id='\" + this.pictureInsertID + \"' src='' />\");\n        e.preventDefault();\n        e.stopPropagation();\n        this.hasFocus = true;\n        setTimeout(function () { $('#' + _this.id).focus(); }, 10);\n    };\n    HTMLEditorComponent.prototype.finalizeInsertPicture = function () {\n        this.showInsertPicture = false;\n        if (this.tempPictureLink.length != 0) {\n            $('#' + this.id).find('#' + this.pictureInsertID).attr('src', this.tempPictureLink);\n            $('#' + this.id).find('#' + this.pictureInsertID).css('width', this.tempPictureWidth + \"px\");\n            $('#' + this.id).find('#' + this.pictureInsertID).css('height', this.tempPictureHeight + \"px\");\n        }\n        else if (this.tempPictureId != -1) {\n            $('#' + this.id).find('#' + this.pictureInsertID).attr('src', this.lService.getPictureLink(this.tempPictureId));\n            $('#' + this.id).find('#' + this.pictureInsertID).css('width', this.tempPictureWidth + \"px\");\n            $('#' + this.id).find('#' + this.pictureInsertID).css('height', this.tempPictureHeight + \"px\");\n        }\n        this.tempPictureLink = \"\";\n        this.tempPictureId = -1;\n        this.tempPictureWidth = \"\";\n        this.tempPictureHeight = \"\";\n    };\n    HTMLEditorComponent.prototype.abortInsertPicture = function () {\n        this.showInsertPicture = false;\n        $('#' + this.id).find('#' + this.pictureInsertID).remove();\n    };\n    //Helper\n    HTMLEditorComponent.prototype.makeid = function () {\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n        for (var i = 0; i < 5; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        return text;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], HTMLEditorComponent.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], HTMLEditorComponent.prototype, \"pictures\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], HTMLEditorComponent.prototype, \"htmlcontent\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], HTMLEditorComponent.prototype, \"reload\", void 0);\n    HTMLEditorComponent = __decorate([\n        core_1.Component({\n            selector: 'htmleditor-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n\\n    <div class=\\\"editor\\\" [class.editor-hasfocus]=\\\"hasFocus\\\" (click)=\\\"$event.stopPropagation();\\\" (mousedown)=\\\"$event.stopPropagation();\\\" (focusout)=\\\"updateValue()\\\" (mouseleave)=\\\"updateValue();hasFocus = false;\\\">\\n      <div *ngIf=\\\"hasFocus\\\" class=\\\"editor-head\\\" style=\\\"width:100%;\\\">\\n        <button (click)=\\\"makeUnderline($event);\\\" class=\\\"button-editor\\\" style=\\\"text-decoration:underline;width:35px;\\\">U</button>\\n        <button (click)=\\\"makeBold($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\">B</button>\\n        <button (click)=\\\"makeItalic($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\">I</button>\\n        <button (click)=\\\"makeLineThrough($event);\\\" class=\\\"button-editor\\\" style=\\\"text-decoration:line-through;width:35px;\\\">S</button>\\n\\n        <button (click)=\\\"makeAlignLeft($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;margin-left:10px;\\\"><i class=\\\"fa fa-align-left\\\" style=\\\"margin: 0;\\\"></i></button>\\n        <button (click)=\\\"makeAlignCenter($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\"><i class=\\\"fa fa-align-center\\\" style=\\\"margin: 0;\\\"></i></button>\\n        <button (click)=\\\"makeAlignRight($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;\\\"><i class=\\\"fa fa-align-right\\\" style=\\\"margin: 0;\\\"></i></button>\\n\\n        <button (click)=\\\"makeInsertPicture($event);\\\" class=\\\"button-editor\\\" style=\\\"width:35px;margin-left:10px;\\\"><i class=\\\"fa fa-file-image-o\\\" style=\\\"margin: 0;\\\"></i></button>\\n\\n\\n      </div>\\n      <div contenteditable=\\\"true\\\" [id]=\\\"id\\\" (focus)=\\\"focusFunction()\\\" class=\\\"editor-body\\\" style=\\\"width:100%;height:auto;min-height:200px;\\\">\\n\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"showInsertPicture\\\" (click)=\\\"$event.stopPropagation();\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:1000000;margin:0;\\\">\\n      <div style=\\\"position:relative;margin-left:auto;margin-right:auto;top:5%;background:white;border:solid 1px gray;color:black;width:90%;max-width:400px;height:auto;padding:10px;\\\">\\n        <p style=\\\"width:100%;text-align:center;\\\">Gib entweder einen Link ein oder w\\u00E4hle ein Bild aus der Datenbank aus</p>\\n        <hr class=\\\"hrForAdministration\\\">\\n\\n        <label [hidden]=\\\"tempPictureId != -1\\\" style=\\\"width:100%;text-align:center;\\\">Link</label>\\n        <br [hidden]=\\\"tempPictureId != -1\\\">\\n        <input [hidden]=\\\"tempPictureId != -1\\\" [(ngModel)]=\\\"tempPictureLink\\\" type=\\\"text\\\" placeholder=\\\"Link\\\" style=\\\"width:100%;\\\"/>\\n        <br [hidden]=\\\"tempPictureId != -1\\\">\\n\\n        <hr [hidden]=\\\"tempPictureLink.length != 0 || tempPictureId != -1\\\" class=\\\"hrForAdministration\\\">\\n\\n        <label [hidden]=\\\"tempPictureLink.length != 0\\\" style=\\\"width:100%;text-align:center;\\\">Bild aus der Datenbank</label>\\n        <br [hidden]=\\\"tempPictureLink.length != 0\\\">\\n        <select [hidden]=\\\"tempPictureLink.length != 0\\\" [(ngModel)]=\\\"tempPictureId\\\"  style=\\\"width:100%;\\\">\\n          <option value='-1' selected=\\\"selected\\\">-- None --</option>\\n          <option *ngFor=\\\"let t_picture of getPictures();\\\" value='{{t_picture.picture_id}}'>-- {{t_picture.picturename}} --</option>\\n        </select>\\n        <div [hidden]=\\\"tempPictureLink.length != 0\\\" style=\\\"text-align:right;\\\">\\n          <uploadpicture-component (reload)=\\\"reload.emit(true);\\\"></uploadpicture-component>\\n        </div>\\n\\n        <hr [hidden]=\\\"tempPictureLink.length == 0 && tempPictureId == -1\\\" class=\\\"hrForAdministration\\\">\\n\\n        <div *ngIf=\\\"tempPictureLink.length != 0 || tempPictureId != -1\\\">\\n          <label  style=\\\"width:100%;text-align:center;\\\">Breite [in Pixeln]<span style=\\\"color:#e9266d\\\">*</span></label>\\n          <br>\\n          <input [(ngModel)]=\\\"tempPictureWidth\\\" type=\\\"text\\\" placeholder=\\\"Breite [in Pixeln]\\\" style=\\\"width:100%;\\\"/>\\n          <br/>\\n          <label  style=\\\"width:100%;text-align:center;\\\">H\\u00F6he [in Pixeln]<span style=\\\"color:#e9266d\\\">*</span></label>\\n          <br>\\n          <input [(ngModel)]=\\\"tempPictureHeight\\\" type=\\\"text\\\" placeholder=\\\"H\\u00F6he [in Pixeln]\\\" style=\\\"width:100%;\\\"/>\\n        </div>\\n\\n        <button (click)=\\\"abortInsertPicture();\\\" class=\\\"button\\\" style=\\\"width: calc(35% - 10px);margin-top: 10px;\\\">Abbrechen</button>\\n        <button (click)=\\\"finalizeInsertPicture();\\\" [hidden]=\\\"(tempPictureLink.length == 0 && tempPictureId == -1) || tempPictureWidth.length==0 || tempPictureHeight.length==0\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Bild jetzt hinzuf\\u00FCgen!</button>\\n      </div>\\n    </div>\\n\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [libgame_service_1.LibgameService])\n    ], HTMLEditorComponent);\n    return HTMLEditorComponent;\n}());\nexports.HTMLEditorComponent = HTMLEditorComponent;\n//# sourceMappingURL=htmleditor.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/subcomponents/htmleditor.component.js\n ** module id = 60\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar http_1 = require('@angular/http');\nvar core_1 = require('@angular/core');\nvar Observable_1 = require('rxjs/Observable');\nrequire('rxjs/add/operator/share');\nrequire('rxjs/add/operator/map');\nvar LibgameService = (function () {\n    function LibgameService(_http) {\n        var _this = this;\n        this._http = _http;\n        this.user = {};\n        this.linkToWebservice = \"./webservice/webservice.php\";\n        this.user$ = new Observable_1.Observable(function (observer) { return _this._userObserver = observer; }).share();\n        this.universalcontent$ = new Observable_1.Observable(function (observer) { return _this._universalcontentObserver = observer; }).share();\n        this.specificcontent$ = new Observable_1.Observable(function (observer) { return _this._specificcontentObserver = observer; }).share();\n        this._dataStore = {\n            user_id: -1,\n            user: {},\n            universalcontent: {},\n            specificcontent: {}\n        };\n    }\n    LibgameService.prototype.ngOnInit = function () {\n    };\n    //User\n    LibgameService.prototype.loadUser = function () {\n        var _this = this;\n        var sendString = \"t=get&dt=user\";\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        if (this._dataStore.user_id != -1) {\n            this._userObserver.next(this._dataStore.user);\n        }\n        this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); }).subscribe(function (data) {\n            console.log(data);\n            _this._dataStore.user = {};\n            if (!$.isEmptyObject(data.data)) {\n                _this._dataStore.user = data.data;\n                _this._dataStore.user_id = data.data[\"user_id\"];\n            }\n            else {\n                _this._dataStore.user_id = -1;\n            }\n            _this._userObserver.next(_this._dataStore.user);\n        }, function (error) { console.error('Could not load user.'); });\n    };\n    LibgameService.prototype.loginUser = function (username, pwd) {\n        var sendString = \"t=login&username=\" + username + \"&pwd=\" + pwd;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.loginAsAnonym = function () {\n        var sendString = \"t=loginanonym\";\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.logoutUser = function () {\n        var sendString = \"t=logout\";\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.deleteUser = function () {\n        var sendString = \"t=set&dt=deleteuser\";\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.updatePassword = function (old_password, new_password) {\n        var sendString = \"t=set&dt=password&new_password=\" + new_password + \"&old_password=\" + old_password;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.checkUsername = function (username) {\n        var sendString = \"t=get&dt=checkusername&username=\" + username;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.checkEmail = function (email) {\n        var sendString = \"t=get&dt=checkemail&email=\" + email;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.registerUser = function (username, email, password, password_repeat, faculty_id) {\n        var sendString = \"t=set&dt=new_user&username=\" + username + \"&email=\" + email + \"&password=\" + password + \"&password_repeat=\" + password_repeat + \"&faculty_id=\" + faculty_id;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.sendNewPassword = function (email) {\n        var sendString = \"t=fp&email=\" + email;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.setNewAdmin = function (newadminid) {\n        var sendString = \"t=set&dt=addadmin&user_id=\" + newadminid;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.removeAdmin = function (user_id) {\n        var sendString = \"t=set&dt=removeadmin&user_id=\" + user_id;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.sendEmailMessageToAllUsers = function (email) {\n        var sendString = \"t=set&dt=sendemail&headline=\" + email.headline + \"&content=\" + email.content;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    //Universal Content\n    LibgameService.prototype.loadUniversalContent = function () {\n        var _this = this;\n        var sendString = \"t=get&dt=content\";\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        if ($.isEmptyObject(this._dataStore.universalcontent) == false) {\n            this._universalcontentObserver.next(this._dataStore.universalcontent);\n        }\n        this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); }).subscribe(function (data) {\n            console.log(data);\n            _this._dataStore.universalcontent = {};\n            if (!$.isEmptyObject(data.data)) {\n                _this._dataStore.universalcontent = data.data;\n            }\n            _this._universalcontentObserver.next(_this._dataStore.universalcontent);\n        }, function (error) { console.error('Could not load universalcontent.'); });\n    };\n    LibgameService.prototype.upsertGeneralContent = function (generalcontent) {\n        var sendString = \"t=set&dt=generalcontent&generalcontent=\" + encodeURIComponent(JSON.stringify(generalcontent));\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    //Specific Content\n    LibgameService.prototype.loadSpecificContent = function (dt) {\n        var _this = this;\n        var sendString = \"t=get&dt=\" + dt;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); }).subscribe(function (data) {\n            console.log(data);\n            _this._dataStore.specificcontent = {};\n            if (!$.isEmptyObject(data.data)) {\n                _this._dataStore.specificcontent = data.data;\n            }\n            _this._specificcontentObserver.next(_this._dataStore.specificcontent);\n        }, function (error) { console.error('Could not load specificcontent.'); });\n    };\n    //Location\n    LibgameService.prototype.checkLocation = function (lati, long, location_id) {\n        var sendString = \"t=get&dt=checklocation&lati=\" + lati + \"&long=\" + long + \"&location_id=\" + location_id;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    //task\n    LibgameService.prototype.upsertTask = function (taskdata) {\n        var sendString = \"t=set&dt=task&taskdata=\" + encodeURIComponent(JSON.stringify(taskdata));\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.deleteTask = function (task_id) {\n        var sendString = \"t=set&dt=deletetask&task_id=\" + task_id;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.solveTask = function (solvedata, task_id) {\n        var sendString = \"t=set&dt=solvetask&task_id=\" + task_id + \"&solvedata=\" + encodeURIComponent(solvedata);\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.getSolveLinkForLocationTask = function (task_id, location_id) {\n        //TODO\n        return \"./l/task/\" + task_id + \"/\" + location_id;\n    };\n    //badge\n    LibgameService.prototype.upsertBadge = function (badgedata) {\n        var sendString = \"t=set&dt=badge&badgedata=\" + encodeURIComponent(JSON.stringify(badgedata));\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.deleteBadge = function (badge_id) {\n        var sendString = \"t=set&dt=deletebadge&badge_id=\" + badge_id;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    //quest\n    LibgameService.prototype.upsertQuest = function (questdata) {\n        var sendString = \"t=set&dt=quest&questdata=\" + encodeURIComponent(JSON.stringify(questdata));\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.deleteQuest = function (quest_id) {\n        var sendString = \"t=set&dt=deletequest&quest_id=\" + quest_id;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    //location\n    LibgameService.prototype.upsertLocation = function (locationdata) {\n        var sendString = \"t=set&dt=location&locationdata=\" + encodeURIComponent(JSON.stringify(locationdata));\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.deleteLocation = function (location_id) {\n        var sendString = \"t=set&dt=deletelocation&location_id=\" + location_id;\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    LibgameService.prototype.getLocationFoundLink = function (location_id) {\n        //TODO\n        return \"http://aliru.de\";\n    };\n    //resetFacultyScore\n    LibgameService.prototype.resetFacultyScore = function () {\n        var sendString = \"t=set&dt=resetfacultyscore\";\n        var headers = new http_1.Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var options = new http_1.RequestOptions({ headers: headers });\n        return this._http.post(this.linkToWebservice, sendString, options)\n            .map(function (response) { return response.json(); });\n    };\n    //Picture\n    LibgameService.prototype.uploadPicture = function (picturedata, picturefiles) {\n        var url = this.linkToWebservice;\n        var params = {\n            t: \"set\",\n            dt: \"uploadpicture\",\n            picturename: picturedata.picturename\n        };\n        return new Promise(function (resolve, reject) {\n            var formData = new FormData();\n            var xhr = new XMLHttpRequest();\n            if (typeof picturefiles !== 'undefined' && picturefiles != null) {\n                for (var i = 0; i < picturefiles.length; i++) {\n                    formData.append(\"pictureupload\", picturefiles[i], picturefiles[i].name);\n                }\n            }\n            for (var key in params) {\n                if (typeof params[key] !== 'undefined' && typeof params[key] !== 'object')\n                    formData.append(key, params[key]);\n            }\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == 4) {\n                    if (xhr.status == 200) {\n                        resolve(JSON.parse(xhr.response));\n                    }\n                    else {\n                        reject(xhr.response);\n                    }\n                }\n            };\n            xhr.open(\"POST\", url, true);\n            xhr.send(formData);\n        });\n    };\n    //\n    //Helper Function\n    //\n    LibgameService.prototype.getFormatedDate = function (str_datetime) {\n        if (typeof str_datetime === 'undefined' || str_datetime == null || typeof str_datetime !== 'string' || str_datetime.length == 0) {\n            return '';\n        }\n        str_datetime = str_datetime.replace(\"-\", \"/\").replace(\"-\", \"/\");\n        var tempDate = new Date(str_datetime.split(\" \")[0]);\n        var date = tempDate.getDate() <= 9 ? \"0\" + tempDate.getDate() : tempDate.getDate();\n        var month = (tempDate.getMonth() + 1) <= 9 ? \"0\" + (tempDate.getMonth() + 1) : (tempDate.getMonth() + 1);\n        return date + \".\" + month + \".\" + tempDate.getFullYear();\n    };\n    LibgameService.prototype.getPictureLink = function (picture_id) {\n        return this.linkToWebservice + \"?t=get&dt=picture&picture_id=\" + picture_id;\n    };\n    LibgameService.prototype.getLabelsAndDataForChart = function (jsonStringProgress, days, months, years, flag) {\n        var returnObject = {};\n        returnObject[\"labels\"] = {};\n        returnObject[\"ts\"] = {};\n        returnObject[\"data\"] = {};\n        var progressObject = JSON.parse(jsonStringProgress);\n        //Aktuelles Datum ermitteln\n        var nowTime = new Date();\n        //Herausfinden wie viele months verschoben wird durch days\n        var tempDateForCalculatePushMonths = new Date(nowTime);\n        tempDateForCalculatePushMonths.setDate(tempDateForCalculatePushMonths.getDate() - days);\n        var pushMonths = nowTime.getMonth() - tempDateForCalculatePushMonths.getMonth();\n        var tempDateForCalculatePushYears = new Date(tempDateForCalculatePushMonths);\n        tempDateForCalculatePushYears.setMonth(tempDateForCalculatePushYears.getMonth() - months);\n        var pushYears = nowTime.getFullYear() - tempDateForCalculatePushYears.getFullYear();\n        //Berechnung von label_points\n        //Jahre\n        for (var i = years + pushYears; i > (0 + pushYears); i--) {\n            returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = '' + (new Date(nowTime.getFullYear() - i, 0, 1, 0, 0, 0)).getFullYear();\n            returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear() - i, 0, 1, 0, 0, 0)).getTime() / 1000;\n        }\n        //Months\n        for (var i = months + pushMonths; i > (0 + pushMonths); i--) {\n            returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = '' + ((new Date(nowTime.getFullYear(), nowTime.getMonth() - i, 1, 0, 0, 0)).getMonth() + 1) + '.' + (new Date(nowTime.getFullYear(), nowTime.getMonth() - i, 1, 0, 0, 0)).getFullYear();\n            returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear(), nowTime.getMonth() - i, 1, 0, 0, 0)).getTime() / 1000;\n        }\n        //Days\n        for (var i = days; i > 0; i--) {\n            returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = '' + ((new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i, 0, 0, 0)).getDate()) + '.' + ((new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i, 0, 0, 0)).getMonth() + 1) + '.' + (new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i, 0, 0, 0)).getFullYear();\n            returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() - i + 1, 0, 0, 0)).getTime() / 1000;\n        }\n        //Today\n        returnObject[\"labels\"][Object.keys(returnObject[\"labels\"]).length] = 'Heute';\n        returnObject[\"ts\"][Object.keys(returnObject[\"ts\"]).length] = (new Date(nowTime.getFullYear(), nowTime.getMonth(), nowTime.getDate() + 1, 0, 0, 0)).getTime() / 1000;\n        //Calculate Data\n        if (flag == \"sum\") {\n            //Aufsummiert von beginn an\n            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n                //returnObject[\"data\"]\n                var tempData = 0;\n                for (var key in progressObject) {\n                    if (progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData + progressObject[key][\"data\"];\n                    }\n                }\n                returnObject[\"data\"][keyLabelsAndTs] = tempData;\n            }\n        }\n        else if (flag == \"normal_comb\") {\n            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n                var tempData = 0;\n                for (var key in progressObject) {\n                    if (progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n                    }\n                }\n                returnObject[\"data\"][keyLabelsAndTs] = tempData == 0 ? (keyLabelsAndTs == '0' ? 0 : returnObject[\"data\"][parseInt(keyLabelsAndTs) - 1]) : tempData;\n            }\n        }\n        else if (flag == \"normal\") {\n            var first = true;\n            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n                var tempData = 0;\n                for (var key in progressObject) {\n                    if (first == true && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n                    }\n                    else if (first == false && progressObject[key][\"ts\"] > returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n                    }\n                }\n                returnObject[\"data\"][keyLabelsAndTs] = tempData;\n                first = false;\n            }\n        }\n        else if (flag == \"diff\") {\n            var first = true;\n            var maxDataBefore = 0;\n            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n                var tempData = 0;\n                for (var key in progressObject) {\n                    if (first == true && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n                    }\n                    else if (first == false && progressObject[key][\"ts\"] > returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData > parseInt(progressObject[key][\"data\"]) ? tempData : parseInt(progressObject[key][\"data\"]);\n                    }\n                }\n                returnObject[\"data\"][keyLabelsAndTs] = tempData - maxDataBefore >= 0 ? tempData - maxDataBefore : 0;\n                maxDataBefore = tempData > maxDataBefore ? tempData : maxDataBefore;\n                first = false;\n            }\n            if (typeof returnObject[\"data\"][0] !== 'undefined') {\n                delete returnObject[\"data\"][0];\n            }\n            if (typeof returnObject[\"ts\"][0] !== 'undefined') {\n                delete returnObject[\"ts\"][0];\n            }\n            if (typeof returnObject[\"labels\"][0] !== 'undefined') {\n                delete returnObject[\"labels\"][0];\n            }\n        }\n        else if (flag == \"avg\") {\n            //Durchschnitt im Zeitraum\n            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n                //returnObject[\"data\"]\n                var tempData = 0;\n                var tempCountData = 0;\n                for (var key in progressObject) {\n                    if (keyLabelsAndTs == '0' && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData + progressObject[key][\"data\"];\n                        tempCountData++;\n                    }\n                    else if (returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] < progressObject[key][\"ts\"] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData + progressObject[key][\"data\"];\n                        tempCountData++;\n                    }\n                }\n                returnObject[\"data\"][keyLabelsAndTs] = isNaN(tempData / tempCountData) ? 0 : tempData / tempCountData;\n            }\n        }\n        else if (flag == \"avg_comb\") {\n            //Durchschnitt im Zeitraum\n            for (var keyLabelsAndTs in returnObject[\"ts\"]) {\n                //returnObject[\"data\"]\n                var tempData = 0;\n                var tempCountData = 0;\n                for (var key in progressObject) {\n                    if (keyLabelsAndTs == '0' && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData + progressObject[key][\"data\"];\n                        tempCountData++;\n                    }\n                    else if (returnObject[\"ts\"][parseInt(keyLabelsAndTs) - 1] < progressObject[key][\"ts\"] && progressObject[key][\"ts\"] < returnObject[\"ts\"][keyLabelsAndTs]) {\n                        tempData = tempData + progressObject[key][\"data\"];\n                        tempCountData++;\n                    }\n                }\n                returnObject[\"data\"][keyLabelsAndTs] = isNaN(tempData / tempCountData) ? (keyLabelsAndTs == '0' ? 0 : returnObject[\"data\"][parseInt(keyLabelsAndTs) - 1]) : tempData / tempCountData;\n            }\n        }\n        return returnObject;\n    };\n    LibgameService = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [http_1.Http])\n    ], LibgameService);\n    return LibgameService;\n}());\nexports.LibgameService = LibgameService;\n//# sourceMappingURL=libgame.service.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/services/libgame.service.js\n ** module id = 61\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar SelectQuestComponent = (function () {\n    function SelectQuestComponent() {\n        this.shown = false;\n        this.questarray = new core_1.EventEmitter();\n    }\n    SelectQuestComponent.prototype.ngOnInit = function () {\n        this.initialselectedquestarray = this.selectedquestarray.slice(0);\n    };\n    SelectQuestComponent.prototype.toggleChosenQuest = function (quest_id) {\n        if (this.selectedquestarray.indexOf(quest_id) > -1) {\n            this.selectedquestarray.splice(this.selectedquestarray.indexOf(quest_id), 1);\n        }\n        else {\n            this.selectedquestarray.push(quest_id);\n        }\n    };\n    SelectQuestComponent.prototype.finalizeSelection = function () {\n        this.shown = false;\n        this.questarray.emit(this.selectedquestarray);\n    };\n    SelectQuestComponent.prototype.finalizeSelectionAbort = function () {\n        this.shown = false;\n        this.questarray.emit(this.initialselectedquestarray);\n    };\n    SelectQuestComponent.prototype.getNameOfQuestFromQuestId = function (quest_id) {\n        for (var key in this.chooseablequestarray) {\n            if (!this.isUndefined(this.chooseablequestarray[key].de_DE) &&\n                !this.isUndefined(this.chooseablequestarray[key].de_DE.questname) &&\n                !this.isUndefined(this.chooseablequestarray[key].quest_id) &&\n                this.chooseablequestarray[key].quest_id + \"\" == \"\" + quest_id)\n                return this.chooseablequestarray[key].de_DE.questname;\n        }\n        return \"\";\n    };\n    SelectQuestComponent.prototype.isUndefined = function (value) {\n        return typeof value === 'undefined';\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], SelectQuestComponent.prototype, \"chooseablequestarray\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], SelectQuestComponent.prototype, \"selectedquestarray\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], SelectQuestComponent.prototype, \"questarray\", void 0);\n    SelectQuestComponent = __decorate([\n        core_1.Component({\n            selector: 'selectquest-component',\n            template: \"\\n\\n\\n    <div *ngIf=\\\"shown\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:1000000;\\\">\\n      <div style=\\\"position:absolute;left:5%;top:5%;background:white;border:solid 1px gray;color:black;width:90%;height:90%;\\\">\\n        <p style=\\\"padding:10px;width:100%;text-align:center;\\\">W\\u00E4hle durch Anklicken die Quests aus</p>\\n\\n        <div style=\\\"height:calc(90% - 80px);margin:10px;padding:10px;overflow-y:scroll;\\\">\\n          <div *ngFor=\\\"let t_quest of chooseablequestarray\\\"\\n              (click)=\\\"toggleChosenQuest(t_quest.quest_id);\\\"\\n              [style.background]=\\\"selectedquestarray.indexOf(t_quest.quest_id) > -1?'rgb(230,230,230)':'rgb(255,255,255)'\\\"\\n              style=\\\"border:1px solid black;margin:2px 10px;cursor:pointer;\\\">\\n            <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">\\n              {{!isUndefined(t_quest.questname)? t_quest.questname : (!isUndefined(t_quest.de_DE) ? t_quest.de_DE.questname : '')}}\\n            </p>\\n          </div>\\n        </div>\\n\\n        <button (click)=\\\"finalizeSelection();\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Beende die Auswahl</button>\\n        <button (click)=\\\"finalizeSelectionAbort();\\\" class=\\\"button\\\" style=\\\"width:25%;margin-left:5%;\\\">Abbrechen</button>\\n      </div>\\n    </div>\\n\\n    <div>\\n      <div *ngFor=\\\"let t_quest_id of selectedquestarray\\\"\\n          style=\\\"border:1px solid black;margin:2px 0px;background:rgb(230,230,230);\\\">\\n        <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">{{getNameOfQuestFromQuestId(t_quest_id)}}</p>\\n      </div>\\n    </div>\\n\\n    <button class=\\\"button\\\" (click)=\\\"shown=true;\\\" style=\\\"width:initial;\\\">\\n      Hinzuf\\u00FCgen/Entfernen von Vorquests\\n    </button>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [])\n    ], SelectQuestComponent);\n    return SelectQuestComponent;\n}());\nexports.SelectQuestComponent = SelectQuestComponent;\n//# sourceMappingURL=selectquest.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/subcomponents/selectquest.component.js\n ** module id = 67\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar SelectTaskComponent = (function () {\n    function SelectTaskComponent() {\n        this.shown = false;\n        this.taskarray = new core_1.EventEmitter();\n    }\n    SelectTaskComponent.prototype.ngOnInit = function () {\n        this.initialselectedtaskarray = this.selectedtaskarray.slice(0);\n    };\n    SelectTaskComponent.prototype.toggleChosenTask = function (task_id) {\n        if (this.selectedtaskarray.indexOf(task_id) > -1) {\n            this.selectedtaskarray.splice(this.selectedtaskarray.indexOf(task_id), 1);\n        }\n        else {\n            this.selectedtaskarray.push(task_id);\n        }\n    };\n    SelectTaskComponent.prototype.finalizeSelection = function () {\n        this.shown = false;\n        this.taskarray.emit(this.selectedtaskarray);\n    };\n    SelectTaskComponent.prototype.finalizeSelectionAbort = function () {\n        this.shown = false;\n        this.taskarray.emit(this.initialselectedtaskarray);\n    };\n    SelectTaskComponent.prototype.getNameOfTaskFromTaskId = function (task_id) {\n        for (var key in this.chooseabletaskarray) {\n            if (!this.isUndefined(this.chooseabletaskarray[key].de_DE) &&\n                !this.isUndefined(this.chooseabletaskarray[key].de_DE.taskname) &&\n                !this.isUndefined(this.chooseabletaskarray[key].task_id) &&\n                this.chooseabletaskarray[key].task_id + \"\" == \"\" + task_id)\n                return this.chooseabletaskarray[key].de_DE.taskname;\n        }\n        return \"\";\n    };\n    SelectTaskComponent.prototype.isUndefined = function (value) {\n        return typeof value === 'undefined';\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], SelectTaskComponent.prototype, \"chooseabletaskarray\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], SelectTaskComponent.prototype, \"selectedtaskarray\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], SelectTaskComponent.prototype, \"taskarray\", void 0);\n    SelectTaskComponent = __decorate([\n        core_1.Component({\n            selector: 'selecttask-component',\n            template: \"\\n\\n\\n  <div *ngIf=\\\"shown\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:1000000;\\\">\\n    <div style=\\\"position:absolute;left:5%;top:5%;background:white;border:solid 1px gray;color:black;width:90%;height:90%;\\\">\\n      <p style=\\\"padding:10px;width:100%;text-align:center;\\\">W\\u00E4hle durch Anklicken die Aufgaben aus</p>\\n\\n      <div style=\\\"height:calc(90% - 80px);margin:10px;padding:10px;overflow-y:scroll;\\\">\\n        <div *ngFor=\\\"let t_task of chooseabletaskarray\\\"\\n            (click)=\\\"toggleChosenTask(t_task.task_id);\\\"\\n            [style.background]=\\\"selectedtaskarray.indexOf(t_task.task_id) > -1?'rgb(230,230,230)':'rgb(255,255,255)'\\\"\\n            style=\\\"border:1px solid black;margin:2px 10px;cursor:pointer;\\\">\\n          <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">{{!isUndefined(t_task.taskname)? t_task.taskname : (!isUndefined(t_task.de_DE) ? t_task.de_DE.taskname : '')}}</p>\\n        </div>\\n      </div>\\n\\n      <button (click)=\\\"finalizeSelection();\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Beende die Auswahl</button>\\n      <button (click)=\\\"finalizeSelectionAbort();\\\" class=\\\"button\\\" style=\\\"width:25%;margin-left:5%;\\\">Abbrechen</button>\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div *ngFor=\\\"let t_task_id of selectedtaskarray\\\"\\n        style=\\\"border:1px solid black;margin:2px 0px;background:rgb(230,230,230);\\\">\\n      <p style=\\\"margin:0;padding:0.2em;font-size:1em;font-weight:bold;\\\">{{getNameOfTaskFromTaskId(t_task_id)}}</p>\\n    </div>\\n  </div>\\n\\n  <button class=\\\"button\\\" (click)=\\\"shown=true;\\\" style=\\\"width:initial;\\\">\\n    Hinzuf\\u00FCgen/Entfernen von Aufgaben\\n  </button>\\n\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [])\n    ], SelectTaskComponent);\n    return SelectTaskComponent;\n}());\nexports.SelectTaskComponent = SelectTaskComponent;\n//# sourceMappingURL=selecttask.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/subcomponents/selecttask.component.js\n ** module id = 68\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar libgame_service_1 = require('./../../services/libgame.service');\nvar UploadPictureComponent = (function () {\n    function UploadPictureComponent(lService) {\n        this.lService = lService;\n        this.reload = new core_1.EventEmitter();\n        this.picturename = \"\";\n        this.shown = false;\n        this.successfullupload = false;\n    }\n    UploadPictureComponent.prototype.ngOnInit = function () {\n        this.picturename = \"\";\n    };\n    UploadPictureComponent.prototype.requestPictureFileChangeEvent = function (fileInput) {\n        this.pictureFiles = fileInput.target.files;\n    };\n    UploadPictureComponent.prototype.uploadPicture = function () {\n        var _this = this;\n        if (this.picturename.length == 0) {\n            window.alert(\"Bitte wähle zuerst einen Bildnamen!\");\n            return;\n        }\n        if (this.pictureFiles.length == 0) {\n            window.alert(\"Bitte wähle zuerst eine Bilddatei aus!\");\n            return;\n        }\n        this.lService.uploadPicture({ picturename: this.picturename }, this.pictureFiles).then(function (data) {\n            console.log(data);\n            if (typeof data.result !== \"undefined\" && data.result == true) {\n                _this.picturename = \"\";\n                _this.pictureFiles = [];\n                _this.successfullupload = true;\n                setTimeout(function () {\n                    _this.shown = false;\n                    _this.successfullupload = false;\n                }, 2000);\n                _this.reload.emit(true);\n            }\n            else {\n                window.alert(\"Es gab einen Fehler bei deiner Anfrage. Bitte lass die Seite neuladen!\");\n            }\n        }, function () {\n            window.alert(\"Es gab einen Fehler bei deiner Anfrage. Bitte lass die Seite neuladen!\");\n        });\n    };\n    UploadPictureComponent.prototype.abortUploadPicture = function () {\n        this.shown = false;\n    };\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], UploadPictureComponent.prototype, \"reload\", void 0);\n    UploadPictureComponent = __decorate([\n        core_1.Component({\n            selector: 'uploadpicture-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n\\n  <div *ngIf=\\\"shown\\\" style=\\\"position:fixed;left:0%;top:0%;background:rgba(0,0,0,0.4);width:100%;height:100%;z-index:10000000;\\\">\\n    <div style=\\\"position:relative;margin-left:auto;margin-right:auto;top:5%;background:white;border:solid 1px gray;color:black;width:90%;max-width:500px;height:auto;padding:10px;text-align:center;\\\">\\n      <p style=\\\"padding:10px;width:100%;text-align:center;\\\">W\\u00E4hle ein Bild und einen Bildnamen</p>\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <input type=\\\"file\\\" accept=\\\"image/*\\\"\\n                     (change)=\\\"requestPictureFileChangeEvent($event);\\\" name=\\\"pictureupload\\\" style=\\\"width: 95%;padding: 10px;\\\">\\n\\n       <input [(ngModel)]=\\\"picturename\\\" type=\\\"text\\\" placeholder=\\\"Bildname\\\" style=\\\"width: 95%;\\\">\\n\\n      <button (click)=\\\"abortUploadPicture();\\\" class=\\\"button\\\" style=\\\"width: calc(35% - 10px);margin-top: 30px;\\\">Abbrechen</button>\\n      <button (click)=\\\"uploadPicture();\\\" class=\\\"button\\\" style=\\\"width:60%;margin-left:5%;\\\">Bild jetzt hinzuf\\u00FCgen!</button>\\n      <div style=\\\"width:100%;text-align:center;\\\">\\n        <div *ngIf=\\\"successfullupload\\\" style=\\\"padding: 5px;\\\">Bild erfolgreich hinzugef\\u00FCgt!</div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <button class=\\\"button\\\" (click)=\\\"shown=true;\\\" style=\\\"width:initial;\\\">\\n    Bild zur Datenbank hinzuf\\u00FCgen\\n  </button>\\n\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [libgame_service_1.LibgameService])\n    ], UploadPictureComponent);\n    return UploadPictureComponent;\n}());\nexports.UploadPictureComponent = UploadPictureComponent;\n//# sourceMappingURL=uploadpicture.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/subcomponents/uploadpicture.component.js\n ** module id = 69\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar AdministrationComponent = (function () {\n    function AdministrationComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.reload = new core_1.EventEmitter();\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n        this.user_activity_task_active = \"10d\";\n        this.upsertNewTaskSuccessful = false;\n        this.upsertNewBadgeSuccessful = false;\n        this.upsertNewQuestSuccessful = false;\n        this.upsertNewLocationSuccessful = false;\n        this.upsertGeneralContentSuccessful = false;\n        this.addedNewAdminSuccessful = false;\n        this.sendEmailToAllUsersSuccessful = false;\n        this.loading_sendemails = false;\n        this.show_c_solved_tasks_chart = false;\n        this.show_cm_general = false;\n        this.show_cm_tasks = false;\n        this.show_cm_badges = false;\n        this.show_cm_quests = false;\n        this.show_cm_locations = false;\n        this.show_cm_reset_score = false;\n        this.show_um_add_admins = false;\n        this.show_um_send_mail = false;\n        this.addAdminId = -1;\n        this.send_email = {\n            headline: \"\",\n            content: \"\"\n        };\n        this.new_task = {};\n        this.new_task_template = {\n            task_id: -1,\n            task_type_id: 1,\n            json_task_data: {\n                de_DE: {\n                    question: \"\",\n                    a1: \"\",\n                    a2: \"\",\n                    a3: \"\",\n                    a4: \"\"\n                }\n            },\n            de_DE: {\n                taskname: \"\",\n                description_long: \"\",\n                solved_description: \"\"\n            },\n            is_task_active: \"1\",\n            score_rule: \"10\",\n            location_id: -1\n        };\n        this.new_badge = {};\n        this.new_badge_template = {\n            de_DE: {\n                badgename: \"\",\n                description_long: \"\",\n                solved_description: \"\"\n            },\n            badge_id: -1,\n            is_active: \"1\",\n            json_task_ids: [],\n            picture_id: -1\n        };\n        this.new_quest = {};\n        this.new_quest_template = {\n            quest_id: -1,\n            de_DE: {\n                questname: \"\",\n                solved_description: \"\"\n            },\n            is_active: \"1\",\n            json_pre_quest_ids: [],\n            json_quest_task_ids: [[]],\n            location_id: -1,\n            is_starter_quest: \"0\",\n            score_rule: \"10\"\n        };\n        this.new_location = {};\n        this.new_location_template = {\n            location_id: -1,\n            de_DE: {\n                locationname: \"\",\n                description_long: \"\"\n            },\n            geo_lati: \"\",\n            geo_long: \"\",\n            geo_radius: \"\"\n        };\n    }\n    AdministrationComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.user_activity_task_active = \"10d\";\n        this.new_task = this.new_task_template;\n        this.new_quest = this.new_quest_template;\n        this.new_badge = this.new_badge_template;\n        this.new_location = this.new_location_template;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            console.log(\"Specific Content\");\n            console.log(specificcontent);\n            if (typeof specificcontent[\"_Tasks\"] !== 'undefined') {\n                for (var t_task_key in specificcontent[\"_Tasks\"]) {\n                    specificcontent[\"_Tasks\"][t_task_key][\"showhelper_information_open\"] = false;\n                    specificcontent[\"_Tasks\"][t_task_key][\"showhelper_edit_open\"] = false;\n                    specificcontent[\"_Tasks\"][t_task_key][\"upsert_successful\"] = false;\n                    if (typeof specificcontent[\"_Tasks\"][t_task_key].json_task_data !== 'undefined')\n                        specificcontent[\"_Tasks\"][t_task_key].json_task_data = JSON.parse(specificcontent[\"_Tasks\"][t_task_key].json_task_data);\n                    if (typeof specificcontent[\"_Tasks\"][t_task_key].pre_tasks !== 'undefined')\n                        specificcontent[\"_Tasks\"][t_task_key].pre_tasks = JSON.parse(specificcontent[\"_Tasks\"][t_task_key].pre_tasks);\n                }\n            }\n            if (typeof specificcontent[\"_Quests\"] !== 'undefined') {\n                for (var t_quest_key in specificcontent[\"_Quests\"]) {\n                    specificcontent[\"_Quests\"][t_quest_key][\"showhelper_edit_open\"] = false;\n                    specificcontent[\"_Quests\"][t_quest_key][\"upsert_successful\"] = false;\n                    if (typeof specificcontent[\"_Quests\"][t_quest_key].json_pre_quest_ids !== 'undefined')\n                        specificcontent[\"_Quests\"][t_quest_key].json_pre_quest_ids = JSON.parse(specificcontent[\"_Quests\"][t_quest_key].json_pre_quest_ids);\n                    if (typeof specificcontent[\"_Quests\"][t_quest_key].json_quest_task_ids !== 'undefined')\n                        specificcontent[\"_Quests\"][t_quest_key].json_quest_task_ids = JSON.parse(specificcontent[\"_Quests\"][t_quest_key].json_quest_task_ids);\n                }\n            }\n            if (typeof specificcontent[\"_Badges\"] !== 'undefined') {\n                for (var t_badge_key in specificcontent[\"_Badges\"]) {\n                    specificcontent[\"_Badges\"][t_badge_key][\"showhelper_edit_open\"] = false;\n                    specificcontent[\"_Badges\"][t_badge_key][\"upsert_successful\"] = false;\n                    if (typeof specificcontent[\"_Badges\"][t_badge_key].json_task_ids !== 'undefined')\n                        specificcontent[\"_Badges\"][t_badge_key].json_task_ids = JSON.parse(specificcontent[\"_Badges\"][t_badge_key].json_task_ids);\n                }\n            }\n            if (typeof specificcontent[\"_Locations\"] !== 'undefined') {\n                for (var t_location_key in specificcontent[\"_Locations\"]) {\n                    specificcontent[\"_Locations\"][t_location_key][\"showhelper_information_open\"] = false;\n                }\n            }\n            _this.specificcontent = specificcontent;\n            //Chart\n            _this.updateChartUserActivityTask(10, 0, 0, true);\n            _this.loading_specificcontent = false;\n        });\n        this.lService.loadSpecificContent('administrationcontent');\n    };\n    AdministrationComponent.prototype.getAdmins = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Admins'] !== 'undefined' ? this.specificcontent['_Admins'] : [];\n    };\n    AdministrationComponent.prototype.getAllUsers = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_All_Users'] !== 'undefined' ? this.specificcontent['_All_Users'] : [];\n    };\n    AdministrationComponent.prototype.getSuperadmins = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Superadmins'] !== 'undefined' ? this.specificcontent['_Superadmins'] : [];\n    };\n    AdministrationComponent.prototype.getTasks = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Tasks'] !== 'undefined' ? this.specificcontent['_Tasks'] : [];\n    };\n    AdministrationComponent.prototype.getQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Quests'] !== 'undefined' ? this.specificcontent['_Quests'] : [];\n    };\n    AdministrationComponent.prototype.getBadges = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Badges'] !== 'undefined' ? this.specificcontent['_Badges'] : [];\n    };\n    AdministrationComponent.prototype.getLocations = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Locations'] !== 'undefined' ? this.specificcontent['_Locations'] : [];\n    };\n    AdministrationComponent.prototype.getTaskTypes = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Task_Types'] !== 'undefined' ? this.specificcontent['_Task_Types'] : [];\n    };\n    AdministrationComponent.prototype.getCountActiveQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Active_Quests'] !== 'undefined' ? this.specificcontent['Count_Active_Quests'] : 0;\n    };\n    AdministrationComponent.prototype.getCountActiveTasks = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Active_Tasks'] !== 'undefined' ? this.specificcontent['Count_Active_Tasks'] : 0;\n    };\n    AdministrationComponent.prototype.getCountActiveBadges = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Active_Badges'] !== 'undefined' ? this.specificcontent['Count_Active_Badges'] : 0;\n    };\n    AdministrationComponent.prototype.getCountUsers = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users'] !== 'undefined' ? this.specificcontent['Count_Users'] : 0;\n    };\n    AdministrationComponent.prototype.getCountUsersActiveLast2Days = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users_Active_Last_2_Days'] !== 'undefined' ? this.specificcontent['Count_Users_Active_Last_2_Days'] : 0;\n    };\n    AdministrationComponent.prototype.getCountUsersCompletedAllQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users_Completed_All_Quests'] !== 'undefined' ? this.specificcontent['Count_Users_Completed_All_Quests'] : 0;\n    };\n    AdministrationComponent.prototype.getCountUsersCompletedAllBadges = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Users_Completed_All_Badges'] !== 'undefined' ? this.specificcontent['Count_Users_Completed_All_Badges'] : 0;\n    };\n    AdministrationComponent.prototype.getStatistics = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['_Statistics'] !== 'undefined' ? this.specificcontent['_Statistics'] : {};\n    };\n    AdministrationComponent.prototype.getUniversalContentPictures = function () {\n        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n    };\n    AdministrationComponent.prototype.getUniversalContent = function (content_mapper) {\n        if ($.isEmptyObject(this.universalcontent) || typeof this.universalcontent['_Content'] === 'undefined') {\n            return \"\";\n        }\n        var t_content = this.universalcontent['_Content'].filter(function (x) { return x.content_mapper.toLowerCase() == content_mapper.toLowerCase(); });\n        if (t_content.length > 0) {\n            return t_content[0].text;\n        }\n        else {\n            return \"\";\n        }\n    };\n    AdministrationComponent.prototype.setUniversalContent = function (content_mapper, text) {\n        if ($.isEmptyObject(this.universalcontent) || typeof this.universalcontent['_Content'] === 'undefined') {\n            return;\n        }\n        for (var key in this.universalcontent['_Content']) {\n            if (this.universalcontent['_Content'][key][\"content_mapper\"].toLowerCase() == content_mapper.toLowerCase()) {\n                this.universalcontent['_Content'][key][\"text\"] = text;\n            }\n        }\n    };\n    AdministrationComponent.prototype.initChartWithDelay = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.user_activity_task_active = '10d';\n            _this.updateChartUserActivityTask(10, 0, 0, false);\n        }, 1000);\n    };\n    AdministrationComponent.prototype.updateChartUserActivityTask = function (d, m, y, init) {\n        var ObjectForCalculation = [];\n        var tempObject = typeof this.getStatistics()[\"Administration_Statistic_1\"] !== 'undefined' ? JSON.parse(this.getStatistics()[\"Administration_Statistic_1\"][\"json_statistic\"]) : [];\n        for (var key in tempObject) {\n            ObjectForCalculation.push({ \"data\": tempObject[key]['data'], \"ts\": tempObject[key]['ts'] });\n        }\n        var CalculatedChartDataActivityTask = this.lService.getLabelsAndDataForChart(JSON.stringify(ObjectForCalculation), d, m, y, 'diff');\n        var lineChartData_canvas_user_activity_task = {\n            labels: $.map(CalculatedChartDataActivityTask['labels'], function (el) { return el; }),\n            datasets: [\n                {\n                    strokeColor: 'rgba(251,78,0,1)',\n                    pointColor: 'rgba(251,78,0,1)',\n                    pointStrokeColor: '#fff',\n                    pointHighlightStroke: 'rgba(220,220,220,1)',\n                    data: $.map(CalculatedChartDataActivityTask['data'], function (el) { return el; })\n                }\n            ]\n        };\n        var biggestValue = 0;\n        for (var key_1 in CalculatedChartDataActivityTask[\"data\"]) {\n            if (CalculatedChartDataActivityTask[\"data\"][key_1] > biggestValue)\n                biggestValue = CalculatedChartDataActivityTask[\"data\"][key_1];\n        }\n        var settingsObj_canvas_user_activity_task = {\n            animation: false,\n            responsive: true,\n            scaleFontColor: '#000',\n            bezierCurve: false,\n            datasetFill: false,\n            scaleOverride: true,\n            scaleSteps: 8,\n            scaleStepWidth: Math.ceil(biggestValue / 8) + 1,\n            scaleStartValue: 0,\n            scaleLineColor: 'rgba(0,0,0,.6)',\n            scaleGridLineColor: 'rgba(0,0,0,.2)',\n            graphTitleFontSize: 18,\n            graphTitleFontColor: '#000',\n        };\n        //updateChart(document.getElementById('canvas_user_activity_task').getContext('2d'),lineChartData_canvas_user_activity_task,settingsObj_canvas_user_activity_task,false,false);\n        if (typeof init === 'undefined' || init == false) {\n            var t_canvas = document.getElementById('canvas_user_activity_task');\n            updateChart(t_canvas.getContext('2d'), lineChartData_canvas_user_activity_task, settingsObj_canvas_user_activity_task, false, false);\n        }\n        else {\n            $('#canvas_user_activity_task').attr('width', $('#canvas_user_activity_task').parent().width());\n            var t_canvas = document.getElementById('canvas_user_activity_task');\n            new Chart(t_canvas.getContext('2d')).Line(lineChartData_canvas_user_activity_task, settingsObj_canvas_user_activity_task);\n        }\n    };\n    AdministrationComponent.prototype.showCanvasForTask = function (task_id, location_id) {\n        $(\"#qrcode-task-img\" + task_id).qrcode({\n            \"width\": 100,\n            \"height\": 100,\n            \"background\": '#fff',\n            \"fill\": '#000',\n            \"text\": this.lService.getSolveLinkForLocationTask(task_id, location_id)\n        });\n    };\n    AdministrationComponent.prototype.showCanvasForLocation = function (location_id) {\n        $(\"#qrcode-location-img\" + location_id).qrcode({\n            \"width\": 100,\n            \"height\": 100,\n            \"background\": '#fff',\n            \"fill\": '#000',\n            \"text\": this.lService.getLocationFoundLink(location_id)\n        });\n    };\n    //Communication with Server\n    AdministrationComponent.prototype.upsertGeneralContent = function () {\n        var _this = this;\n        var t_generalcontent = {\n            HOME_1: this.getUniversalContent(\"HOME_1\"),\n            MAIN_PICTURE_ID: this.getUniversalContent(\"MAIN_PICTURE_ID\"),\n            ROOT_LOCATION: this.getUniversalContent(\"ROOT_LOCATION\"),\n            START: this.getUniversalContent(\"START\"),\n            TOU: this.getUniversalContent(\"TOU\"),\n            PP: this.getUniversalContent(\"PP\"),\n            IMPRESSUM: this.getUniversalContent(\"IMPRESSUM\")\n        };\n        this.lService.upsertGeneralContent(t_generalcontent).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n                _this.upsertGeneralContentSuccessful = true;\n                setTimeout(function () { _this.upsertGeneralContentSuccessful = false; }, 8000);\n                _this.lService.loadSpecificContent('administrationcontent');\n            }\n            else {\n                window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n        });\n    };\n    AdministrationComponent.prototype.upsertTask = function (taskdata) {\n        var _this = this;\n        console.log(taskdata);\n        //Taskname\n        if (typeof taskdata.de_DE.taskname === 'undefined' || taskdata.de_DE.taskname.length == 0) {\n            window.alert(\"Bitte wähle einen geeigneten Aufgabennamen!\");\n            return;\n        }\n        //Description\n        if (typeof taskdata.de_DE.description_long === 'undefined' || taskdata.de_DE.description_long.length == 0) {\n            window.alert(\"Bitte wähle eine Aufgabenbeschreibung!\");\n            return;\n        }\n        //Solved Description\n        if (typeof taskdata.de_DE.solved_description === 'undefined' || taskdata.de_DE.solved_description.length == 0) {\n            window.alert(\"Bitte gib eine Meldung für den User ein, welche er erhält, wenn er die Aufgabe erfolgreich gelöst hat!\");\n            return;\n        }\n        //score_rule\n        if (typeof taskdata.score_rule === 'undefined' || taskdata.score_rule.length == 0 || !this.isNumeric(taskdata.score_rule)) {\n            window.alert(\"Bitte wähle die Exp. für die Aufgabe bzw. überprüfe, ob es sich um eine Zahl handelt!\");\n            return;\n        }\n        //Task Type\n        if (typeof taskdata.task_type_id === 'undefined' || taskdata.task_type_id == -1) {\n            window.alert(\"Bitte wähle vorher einen korrekten Aufgabentypen aus!\");\n            return;\n        }\n        //Task Data\n        if (typeof taskdata.json_task_data === 'undefined') {\n            window.alert(\"Es ist ein schwerwiegender Fehler aufgetreten. Bitte lass die Seite neuladen und versuche es erneut!\");\n            return;\n        }\n        //Task Type Dependend\n        if (taskdata.task_type_id == 1) {\n            if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.question === 'undefined' || taskdata.json_task_data.de_DE.question.length == 0) {\n                window.alert(\"Bitte gib eine Frage ein!\");\n                return;\n            }\n            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a1 === 'undefined' || taskdata.json_task_data.de_DE.a1.length == 0) {\n                window.alert(\"Bitte gib zu deiner Frage die richtige Antwort ein!\");\n                return;\n            }\n            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a2 === 'undefined' || taskdata.json_task_data.de_DE.a2.length == 0) {\n                window.alert(\"Bitte überprüfe deine falschen Antworten!\");\n                return;\n            }\n            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a3 === 'undefined' || taskdata.json_task_data.de_DE.a3.length == 0) {\n                window.alert(\"Bitte überprüfe deine falschen Antworten!\");\n                return;\n            }\n            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.a4 === 'undefined' || taskdata.json_task_data.de_DE.a4.length == 0) {\n                window.alert(\"Bitte überprüfe deine falschen Antworten!\");\n                return;\n            }\n        }\n        else if (taskdata.task_type_id == 2) {\n            if (typeof taskdata.json_task_data.loc === 'undefined' || taskdata.json_task_data.loc == -1) {\n                window.alert(\"Bitte überprüfe den aufgabenspezifischen Ort!\");\n                return;\n            }\n        }\n        else if (taskdata.task_type_id == 3) {\n            if (typeof taskdata.json_task_data.isbn === 'undefined' || taskdata.json_task_data.isbn.length == 0) {\n                window.alert(\"Bitte überprüfe die ISBN zu deiner Aufgabe nochmals!\");\n                return;\n            }\n        }\n        else if (taskdata.task_type_id == 4) {\n            if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.s1 === 'undefined' || taskdata.json_task_data.de_DE.s1.length == 0) {\n                window.alert(\"Bitte überprüfe deine Eingabe zur 1.Quelle!\");\n                return;\n            }\n            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.s2 === 'undefined' || taskdata.json_task_data.de_DE.s2.length == 0) {\n                window.alert(\"Bitte überprüfe deine Eingabe zur 2.Quelle!\");\n                return;\n            }\n            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.s3 === 'undefined' || taskdata.json_task_data.de_DE.s3.length == 0) {\n                window.alert(\"Bitte überprüfe deine Eingabe zur 3.Quelle!\");\n                return;\n            }\n        }\n        else if (taskdata.task_type_id == 5) {\n            if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.text === 'undefined' || taskdata.json_task_data.de_DE.text.length == 0) {\n                window.alert(\"Bitte überprüfe die Eingabe zum Lückentext!\");\n                return;\n            }\n            else if (typeof taskdata.json_task_data.de_DE === 'undefined' || typeof taskdata.json_task_data.de_DE.answer === 'undefined' || taskdata.json_task_data.de_DE.answer.length == 0) {\n                window.alert(\"Bitte überprüfe die Eingabe zur Antwort bei deiner Lückentext-Aufgabe!\");\n                return;\n            }\n        }\n        else if (taskdata.task_type_id == 6) {\n        }\n        else {\n            window.alert(\"Bitte wähle vorher einen korrekten Aufgabentypen aus!\");\n            return;\n        }\n        if (typeof taskdata.task_id !== 'undefined' && taskdata.task_id == -1) {\n            this.lService.upsertTask(taskdata).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.upsertNewTaskSuccessful = true;\n                    setTimeout(function () { _this.upsertNewTaskSuccessful = false; }, 8000);\n                    _this.new_task = _this.new_task_template;\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n        else if (typeof taskdata.task_id !== 'undefined' && taskdata.task_id != -1) {\n            this.lService.upsertTask(taskdata).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    taskdata.upsert_successful = true;\n                    setTimeout(function () { taskdata.upsert_successful = false; }, 8000);\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n        return;\n    };\n    AdministrationComponent.prototype.upsertBadge = function (badgedata) {\n        var _this = this;\n        console.log(badgedata);\n        //Badgename\n        if (typeof badgedata.de_DE.badgename === 'undefined' || badgedata.de_DE.badgename.length == 0) {\n            window.alert(\"Bitte wähle einen geeigneten Abzeichennamen!\");\n            return;\n        }\n        //Description\n        if (typeof badgedata.de_DE.description_long === 'undefined' || badgedata.de_DE.description_long.length == 0) {\n            window.alert(\"Bitte wähle eine Abzeichenbeschreibung!\");\n            return;\n        }\n        //Solved Description\n        if (typeof badgedata.de_DE.solved_description === 'undefined' || badgedata.de_DE.solved_description.length == 0) {\n            window.alert(\"Bitte gib eine Meldung für den User ein, welche er erhält, wenn er das Abzeichen erfolgreich gelöst hat!\");\n            return;\n        }\n        //TaskIds\n        if (typeof badgedata.json_task_ids === 'undefined' || badgedata.json_task_ids.length == 0) {\n            window.alert(\"Ein Abzeichen, für welches die Lösung keiner Aufgabe nötig ist, ist nicht möglich!\");\n            return;\n        }\n        //Picture ID\n        if (typeof badgedata.picture_id === 'undefined' || badgedata.picture_id == -1) {\n            window.alert(\"Bitte wähle ein Bild für das Abzeichen aus!\");\n            return;\n        }\n        if (typeof badgedata.badge_id !== 'undefined' && badgedata.badge_id == -1) {\n            this.lService.upsertBadge(badgedata).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.upsertNewBadgeSuccessful = true;\n                    setTimeout(function () {\n                        _this.upsertNewBadgeSuccessful = false;\n                    }, 8000);\n                    _this.new_badge = _this.new_badge_template;\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n        else if (typeof badgedata.badge_id !== 'undefined' && badgedata.badge_id != -1) {\n            this.lService.upsertBadge(badgedata).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    badgedata.upsert_successful = true;\n                    setTimeout(function () { badgedata.upsert_successful = false; }, 8000);\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n        return;\n    };\n    AdministrationComponent.prototype.upsertQuest = function (questdata) {\n        var _this = this;\n        console.log(questdata);\n        //Taskname\n        if (typeof questdata.de_DE.questname === 'undefined' || questdata.de_DE.questname.length == 0) {\n            window.alert(\"Bitte wähle einen geeigneten Questnamen!\");\n            return;\n        }\n        //Solved Description\n        if (typeof questdata.de_DE.solved_description === 'undefined' || questdata.de_DE.solved_description.length == 0) {\n            window.alert(\"Bitte gib eine Meldung für den User ein, welche er erhält, wenn er den Quest erfolgreich gelöst hat!\");\n            return;\n        }\n        //score_rule\n        if (typeof questdata.score_rule === 'undefined' || questdata.score_rule.length == 0 || !this.isNumeric(questdata.score_rule)) {\n            window.alert(\"Bitte wähle die Exp. für den Quest bzw. überprüfe, ob es sich um eine Zahl handelt!\");\n            return;\n        }\n        //Usability Checks\n        if (typeof questdata.location_id !== 'undefined' && questdata.location_id == -1 &&\n            typeof questdata.json_pre_quest_ids !== 'undefined' && questdata.json_pre_quest_ids.length == 0 &&\n            typeof questdata.is_starter_quest !== 'undefined' && questdata.is_starter_quest == '0') {\n            window.alert(\"Vorsicht: Dieser Quest wird niemals gefunden bzw. spielbar sein, da er an keinem Ort gefunden wird, keine Vorquests hat und kein Starterquest (Quest, welche der User von Beginn an lösen kann) ist. Bitte sorge dafür, dass genau eins davon zutrifft!\");\n            return;\n        }\n        if (typeof questdata.json_pre_quest_ids !== 'undefined' && questdata.json_pre_quest_ids.length != 0 &&\n            typeof questdata.is_starter_quest !== 'undefined' && questdata.is_starter_quest == '1') {\n            window.alert(\"Vorsicht: Dieser Quest enthält einen logischen Fehler, da ein Quest mit Vorquests niemals ein Starterquest (Quest, welche der User von Beginn an lösen kann) sein kann! Bedenke, dass ein Quest mit Vorquests automatisch dem User zugeteilt wird, wenn er alle Vorquests abgeschlossen hat!\");\n            return;\n        }\n        if (typeof questdata.location_id !== 'undefined' && questdata.location_id != -1 &&\n            typeof questdata.is_starter_quest !== 'undefined' && questdata.is_starter_quest == '1') {\n            window.alert(\"Vorsicht: Dieser Quest enthält einen logischen Fehler, da ein Quest, welcher an einem Ort gefunden werden kann, niemals ein Starterquest (Quest, welche der User von Beginn an lösen kann) sein kann! Bedenke, dass ein Quest, welcher gefunden wird, nicht schon zu Beginn dem User gestellt werden kann!\");\n            return;\n        }\n        //Quest Level Task Data\n        if (typeof questdata.json_quest_task_ids === 'undefined' || questdata.json_quest_task_ids.length == 0) {\n            window.alert(\"Schwerwiegender interner Fehler. Bitte lass die Seite neuladen!\");\n            return;\n        }\n        for (var i = 0; i < questdata.json_quest_task_ids.length; i++) {\n            if (questdata.json_quest_task_ids[i].length == 0) {\n                window.alert(\"Fehler bei den Aufgaben für Stufe \" + (i + 1) + \": Keine Aufgaben ausgewählt!\");\n                return;\n            }\n        }\n        if (typeof questdata.quest_id !== 'undefined' && questdata.quest_id == -1) {\n            this.lService.upsertQuest(questdata).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.upsertNewQuestSuccessful = true;\n                    setTimeout(function () { _this.upsertNewQuestSuccessful = false; }, 8000);\n                    _this.new_quest = _this.new_quest_template;\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n        else if (typeof questdata.quest_id !== 'undefined' && questdata.quest_id != -1) {\n            this.lService.upsertQuest(questdata).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    questdata.upsert_successful = true;\n                    setTimeout(function () { questdata.upsert_successful = false; }, 8000);\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n        return;\n    };\n    AdministrationComponent.prototype.upsertLocation = function (locationdata) {\n        var _this = this;\n        console.log(locationdata);\n        //locationname\n        if (typeof locationdata.de_DE.locationname === 'undefined' || locationdata.de_DE.locationname.length == 0) {\n            window.alert(\"Bitte wähle einen geeigneten Ortsnamen!\");\n            return;\n        }\n        //Lati\n        if (typeof locationdata.geo_lati === 'undefined' || locationdata.geo_lati.length == 0 || !this.isNumeric(locationdata.geo_lati)) {\n            window.alert(\"Bitte gib einen korrekten Breitengrad ein!\");\n            return;\n        }\n        //Long\n        if (typeof locationdata.geo_long === 'undefined' || locationdata.geo_long.length == 0 || !this.isNumeric(locationdata.geo_long)) {\n            window.alert(\"Bitte gib einen korrekten Längengrad ein!\");\n            return;\n        }\n        //Long\n        if (typeof locationdata.geo_radius === 'undefined' || locationdata.geo_radius.length == 0 || !this.isNumeric(locationdata.geo_radius)) {\n            window.alert(\"Bitte gib einen korrekten Radius ein!\");\n            return;\n        }\n        if (typeof locationdata.location_id !== 'undefined' && locationdata.location_id == -1) {\n            this.lService.upsertLocation(locationdata).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.upsertNewLocationSuccessful = true;\n                    setTimeout(function () { _this.upsertNewLocationSuccessful = false; }, 8000);\n                    _this.new_location = _this.new_location_template;\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n        return;\n    };\n    AdministrationComponent.prototype.resetFacultyScore = function () {\n        if (confirm(\"Soll jetzt der Fakultätshighscore zurückgesetzt werden?\") == true) {\n            this.lService.resetFacultyScore().subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    window.alert(\"Der Fakultätshighscore wurde erfolgreich zurückgesetzt!\");\n                }\n                else {\n                    window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n    };\n    AdministrationComponent.prototype.deleteAdmin = function (user_id) {\n        //TODO\n    };\n    AdministrationComponent.prototype.setNewAdmin = function () {\n        var _this = this;\n        if (typeof this.addAdminId === 'undefined' || this.addAdminId == -1) {\n            window.alert(\"Bitte wähle zuerst einen User aus!\");\n            return;\n        }\n        this.lService.setNewAdmin(this.addAdminId).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n                _this.addedNewAdminSuccessful = true;\n                setTimeout(function () { _this.addedNewAdminSuccessful = false; }, 8000);\n                _this.addAdminId = -1;\n                _this.lService.loadSpecificContent('administrationcontent');\n            }\n            else {\n                window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n        });\n    };\n    AdministrationComponent.prototype.setTaskActiveInactive = function (taskdata) {\n        console.log(taskdata);\n        taskdata.is_task_active = taskdata.is_task_active == \"1\" ? \"0\" : \"1\";\n        this.lService.upsertTask(taskdata).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n            }\n            else {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n        });\n    };\n    AdministrationComponent.prototype.setTaskDeleteTask = function (task_id) {\n        var _this = this;\n        if (confirm(\"Soll die Aufgabe jetzt gelöscht werden?\") == true) {\n            this.lService.deleteTask(task_id).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n    };\n    AdministrationComponent.prototype.setBadgeActiveInactive = function (badgedata) {\n        console.log(badgedata);\n        badgedata.is_active = badgedata.is_active == \"1\" ? \"0\" : \"1\";\n        this.lService.upsertBadge(badgedata).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n            }\n            else {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n        });\n    };\n    AdministrationComponent.prototype.setBadgeDeleteBadge = function (badge_id) {\n        var _this = this;\n        if (confirm(\"Soll das Abzeichen jetzt gelöscht werden?\") == true) {\n            this.lService.deleteBadge(badge_id).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n    };\n    AdministrationComponent.prototype.setQuestActiveInactive = function (questdata) {\n        console.log(questdata);\n        questdata.is_active = questdata.is_active == \"1\" ? \"0\" : \"1\";\n        this.lService.upsertQuest(questdata).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n            }\n            else {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n        });\n    };\n    AdministrationComponent.prototype.setQuestDeleteQuest = function (quest_id) {\n        var _this = this;\n        if (confirm(\"Soll der Quest jetzt gelöscht werden?\") == true) {\n            this.lService.deleteQuest(quest_id).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n    };\n    AdministrationComponent.prototype.setLocationDeleteLocation = function (location_id) {\n        var _this = this;\n        if (confirm(\"Soll der Ort jetzt gelöscht werden?\") == true) {\n            this.lService.deleteLocation(location_id).subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.lService.loadSpecificContent('administrationcontent');\n                }\n                else {\n                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n    };\n    AdministrationComponent.prototype.sendEmailMessageToAllUsers = function () {\n        var _this = this;\n        if (this.loading_sendemails == true) {\n            return;\n        }\n        if (typeof this.send_email.headline === 'undefined' || this.send_email.headline.length == 0) {\n            window.alert(\"Bitte gib zuerst einen Betreff ein!\");\n            return;\n        }\n        if (typeof this.send_email.content === 'undefined' || this.send_email.content.length == 0) {\n            window.alert(\"Bitte gib zuerst eine Nachricht ein!\");\n            return;\n        }\n        this.loading_sendemails = true;\n        this.lService.sendEmailMessageToAllUsers(this.send_email).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n                _this.sendEmailToAllUsersSuccessful = true;\n                setTimeout(function () { _this.sendEmailToAllUsersSuccessful = false; }, 5000);\n                _this.send_email.content = \"\";\n                _this.send_email.headline = \"\";\n            }\n            else {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n            }\n            _this.loading_sendemails = false;\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            _this.loading_sendemails = false;\n        });\n    };\n    //Helper\n    AdministrationComponent.prototype.isNumeric = function (value) {\n        return typeof value !== 'undefined' && !isNaN(parseFloat(value));\n    };\n    AdministrationComponent.prototype.sendToConsole = function (value) {\n        console.log(value);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], AdministrationComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], AdministrationComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], AdministrationComponent.prototype, \"reload\", void 0);\n    AdministrationComponent = __decorate([\n        core_1.Component({\n            selector: 'administration-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row-controlling row\\\">\\n\\n      <p class=\\\"overall-headline\\\" style=\\\"width:100%;text-align:center;padding: 10px 0px!important;\\\">CONTROLLING</p>\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-ad-stats\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Daten und Fakten</p>\\n\\n              <div class=\\\"col-xs-12\\\" style=\\\"width:100%;\\\">\\n\\n                  <div  style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ad-stats-quests-count\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aktive Quests</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountActiveQuests()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-badges-count\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aktive Abzeichen</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountActiveBadges()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-tasks-count\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aktive Aufgaben</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountActiveTasks()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"col-xs-12\\\" style=\\\"width:100%;\\\">\\n\\n                  <div style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ad-stats-user-count\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Nutzer</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsers()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-user-last-active\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">ZULETZT AKTIVE USER [2 TAGE]</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsersActiveLast2Days()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-user-completed-quests\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">USER, WELCHE ALLE QUESTS GEL\\u00D6ST HABEN</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsersCompletedAllQuests()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                      <div id=\\\"cf-ad-stats-user-completed-badges\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">USER, WELCHE ALLE ABZEICHEN GESAMMELT HABEN</p>\\n                          <p style=\\\"font-size:1em;text-align:center;\\\">{{getCountUsersCompletedAllBadges()}}</p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n\\n\\n              </div>\\n              <div style=\\\"clear:both;\\\"></div>\\n\\n\\n          </div>\\n\\n\\n          <div id=\\\"cf-ad-user-activity-task\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_c_solved_tasks_chart=show_c_solved_tasks_chart?false:true;initChartWithDelay();\\\">Chart: Gel\\u00F6ste Aufgaben</p>\\n\\n              <div [hidden]=\\\"!show_c_solved_tasks_chart\\\" style=\\\"width:100%;\\\">\\n                  <div style=\\\"display:inline-block;border:2px solid rgb(0,0,0);border-radius:4px;\\\">\\n                    <div (click)=\\\"updateChartUserActivityTask(10,0,0);user_activity_task_active='10d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='10d'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='10d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">10 Tage</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(30,0,0);user_activity_task_active='30d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='30d'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='30d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">30 Tage</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,6,0);user_activity_task_active='6m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='6m'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='6m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">6 Monate</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,12,0);user_activity_task_active='12m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='12m'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='12m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">12 Monate</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,24,0);user_activity_task_active='24m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='24m'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='24m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">24 Monate</div>\\n                    <div (click)=\\\"updateChartUserActivityTask(0,0,5);user_activity_task_active='5y';\\\" [class.whiteButtonClass-currentItem]=\\\"user_activity_task_active=='5y'\\\" [class.whiteButtonClass]=\\\"user_activity_task_active!='5y'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">5 Jahre</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                  </div>\\n              </div>\\n\\n              <div [hidden]=\\\"!show_c_solved_tasks_chart\\\" style=\\\"width:100%!important;min-width:100px!important;\\\">\\n                  <canvas id=\\\"canvas_user_activity_task\\\" height=\\\"400\\\"></canvas>\\n              </div>\\n\\n          </div>\\n\\n      </div>\\n\\n\\n  </div>\\n\\n\\n  <div class=\\\"row-content-management row\\\">\\n\\n      <p class=\\\"overall-headline\\\" style=\\\"width:100%;text-align:center;\\\">CONTENT-MANAGEMENT</p>\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_general=show_cm_general?false:true;\\\">Allgemein</p>\\n\\n              <div [hidden]=\\\"!show_cm_general\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Adding Location -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-4 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Administriere Allgemeines</p>\\n\\n                      <hr class=\\\"hrForAdministration\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Hauptbild / Logo des Spiels<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <div >\\n                          <div style=\\\"float:left;width:50%;margin-top:10px;\\\">\\n                              <select [value]=\\\"getUniversalContent('MAIN_PICTURE_ID')\\\" (change)=\\\"setUniversalContent('MAIN_PICTURE_ID',$event.target.value);\\\" style=\\\"width:100%;\\\">\\n                                  <option *ngFor=\\\"let t_picture of getUniversalContentPictures();\\\" value='{{t_picture.picture_id}}'>{{t_picture.picturename}}</option>\\n                              </select>\\n                          </div>\\n                          <div style=\\\"float:left;width:50%;text-align:right;\\\">\\n                              <uploadpicture-component (reload)=\\\"reload.emit(true);\\\"></uploadpicture-component>\\n                          </div>\\n                          <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                          <div [hidden]=\\\"(getUniversalContent('MAIN_PICTURE_ID')+'').length == 0\\\" style=\\\"text-align:center;\\\">\\n                              <label style=\\\"width:100%;text-align:center;\\\">Hauptbild / Logo des Spiels Vorschau</label>\\n                              <br>\\n                              <img style='width:30%;' src='{{(getUniversalContent(\\\"MAIN_PICTURE_ID\\\")+\\\"\\\").length != 0 ? lService.getPictureLink(getUniversalContent(\\\"MAIN_PICTURE_ID\\\")) : \\\"\\\"}}'>\\n                          </div>\\n                      </div>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Zentraler Ort (Dieser Ort bestimmt, auf welchen Punkt beim \\u00D6ffnen der Aufgabensuche gezoomt werden soll)</label>\\n                      <br>\\n                      <select [value]=\\\"getUniversalContent('ROOT_LOCATION')\\\" (change)=\\\"setUniversalContent('ROOT_LOCATION',$event.target.value);\\\"  style=\\\"width:100%;\\\">\\n                        <option value='-1' selected=\\\"selected\\\">--None--</option>\\n                        <option *ngFor=\\\"let t_location of getLocations();\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n                      </select>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Inhalt der Startseite (bevor der User eingeloggt ist)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('START')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('START',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Inhalt der Startseite (wenn der User eingeloggt ist; \\\"Was kann ich hier machen?\\\")<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('HOME_1')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('HOME_1',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">AGB<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('TOU')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('TOU',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Datenschutzerkl\\u00E4rung<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('PP')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('PP',$event);\\\" ></htmleditor-component>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Impressum<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"getUniversalContent('IMPRESSUM')\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"setUniversalContent('IMPRESSUM',$event);\\\" ></htmleditor-component>\\n\\n                      <button (click)=\\\"upsertGeneralContent();\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">Speichere die allgemeinen Informationen</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertGeneralContentSuccessful\\\" style=\\\"padding: 5px;\\\">Allgemeinen Informationen erfolgreich gespeichert!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n\\n          <div id=\\\"cf-ad-manage-tasks\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_tasks=show_cm_tasks?false:true;\\\">Aufgaben</p>\\n\\n\\n\\n              <div [hidden]=\\\"!show_cm_tasks\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Editing Tasks -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Organisiere bestehende Aufgaben</p>\\n\\n                          <div *ngFor=\\\"let t_task of getTasks(); let i = index;\\\" class=\\\"cf-ad-manage-tasks-task\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                              <div  class=\\\"cf-ad-manage-tasks-task-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                                  <button (click)=\\\"setTaskDeleteTask(t_task.task_id)\\\" class=\\\"delete-task-button fa fa-minus\\\" title=\\\"L\\u00F6sche diese Aufgabe\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <button (click)=\\\"setTaskActiveInactive(getTasks()[i])\\\" [class.active]=\\\"t_task.is_task_active=='1'\\\" [class.inactive]=\\\"t_task.is_task_active!='1'\\\" class=\\\"set-task-active-inactive-button fa fa-circle\\\" title=\\\"Setze die Aufgabe aktiv/inaktiv\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <button (click)=\\\"t_task.showhelper_edit_open = t_task.showhelper_edit_open?false:true;\\\" [class.button-pressed]=\\\"t_task.showhelper_edit_open\\\" class=\\\"fa fa-edit\\\" title=\\\"Bearbeite die Aufgabe\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <button [hidden]=\\\"t_task.task_type_id != 6\\\" (click)=\\\"t_task.showhelper_information_open = t_task.showhelper_information_open?false:true; t_task.showhelper_information_open?showCanvasForTask(t_task.task_id,t_task.json_task_data.loc):'';\\\" [class.button-pressed]=\\\"t_task.showhelper_information_open\\\" class=\\\"fa fa-info\\\" title=\\\"Zeige weitere Informationen\\\" style=\\\"padding:0.1em 0.5em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                                  <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                    {{t_task.de_DE?.taskname}}\\n                                  </p>\\n                                  <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                              </div>\\n\\n                              <div *ngIf=\\\"t_task.showhelper_edit_open\\\" class=\\\"cf-ad-manage-tasks-task-edit\\\">\\n\\n                                  <edittask-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [taskdata]=\\\"t_task\\\" [locationsdata]=\\\"getLocations()\\\" [tasktypesdata]=\\\"getTaskTypes()\\\" (taskdataoutput)=\\\"getTasks()[i]=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></edittask-component>\\n\\n                                  <button (click)=\\\"upsertTask(t_task)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">Speichere jetzt die \\u00C4nderungen</button>\\n                                  <div style=\\\"width:100%;text-align:center;\\\">\\n                                    <div *ngIf=\\\"t_task.upsert_successful\\\" style=\\\"padding: 5px;\\\">Aufgabe erfolgreich ge\\u00E4ndert!</div>\\n                                  </div>\\n                              </div>\\n\\n                              <div [hidden]=\\\"!t_task.showhelper_information_open\\\" class=\\\"cf-ad-manage-tasks-task-show-information\\\">\\n                                  <br>\\n                                  <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\">Nutze diesen QR Code, um den Usern die M\\u00F6glichkeit zu geben die Aufgabe direkt durch Scannen des QR Codes zu l\\u00F6sen:</label>\\n                                  <br>\\n                                  <div style=\\\"width:200px;height:250px;margin:0!important;margin-right:auto!important;margin-left:auto!important;margin-top:0.3em!important;margin-bottom:0.5em!important;\\\">\\n                                      <canvas [id]=\\\"'qrcode-task-img'+t_task.task_id\\\" height=\\\"200\\\" width=\\\"200\\\"></canvas>\\n                                  </div>\\n                              </div>\\n\\n                          </div>\\n\\n                  </div>\\n\\n                  <!-- Adding Tasks -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge eine neue Aufgabe hinzu</p>\\n\\n                      <edittask-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [taskdata]=\\\"new_task\\\" [locationsdata]=\\\"getLocations()\\\" [tasktypesdata]=\\\"getTaskTypes()\\\" (taskdataoutput)=\\\"new_task=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></edittask-component>\\n\\n                      <button (click)=\\\"upsertTask(new_task)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge die Aufgabe jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewTaskSuccessful\\\" style=\\\"padding: 5px;\\\">Aufgabe erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-manage-badges\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_badges=show_cm_badges?false:true;\\\">Abzeichen</p>\\n\\n\\n\\n              <div [hidden]=\\\"!show_cm_badges\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Editing Badges -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Organisiere bestehende Abzeichen</p>\\n\\n                      <div *ngFor=\\\"let t_badge of getBadges(); let i = index;\\\" class=\\\"cf-ad-manage-badges-badge\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                          <div  class=\\\"cf-ad-manage-badges-badge-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                              <button (click)=\\\"setBadgeDeleteBadge(t_badge.badge_id)\\\" class=\\\"delete-badge-button fa fa-minus\\\" title=\\\"L\\u00F6sche dieses Abzeichen\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"setBadgeActiveInactive(getBadges()[i])\\\" [class.active]=\\\"t_badge.is_active=='1'\\\" [class.inactive]=\\\"t_badge.is_active!='1'\\\" class=\\\"set-badge-active-inactive-button fa fa-circle\\\" title=\\\"Setze dieses Abzeichen aktiv/inaktiv\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"t_badge.showhelper_edit_open = t_badge.showhelper_edit_open?false:true;\\\" [class.button-pressed]=\\\"t_badge.showhelper_edit_open\\\" class=\\\"fa fa-edit\\\" title=\\\"Bearbeite das Abzeichen\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                  {{t_badge.de_DE?.badgename}}\\n                              </p>\\n                              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                          </div>\\n                          <div *ngIf=\\\"t_badge.showhelper_edit_open\\\" class=\\\"cf-ad-manage-badges-badge-edit-description\\\">\\n\\n                              <editbadge-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [badgedata]=\\\"t_badge\\\" [alltasksdata]=\\\"getTasks()\\\" (badgedataoutput)=\\\"getBadges()[i]=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editbadge-component>\\n\\n                              <button (click)=\\\"upsertBadge(t_badge)\\\" class=\\\"edit-badge-button button\\\" style=\\\"margin-top:2em;\\\">Speichere jetzt die \\u00C4nderungen</button>\\n                              <div style=\\\"width:100%;text-align:center;\\\">\\n                                <div *ngIf=\\\"t_badge.upsert_successful\\\" style=\\\"padding: 5px;\\\">Abzeichen erfolgreich ge\\u00E4ndert!</div>\\n                              </div>\\n                          </div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <!-- Adding Badges -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge ein neues Abzeichen hinzu</p>\\n\\n                      <editbadge-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [badgedata]=\\\"new_badge\\\" [alltasksdata]=\\\"getTasks()\\\" (badgedataoutput)=\\\"new_badge=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editbadge-component>\\n\\n                      <button (click)=\\\"upsertBadge(new_badge)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge das Abzeichen jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewBadgeSuccessful\\\" style=\\\"padding: 5px;\\\">Abzeichen erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-manage-quests\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_quests=show_cm_quests?false:true;\\\">Quests</p>\\n\\n              <div [hidden]=\\\"!show_cm_quests\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Editing Quests -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Organisiere bestehende Quests</p>\\n\\n                      <div *ngFor=\\\"let t_quest of getQuests(); let i = index;\\\" class=\\\"cf-ad-manage-quests-quest\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                          <div  class=\\\"cf-ad-manage-quests-quest-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                              <button (click)=\\\"setQuestDeleteQuest(t_quest.quest_id)\\\" class=\\\"delete-quest-button fa fa-minus\\\"  title=\\\"L\\u00F6sche diesen Quest\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"setQuestActiveInactive(getQuests()[i])\\\" [class.active]=\\\"t_quest.is_active=='1'\\\" [class.inactive]=\\\"t_quest.is_active!='1'\\\" class=\\\"set-quest-active-inactive-button fa fa-circle\\\" title=\\\"Setze diesen Quest aktiv/inaktiv\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"t_quest.showhelper_edit_open = t_quest.showhelper_edit_open?false:true;\\\" [class.button-pressed]=\\\"t_quest.showhelper_edit_open\\\" class=\\\"fa fa-edit\\\" title=\\\"Bearbeite den Quest\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                  {{t_quest.de_DE?.questname}}\\n                              </p>\\n                              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                          </div>\\n                          <div *ngIf=\\\"t_quest.showhelper_edit_open\\\" class=\\\"cf-ad-manage-quests-quest-edit-description\\\">\\n\\n                              <editquest-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [questdata]=\\\"t_quest\\\" [allquestsdata]=\\\"getQuests()\\\" [alltasksdata]=\\\"getTasks()\\\" [locationsdata]=\\\"getLocations()\\\" (questdataoutput)=\\\"getQuests()[i]=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editquest-component>\\n\\n                              <button (click)=\\\"upsertQuest(t_quest)\\\" class=\\\"edit-quest-button button\\\" style=\\\"margin-top:2em;\\\">Speichere jetzt die \\u00C4nderungen</button>\\n                              <div style=\\\"width:100%;text-align:center;\\\">\\n                                <div *ngIf=\\\"t_quest.upsert_successful\\\" style=\\\"padding: 5px;\\\">Quest erfolgreich ge\\u00E4ndert!</div>\\n                              </div>\\n\\n                          </div>\\n                      </div>\\n\\n\\n                  </div>\\n\\n                  <!-- Adding Quests -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge einen neuen Quest hinzu</p>\\n\\n                      <editquest-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [questdata]=\\\"new_quest\\\" [allquestsdata]=\\\"getQuests()\\\" [alltasksdata]=\\\"getTasks()\\\" [locationsdata]=\\\"getLocations()\\\" (questdataoutput)=\\\"new_quest=$event;\\\" (reload)=\\\"reload.emit(true);\\\"></editquest-component>\\n\\n                      <button (click)=\\\"upsertQuest(new_quest)\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge den neuen Quest jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewQuestSuccessful\\\" style=\\\"padding: 5px;\\\">Quest erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n\\n          <div class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_locations=show_cm_locations?false:true;\\\">Orte</p>\\n\\n\\n\\n              <div [hidden]=\\\"!show_cm_locations\\\" style=\\\"width:100%;\\\">\\n\\n                  <!-- Deleting/Getting QR Code Location -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Orte</p>\\n\\n                      <div *ngFor=\\\"let t_location of getLocations()\\\" class=\\\"cf-ad-manage-locations-setted-location\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                          <div  class=\\\"cf-ad-manage-locations-setted-location-head\\\" style=\\\"cursor:pointer;background:rgb(230,230,230);\\\">\\n                              <button (click)=\\\"setLocationDeleteLocation(t_location.location_id);\\\" class=\\\"delete-location-button fa fa-minus\\\" title=\\\"L\\u00F6sche diesen Ort\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <button (click)=\\\"t_location.showhelper_information_open = t_location.showhelper_information_open?false:true; t_location.showhelper_information_open?showCanvasForLocation(t_location.location_id):'';\\\" [class.button-pressed]=\\\"t_location.showhelper_information_open\\\" class=\\\"fa fa-info\\\" title=\\\"Zeige weitere Informationen bzgl. diesem Ort\\\" style=\\\"padding:0.1em 0.5em;font-size:1.3em;float:right;cursor:pointer;margin-left:0.5em;\\\"></button>\\n                              <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                  {{t_location.locationname}}<br>\\n                                  {{\\\"Lat: \\\"+t_location.geo_lati}}<br>\\n                                  {{\\\"Long: \\\"+t_location.geo_long}}<br>\\n                                  {{\\\"Radius: \\\"+t_location.geo_radius+\\\"m\\\"}}\\n                              </p>\\n                              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                              <div [hidden]=\\\"!t_location.showhelper_information_open\\\" class=\\\"cf-ad-manage-locations-setted-location-description\\\">\\n\\n                                  <div style=\\\"width:200px;height:250px;margin:0!important;margin-right:auto!important;margin-left:auto!important;margin-top:1em!important;margin-bottom:1em!important;\\\">\\n                                      <canvas [id]=\\\"'qrcode-location-img'+t_location.location_id\\\" height=\\\"200\\\" width=\\\"200\\\"></canvas>\\n                                  </div>\\n\\n                              </div>\\n                          </div>\\n                      </div>\\n\\n\\n\\n                  </div>\\n\\n                  <!-- Adding Location -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge neuen Ort hinzu</p>\\n\\n                      <!-- Choose Locationname[german] -->\\n                      <hr class=\\\"hrForAdministration\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Ortsname<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.de_DE.locationname\\\" type=\\\"text\\\" placeholder=\\\"Ortsname\\\" style=\\\"width:100%;\\\">\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <!-- Choose Latitude -->\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Breitengrad [Beispiel: 10.1435]<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.geo_lati\\\" type=\\\"text\\\" placeholder=\\\"Breitengrad\\\" style=\\\"width:100%;\\\">\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <!-- Choose Longitude -->\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>L\\u00E4ngengrad [Beispiel: 10.1435]<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.geo_long\\\" type=\\\"text\\\" placeholder=\\\"L\\u00E4ngengrad\\\" style=\\\"width:100%;\\\">\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <!-- Choose Radius -->\\n                      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Radius[meter]<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"new_location.geo_radius\\\" type=\\\"text\\\" placeholder=\\\"Radius[meter]\\\" style=\\\"width:100%;\\\">\\n\\n                      <button (click)=\\\"upsertLocation(new_location);\\\" class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge den neuen Ort jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"upsertNewLocationSuccessful\\\" style=\\\"padding: 5px;\\\">Ort erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-reverse-faculty-score\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_cm_reset_score=show_cm_reset_score?false:true;\\\">Setze Fakult\\u00E4tshighscore zur\\u00FCck</p>\\n\\n              <div [hidden]=\\\"!show_cm_reset_score\\\" style=\\\"width:100%;max-width:350px;width:100%;margin-left:auto;margin-right:auto;\\\">\\n\\n                  <button (click)=\\\"resetFacultyScore();\\\" class=\\\"button\\\" style=\\\"margin-top:2em;margin-bottom:2em;\\\">Setze den Fakult\\u00E4tshighscore jetzt zur\\u00FCck</button>\\n\\n              </div>\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n  </div>\\n\\n  <div class=\\\"row-user-management row\\\">\\n\\n      <p class=\\\"overall-headline\\\" style=\\\"width:100%;text-align:center;\\\">USER-MANAGEMENT</p>\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div *ngIf=\\\"user.user_type_id=='2'\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_um_add_admins=show_um_add_admins?false:true;\\\">F\\u00FCge Administratoren hinzu</p>\\n\\n              <div [hidden]=\\\"!show_um_add_admins\\\" style=\\\"width:100%;\\\">\\n\\n\\n                  <!-- Deleting/Editing Administrators -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-1 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">Admins</p>\\n\\n                        <div *ngFor=\\\"let t_admin of getAdmins();\\\" class=\\\"cf-ad-admin\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                            <button (click)=\\\"deleteAdmin(t_admin.user_id)\\\" class=\\\"degrade-admin-button fa fa-minus\\\" title=\\\"L\\u00F6sche diesen Admin\\\" style=\\\"padding:0.1em 0.2em;font-size:1.3em;float:right;cursor:pointer;\\\"></button>\\n                            <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                {{t_admin.username}}\\n                            </p>\\n                            <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                        </div>\\n\\n                        <div *ngFor=\\\"let t_admin of getSuperadmins();\\\" class=\\\"cf-ad-admin\\\" style=\\\"width: 100%;color: #fff;margin-bottom:0.1em;\\\">\\n                            <p style=\\\"margin:0;padding:0.3em;font-size:1.2em;font-weight:bold;\\\">\\n                                {{'Superadmin: '+t_admin.username}}\\n                            </p>\\n                            <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n                        </div>\\n\\n                  </div>\\n\\n                  <!-- Adding Administrators -->\\n                  <div class=\\\"col-xs-12 col-sm-4 col-sm-offset-2 adm-frame\\\">\\n\\n                      <p class=\\\"headline\\\">F\\u00FCge einen neuen Admin hinzu</p>\\n\\n                      <div style=\\\"width:100%;\\\">\\n                          <select [(ngModel)]=\\\"addAdminId\\\"  style=\\\"width:100%;\\\">\\n                            <option value='-1'>--None--</option>\\n                            <option *ngFor=\\\"let t_user of getAllUsers();\\\" [hidden]=\\\"t_user.user_type_id != 0\\\" value='{{t_user.user_id}}'>{{t_user.username}}</option>\\n                          </select>\\n                      </div>\\n\\n                      <button (click)=\\\"setNewAdmin()\\\"  class=\\\"button\\\" style=\\\"margin-top:2em;\\\">F\\u00FCge den ausgew\\u00E4hlten Admin jetzt hinzu</button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"addedNewAdminSuccessful\\\" style=\\\"padding: 5px;\\\">Admin erfolgreich hinzugef\\u00FCgt!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n          <div id=\\\"cf-ad-send-mail-to-users\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline headline-as-button\\\" (click)=\\\"show_um_send_mail=show_um_send_mail?false:true;\\\">Sende eine Mail an alle User</p>\\n\\n              <div [hidden]=\\\"!show_um_send_mail\\\" style=\\\"width:100%;\\\">\\n\\n                  <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-3 adm-frame\\\">\\n\\n                      <hr class=\\\"hrForAdministration\\\">\\n                      <label for=\\\"input-email-headline\\\" style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Betreff<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"send_email.headline\\\" type=\\\"text\\\" placeholder=\\\"Betreff\\\" style=\\\"width:100%;\\\"/>\\n                      <hr class=\\\"hrForAdministration\\\">\\n\\n                      <label for=\\\"textarea-email-message\\\" style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Nachricht<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <textarea [(ngModel)]=\\\"send_email.content\\\" placeholder=\\\"Nachricht\\\" style=\\\"width:100%;height:8em;resize:none;\\\"></textarea>\\n\\n                      <button (click)=\\\"sendEmailMessageToAllUsers()\\\" class=\\\"button\\\">\\n                        <span [hidden]=\\\"loading_sendemails\\\">Sende jetzt die Nachricht(en) an alle User</span>\\n                        <span [hidden]=\\\"!loading_sendemails\\\"><i class=\\\"fa fa-spinner fa-pulse\\\"></i></span>\\n                      </button>\\n                      <div style=\\\"width:100%;text-align:center;\\\">\\n                        <div *ngIf=\\\"sendEmailToAllUsersSuccessful\\\" style=\\\"padding: 5px;\\\">Emails erfolgreich gesendet!</div>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], AdministrationComponent);\n    return AdministrationComponent;\n}());\nexports.AdministrationComponent = AdministrationComponent;\n//# sourceMappingURL=administration.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/administration.component.js\n ** module id = 70\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar BadgeComponent = (function () {\n    function BadgeComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n    }\n    BadgeComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n        });\n        if (typeof this.badge_id === 'string' && this.badge_id.length != 0)\n            this.lService.loadSpecificContent('badge&badge_id=' + this.badge_id);\n    };\n    BadgeComponent.prototype.ngOnChanges = function (changes) {\n        for (var propName in changes) {\n            var changedProp = changes[propName];\n            var from = changedProp.previousValue;\n            var to = changedProp.currentValue;\n            if (propName == \"badge_id\" && from != to) {\n                this.lService.loadSpecificContent('badge&badge_id=' + to);\n            }\n        }\n    };\n    BadgeComponent.prototype.getBadgeData = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['BADGE_DATA'] !== 'undefined' ? this.specificcontent['BADGE_DATA'] : {\n            badgename: \"\",\n            description_long: \"\"\n        };\n    };\n    BadgeComponent.prototype.getUserBadge = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_BADGE'] !== 'undefined' ? this.specificcontent['USER_BADGE'] : {\n            completed: '0'\n        };\n    };\n    BadgeComponent.prototype.getProgressTasks = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PROGRESS_TASKS'] !== 'undefined' ? this.specificcontent['PROGRESS_TASKS'] : [];\n    };\n    BadgeComponent.prototype.navigateToQuest = function (quest_id) {\n        this.router.navigate(['/l/quest', quest_id]);\n    };\n    BadgeComponent.prototype.navigateToTask = function (task_id) {\n        this.router.navigate(['/l/task', task_id]);\n    };\n    BadgeComponent.prototype.navigateToBadge = function (badge_id) {\n        this.router.navigate(['/l/badge', badge_id]);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], BadgeComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], BadgeComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], BadgeComponent.prototype, \"badge_id\", void 0);\n    BadgeComponent = __decorate([\n        core_1.Component({\n            selector: 'badge-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <!-- Overview of badge -->\\n          <div id=\\\"cf-ba-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abzeichen {{getBadgeData().badgename}}</p>\\n\\n              <div class=\\\"depend-on-device-fifty-to-hundred-percentage-width depend-on-device-left-to-none-float\\\" style=\\\"padding:0 1em;\\\">\\n                  <div id=\\\"cf-ba-overview-badge-pic\\\" style=\\\"width:40%;margin-left:auto;margin-right:auto;\\\">\\n                      <div style='position:relative;'>\\n                          <img style='position:relative;top:0;left:0;width:100%;' src='{{lService.getPictureLink(getBadgeData().picture_id)}}'>\\n                          <div class='fa'\\n                            [class.fa-check-square]=\\\"getUserBadge().completed=='1'\\\"\\n                            [class.fa-minus-square]=\\\"getUserBadge().completed=='0'\\\" style='position:absolute;right:0;margin:0.3em;font-size:2em!important;color:white;'></div>\\n                      </div>\\n                  </div>\\n\\n                  <p id=\\\"cf-ba-overview-badge-description\\\" style=\\\"text-align:justify;\\\" [innerHTML]=\\\"getBadgeData().description_long\\\"></p>\\n              </div>\\n              <div class=\\\"depend-on-device-fifty-to-hundred-percentage-width depend-on-device-left-to-none-float\\\" style=\\\"padding:0 1em;\\\">\\n                  <div style=\\\"text-align:center;margin-top:0.3em;margin-bottom:0.5em;\\\">Ben\\u00F6tigte Aufgaben um Abzeichen zu sammeln</div>\\n                  <div *ngFor=\\\"let t_task of getProgressTasks()\\\" class='cf-ba-overview-task' style='overflow:hidden;cursor:pointer;font-weight:bold;font-size:1em;color:rgb(255,255,255);border:0px solid rgb(0,0,0);border-radius:4px;padding:0.2em 0.3em;background:rgb(50,50,50);margin-top:2px;margin-bottom:2px;' (click)=\\\"navigateToTask(t_task.task_id)\\\">\\n                    {{t_task.taskname}} <br />\\n                    <button class='fa'\\n                      [class.fa-check-square]=\\\"t_task.completed=='1'\\\"\\n                      [class.fa-minus-square]=\\\"t_task.completed=='0'\\\"\\n                      [style.color]=\\\"t_task.completed=='1'?'rgb(0,150,0)':'rgb(150,0,0)'\\\" style='padding:0;font-size:1em;border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;\\\"></div>\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], BadgeComponent);\n    return BadgeComponent;\n}());\nexports.BadgeComponent = BadgeComponent;\n//# sourceMappingURL=badge.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/badge.component.js\n ** module id = 71\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar EditBadgeComponent = (function () {\n    function EditBadgeComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.badgedataoutput = new core_1.EventEmitter();\n        this.reload = new core_1.EventEmitter();\n    }\n    EditBadgeComponent.prototype.ngOnInit = function () {\n        if (typeof this.badgedata.badge_id === 'undefined' || this.badgedata.badge_id == -1) {\n            this.badgedata = {\n                de_DE: {\n                    badgename: \"\",\n                    description_long: \"\",\n                    solved_description: \"\"\n                },\n                badge_id: -1,\n                is_active: \"1\",\n                json_task_ids: [],\n                picture_id: -1\n            };\n        }\n    };\n    EditBadgeComponent.prototype.getUniversalContentPictures = function () {\n        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n    };\n    EditBadgeComponent.prototype.updateBadgeData = function () {\n        if (typeof this.badgedata !== 'undefined')\n            this.badgedataoutput.emit(this.badgedata);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditBadgeComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditBadgeComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditBadgeComponent.prototype, \"badgedata\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditBadgeComponent.prototype, \"alltasksdata\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], EditBadgeComponent.prototype, \"badgedataoutput\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], EditBadgeComponent.prototype, \"reload\", void 0);\n    EditBadgeComponent = __decorate([\n        core_1.Component({\n            selector: 'editbadge-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div style=\\\"margin:0;padding:0;\\\" (focusout)=\\\"updateBadgeData()\\\" (mouseleave)=\\\"updateBadgeData()\\\">\\n\\n    <!-- badgename, Description of badge -->\\n    <div>\\n        <div style=\\\"float:left;width:100%;\\\">\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Abzeichenname<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <input [(ngModel)]=\\\"badgedata.de_DE.badgename\\\" type=\\\"text\\\" placeholder=\\\"Abzeichenname\\\" style=\\\"width:100%;\\\"/>\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Beschreibung des Abzeichens<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <htmleditor-component [value]=\\\"badgedata.de_DE.description_long\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"badgedata.de_DE.description_long=$event;updateBadgeData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>Meldung, welche der User bei erfolgreichem L\\u00F6sen erh\\u00E4lt<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <htmleditor-component [value]=\\\"badgedata.de_DE.solved_description\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"badgedata.de_DE.solved_description=$event;updateBadgeData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n        </div>\\n        <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n    </div>\\n\\n    <!-- To solve tasks for badge -->\\n    <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Zu l\\u00F6sende Aufgaben, um Abzeichen zu sammeln<span style=\\\"color:#e9266d\\\">*</span></label>\\n    <br>\\n    <selecttask-component [chooseabletaskarray]=\\\"alltasksdata\\\" [selectedtaskarray]=\\\"badgedata.json_task_ids\\\" (taskarray)=\\\"badgedata.json_task_ids=$event;\\\"></selecttask-component>\\n    <hr class=\\\"hrForAdministration\\\">\\n\\n    <!-- badge pic -->\\n    <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">5.) </span>Abzeichenbild<span style=\\\"color:#e9266d\\\">*</span></label>\\n    <br>\\n    <div >\\n        <div style=\\\"float:left;width:50%;margin-top:10px;\\\">\\n            <select [(ngModel)]=\\\"badgedata.picture_id\\\" style=\\\"width:100%;\\\">\\n                <option *ngFor=\\\"let t_picture of getUniversalContentPictures();\\\" value='{{t_picture.picture_id}}'>{{t_picture.picturename}}</option>\\n            </select>\\n        </div>\\n        <div style=\\\"float:left;width:50%;text-align:right;\\\">\\n            <uploadpicture-component (reload)=\\\"reload.emit(true);\\\"></uploadpicture-component>\\n        </div>\\n        <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n        <div [hidden]=\\\"badgedata.picture_id==-1\\\" style=\\\"text-align:center;\\\">\\n            <label style=\\\"width:100%;text-align:center;\\\">Abzeichen Vorschau</label>\\n            <br>\\n            <img style='width:30%;' src='{{lService.getPictureLink(badgedata.picture_id)}}'>\\n        </div>\\n    </div>\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], EditBadgeComponent);\n    return EditBadgeComponent;\n}());\nexports.EditBadgeComponent = EditBadgeComponent;\n//# sourceMappingURL=editbadge.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/editbadge.component.js\n ** module id = 72\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar EditQuestComponent = (function () {\n    function EditQuestComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.questdataoutput = new core_1.EventEmitter();\n        this.reload = new core_1.EventEmitter();\n        this.LevelsLength = 1;\n    }\n    EditQuestComponent.prototype.ngOnInit = function () {\n        if (typeof this.questdata.quest_id === 'undefined' || this.questdata.quest_id == -1) {\n            this.questdata = {\n                quest_id: -1,\n                de_DE: {\n                    questname: \"\",\n                    solved_description: \"\"\n                },\n                is_active: \"1\",\n                json_pre_quest_ids: [],\n                json_quest_task_ids: [[]],\n                location_id: -1,\n                is_starter_quest: \"0\",\n                score_rule: \"10\"\n            };\n        }\n        if (this.questdata.location_id == null) {\n            this.questdata.location_id = -1;\n        }\n        this.LevelsLength = this.questdata.json_quest_task_ids.length;\n    };\n    EditQuestComponent.prototype.getUniversalContentPictures = function () {\n        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n    };\n    EditQuestComponent.prototype.changeQuestTaskLevelLength = function (event) {\n        var t_value = parseInt(event.target.value);\n        var t_diff = t_value - this.questdata.json_quest_task_ids.length;\n        if (this.questdata.json_quest_task_ids.length > t_value) {\n            for (var i = this.questdata.json_quest_task_ids.length; i > 0; i--) {\n                if ((i - 1) >= t_value) {\n                    this.questdata.json_quest_task_ids.splice(i - 1, 1);\n                }\n            }\n        }\n        else if (this.questdata.json_quest_task_ids.length < t_value) {\n            for (var i = 0; i < t_diff; i++) {\n                this.questdata.json_quest_task_ids.push([]);\n            }\n        }\n    };\n    EditQuestComponent.prototype.updateQuestData = function () {\n        if (typeof this.questdata !== 'undefined')\n            this.questdataoutput.emit(this.questdata);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"questdata\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"allquestsdata\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"alltasksdata\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"locationsdata\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"questdataoutput\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], EditQuestComponent.prototype, \"reload\", void 0);\n    EditQuestComponent = __decorate([\n        core_1.Component({\n            selector: 'editquest-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n      <div style=\\\"margin:0;padding:0;\\\" (focusout)=\\\"updateQuestData()\\\" (mouseleave)=\\\"updateQuestData()\\\">\\n\\n            <!-- questname -->\\n            <hr class=\\\"hrForAdministration\\\">\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Questname<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <input [(ngModel)]=\\\"questdata.de_DE.questname\\\" type=\\\"text\\\"  placeholder=\\\"Questname\\\" style=\\\"width:100%;\\\">\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- solved_description -->\\n            <label id=\\\"label-quest-solved-description\\\" style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Meldung, welche der User bei erfolgreichem L\\u00F6sen erh\\u00E4lt<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <htmleditor-component [value]=\\\"questdata.de_DE.solved_description\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"questdata.de_DE.solved_description=$event;updateQuestData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- Location of quest -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>Fundort des Quests</label>\\n            <br>\\n            <select [(ngModel)]=\\\"questdata.location_id\\\" style=\\\"width:100%;\\\">\\n                <option value='-1' selected=\\\"selected\\\">--None--</option>\\n                <option *ngFor=\\\"let t_location of locationsdata;\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n            </select>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- pre quests -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Vorquests, um Quest zu erhalten und l\\u00F6sen zu k\\u00F6nnen</label>\\n            <br>\\n            <selectquest-component [chooseablequestarray]=\\\"allquestsdata\\\" [selectedquestarray]=\\\"questdata.json_pre_quest_ids\\\" (questarray)=\\\"questdata.json_pre_quest_ids=$event;updateQuestData();\\\"></selectquest-component>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- levels with to solve tasks -->\\n            <div >\\n                <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">5.) </span>Anzahl der Aufgabenstufen und Aufgaben f\\u00FCr jede Stufe<span style=\\\"color:#e9266d\\\">*</span></label>\\n                <br>\\n                <select [(ngModel)]=\\\"LevelsLength\\\" (change)=\\\"changeQuestTaskLevelLength($event)\\\" style=\\\"width:100%;\\\">\\n                    <option value=\\\"1\\\">1 Level</option>\\n                    <option value=\\\"2\\\">2 Levels</option>\\n                    <option value=\\\"3\\\">3 Levels</option>\\n                    <option value=\\\"4\\\">4 Levels</option>\\n                    <option value=\\\"5\\\">5 Levels</option>\\n                    <option value=\\\"6\\\">6 Levels</option>\\n                    <option value=\\\"7\\\">7 Levels</option>\\n                    <option value=\\\"8\\\">8 Levels</option>\\n                    <option value=\\\"9\\\">9 Levels</option>\\n                    <option value=\\\"10\\\">10 Levels</option>\\n                </select>\\n                <div>\\n\\n                    <div *ngFor=\\\"let t_level of questdata.json_quest_task_ids;let i = index;\\\" class=\\\"add-quest-tasks-level-1\\\" style=\\\"width:calc(100% - 10px);border:1px solid rgb(200,200,200);margin-left:10px;margin-bottom:5px;padding:3px;\\\">\\n                        <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">{{i+1}}.) </span>Aufgaben f\\u00FCr Stufe {{i+1}}</label>\\n                        <selecttask-component [chooseabletaskarray]=\\\"alltasksdata\\\" [selectedtaskarray]=\\\"questdata.json_quest_task_ids[i]\\\" (taskarray)=\\\"questdata.json_quest_task_ids[i]=$event;updateQuestData();\\\"></selecttask-component>\\n                    </div>\\n\\n                </div>\\n            </div>\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- score rule -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">6.) </span>Exp. f\\u00FCr User bei Abschluss des Quests<span style=\\\"color:#e9266d\\\">*</span></label>\\n            <br>\\n            <input [(ngModel)]=\\\"questdata.score_rule\\\" type=\\\"text\\\" style=\\\"width:100%;padding-left:0.3em;\\\">\\n            <hr class=\\\"hrForAdministration\\\">\\n\\n            <!-- is starter quest? -->\\n            <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">7.) </span>Ist der Quest schon bei Spielbeginn dem User bekannt</label>\\n            <br>\\n            <input [checked]=\\\"questdata.is_starter_quest=='1'\\\" (click)=\\\"questdata.is_starter_quest=='1'?questdata.is_starter_quest='0':questdata.is_starter_quest='1';\\\" type=\\\"checkbox\\\" style=\\\"width:25px;margin-left:48%;\\\" />\\n\\n        </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], EditQuestComponent);\n    return EditQuestComponent;\n}());\nexports.EditQuestComponent = EditQuestComponent;\n//# sourceMappingURL=editquest.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/editquest.component.js\n ** module id = 73\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar EditTaskComponent = (function () {\n    function EditTaskComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.taskdataoutput = new core_1.EventEmitter();\n        this.reload = new core_1.EventEmitter();\n    }\n    EditTaskComponent.prototype.ngOnInit = function () {\n        console.log(\"EditTask Init\");\n        if (typeof this.taskdata.task_id === 'undefined' || this.taskdata.task_id == -1) {\n            this.taskdata = {\n                task_id: -1,\n                task_type_id: 1,\n                json_task_data: {},\n                de_DE: {\n                    taskname: \"\",\n                    description_long: \"\",\n                    solved_description: \"\"\n                },\n                is_task_active: \"1\",\n                score_rule: \"10\",\n                location_id: -1\n            };\n            this.changeTaskType();\n        }\n        if (typeof this.taskdata.location_id !== 'undefined' && this.taskdata.location_id == null)\n            this.taskdata.location_id = -1;\n        console.log(this.taskdata.de_DE);\n        console.log(this.taskdata);\n    };\n    EditTaskComponent.prototype.getUniversalContentPictures = function () {\n        return !$.isEmptyObject(this.universalcontent) && typeof this.universalcontent['_Pictures'] !== 'undefined' ? this.universalcontent['_Pictures'] : [];\n    };\n    EditTaskComponent.prototype.changeTaskType = function () {\n        if (this.taskdata.task_type_id == 1) {\n            this.taskdata.json_task_data = { de_DE: { a1: \"\", a2: \"\", a3: \"\", a4: \"\", question: \"\" } };\n        }\n        else if (this.taskdata.task_type_id == 2) {\n            this.taskdata.json_task_data = { loc: 1 };\n        }\n        else if (this.taskdata.task_type_id == 3) {\n            this.taskdata.json_task_data = { isbn: \"\" };\n        }\n        else if (this.taskdata.task_type_id == 4) {\n            this.taskdata.json_task_data = { de_DE: { s1: \"\", s2: \"\", s3: \"\" } };\n        }\n        else if (this.taskdata.task_type_id == 5) {\n            this.taskdata.json_task_data = { de_DE: { answer: \"\", text: \"\" } };\n        }\n        else if (this.taskdata.task_type_id == 6) {\n            this.taskdata.json_task_data = {};\n        }\n    };\n    EditTaskComponent.prototype.updateTaskData = function () {\n        if (typeof this.taskdata !== 'undefined')\n            this.taskdataoutput.emit(this.taskdata);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditTaskComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditTaskComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditTaskComponent.prototype, \"taskdata\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditTaskComponent.prototype, \"locationsdata\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], EditTaskComponent.prototype, \"tasktypesdata\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], EditTaskComponent.prototype, \"taskdataoutput\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], EditTaskComponent.prototype, \"reload\", void 0);\n    EditTaskComponent = __decorate([\n        core_1.Component({\n            selector: 'edittask-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n    <div style=\\\"margin:0;padding:0;\\\" (focusout)=\\\"updateTaskData()\\\" (mouseleave)=\\\"updateTaskData()\\\">\\n\\n      <!-- taskname, Description of task -->\\n      <div>\\n          <div  style=\\\"float:left;width:100%;\\\">\\n              <hr class=\\\"hrForAdministration\\\">\\n              <label  style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">1.) </span>Name der Aufgabe<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <input [(ngModel)]=\\\"taskdata.de_DE.taskname\\\" type=\\\"text\\\" name=\\\"task-name\\\" placeholder=\\\"Name der Aufgabe\\\" style=\\\"width:100%;\\\"/>\\n              <hr class=\\\"hrForAdministration\\\">\\n              <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">2.) </span>Beschreibung der Aufgabe<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <htmleditor-component [value]=\\\"taskdata.de_DE.description_long\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.de_DE.description_long=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n              <hr class=\\\"hrForAdministration\\\">\\n              <label  style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">3.) </span>Meldung, welche der User bei erfolgreichem L\\u00F6sen erh\\u00E4lt<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <htmleditor-component [value]=\\\"taskdata.de_DE.solved_description\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.de_DE.solved_description=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n              <hr class=\\\"hrForAdministration\\\">\\n          </div>\\n          <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n      </div>\\n\\n      <!-- Location of task -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">4.) </span>Fundort der Aufgabe</label>\\n      <br>\\n      <select [(ngModel)]=\\\"taskdata.location_id\\\"  style=\\\"width:100%;\\\">\\n        <option value='-1' selected=\\\"selected\\\">--None--</option>\\n        <option *ngFor=\\\"let t_location of locationsdata;\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n      </select>\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <!-- score_rule -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">5.) </span>Exp., welche vom User gesammelt werden kann<span style=\\\"color:#e9266d\\\">*</span></label>\\n      <br>\\n      <input [(ngModel)]=\\\"taskdata.score_rule\\\" type=\\\"text\\\" style=\\\"width:100%;padding-left:0.3em;\\\">\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <!-- task type -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">6.) </span>W\\u00E4hle den Aufgabentyp (Dieser bestimmt die nun folgenden Eingaben)<span style=\\\"color:#e9266d\\\">*</span></label>\\n      <br>\\n      <select [(ngModel)]=\\\"taskdata.task_type_id\\\" (change)=\\\"changeTaskType()\\\" style=\\\"width:100%;\\\">\\n        <option *ngFor=\\\"let t_task_type of tasktypesdata;\\\" value='{{t_task_type.task_type_id}}'>-- {{t_task_type.task_type_name}} --</option>\\n      </select>\\n      <hr class=\\\"hrForAdministration\\\">\\n\\n      <!-- Specification of task depend on task type -->\\n      <label style=\\\"width:100%;text-align:center;padding-left:0.5em;\\\"><span class=\\\"stepHelper\\\">7.) </span>Aufgabenspezifikation [abh\\u00E4ngig von dem Aufgabetyp]<span style=\\\"color:#e9266d\\\">*</span></label>\\n      <br>\\n      <div style=\\\"width:100%;\\\">\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==1\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"float:left;width:100%;\\\">\\n                  <div style=\\\"width:100%;\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Frage<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.question\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.question=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.2.) </span>Richtige Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a1\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a1=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.3.) </span>1. Falsche Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a2\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a2=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.4.) </span>2. Falsche Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a3\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a3=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.5.) </span>3. Falsche Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.a4\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.a4=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==2\\\" style=\\\"width:100%;\\\">\\n              <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Ort<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <select [(ngModel)]=\\\"taskdata.json_task_data.loc\\\" style=\\\"width:100%;\\\">\\n                  <option value='-1' selected=\\\"selected\\\">--None--</option>\\n                  <option *ngFor=\\\"let t_location of locationsdata;\\\" value='{{t_location.location_id}}'>-- {{t_location.locationname}} --</option>\\n              </select>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==3\\\" style=\\\"width:100%;\\\">\\n              <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>ISBN<span style=\\\"color:#e9266d\\\">*</span></label>\\n              <br>\\n              <input [(ngModel)]=\\\"taskdata.json_task_data.isbn\\\" type=\\\"text\\\" placeholder=\\\"ISBN\\\" style=\\\"width:100%;\\\">\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==4\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"float:left;width:100%;\\\">\\n                  <div style=\\\"width:100%;\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Quelle 1 (gr\\u00FCn)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.s1\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.s1=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.2.) </span>Quelle 2 (gelb)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.s2\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.s2=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.3.) </span>Quelle 3 (rot)<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <htmleditor-component [value]=\\\"taskdata.json_task_data.de_DE.s3\\\" [pictures]=\\\"getUniversalContentPictures()\\\" (htmlcontent)=\\\"taskdata.json_task_data.de_DE.s3=$event;updateTaskData();\\\" (reload)=\\\"reload.emit(true);\\\"></htmleditor-component>\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==5\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"float:left;width:100%;\\\">\\n                  <div style=\\\"width:100%;\\\">\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Text mit L\\u00FCcke<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"taskdata.json_task_data.de_DE.text\\\" type=\\\"text\\\" class=\\\"input-add-task-specification-task-type-5-text-with-blank\\\" placeholder=\\\"Text mit L\\u00FCcke\\\" style=\\\"width:100%;\\\">\\n                      <button class=\\\"add-task-specification-task-type-5-mail-to-users-button button\\\" (click)=\\\"taskdata.json_task_data.de_DE.text=taskdata.json_task_data.de_DE.text+'[::BLANK::]';\\\" style=\\\"width:100%;cursor:pointer;text-align:center;padding:0.1em 0;\\\">Klicke hier, um die L\\u00FCcke einzuf\\u00FCgen!</button>\\n                      <label style=\\\"width:100%;text-align:center;padding-left:2em;\\\"><span class=\\\"stepHelper\\\">7.2.) </span>Richtige Antwort<span style=\\\"color:#e9266d\\\">*</span></label>\\n                      <br>\\n                      <input [(ngModel)]=\\\"taskdata.json_task_data.de_DE.answer\\\" type=\\\"text\\\" class=\\\"input-add-task-specification-task-type-5-correct-answer\\\" placeholder=\\\"Richtige Antwort\\\" style=\\\"width:100%;\\\">\\n                  </div>\\n              </div>\\n              <div style=\\\"clear:both;margin:0;height:0;\\\"></div>\\n          </div>\\n\\n          <div *ngIf=\\\"taskdata.task_type_id==6\\\" style=\\\"width:100%;\\\">\\n              <div style=\\\"text-align:center;\\\"><span class=\\\"stepHelper\\\">7.1.) </span>Keine ben\\u00F6tigt</div>\\n          </div>\\n      </div>\\n\\n    </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], EditTaskComponent);\n    return EditTaskComponent;\n}());\nexports.EditTaskComponent = EditTaskComponent;\n//# sourceMappingURL=edittask.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/edittask.component.js\n ** module id = 74\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar LegalComponent = (function () {\n    function LegalComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n    }\n    LegalComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n        });\n        this.lService.loadSpecificContent('legal');\n    };\n    LegalComponent.prototype.getTOU = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['TOU'] !== 'undefined' ? this.specificcontent['TOU'] : { text: \"\" };\n    };\n    LegalComponent.prototype.getPP = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PP'] !== 'undefined' ? this.specificcontent['PP'] : { text: \"\" };\n    };\n    LegalComponent.prototype.getIMPRESSUM = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['IMPRESSUM'] !== 'undefined' ? this.specificcontent['IMPRESSUM'] : { text: \"\" };\n    };\n    LegalComponent.prototype.getLegalcontent = function () {\n        if (this.legalcomponent == 'tou') {\n            return this.getTOU()[\"text\"];\n        }\n        else if (this.legalcomponent == 'pp') {\n            return this.getPP()[\"text\"];\n        }\n        else if (this.legalcomponent == 'impressum') {\n            return this.getIMPRESSUM()[\"text\"];\n        }\n        else {\n            return 'Nothing found!';\n        }\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], LegalComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], LegalComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], LegalComponent.prototype, \"legalcomponent\", void 0);\n    LegalComponent = __decorate([\n        core_1.Component({\n            selector: 'legal-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n    <section class=\\\"col-xs-12\\\" style=\\\"padding:0;background:white;\\\">\\n\\n        <div class=\\\"content-frame\\\">\\n\\n          <p *ngIf=\\\"legalcomponent=='tou'\\\" class=\\\"headline\\\"style=\\\"margin-top:10px;\\\">Allgemeine Gesch\\u00E4ftsbedingungen</p>\\n          <p *ngIf=\\\"legalcomponent=='pp'\\\" class=\\\"headline\\\"style=\\\"margin-top:10px;\\\">Datenschutzerkl\\u00E4rung</p>\\n          <p *ngIf=\\\"legalcomponent=='impressum'\\\" class=\\\"headline\\\"style=\\\"margin-top:10px;\\\">Impressum</p>\\n\\n          <div style=\\\"margin-top:20px;width:100%;padding:0 3em;\\\" [innerHTML]=\\\"getLegalcontent()\\\">\\n          </div>\\n\\n        </div>\\n\\n    </section>\\n</div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], LegalComponent);\n    return LegalComponent;\n}());\nexports.LegalComponent = LegalComponent;\n//# sourceMappingURL=legal.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/legal.component.js\n ** module id = 75\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar HighscorelistComponent = (function () {\n    function HighscorelistComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = [];\n        this.loading_specificcontent = true;\n        this.number_of_shown_users_per_page = 20;\n    }\n    HighscorelistComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n        });\n        this.lService.loadSpecificContent('highscorelist');\n    };\n    HighscorelistComponent.prototype.getRankedHighscoreListArray = function () {\n        return typeof this.specificcontent !== 'undefined' ? this.specificcontent : [];\n    };\n    HighscorelistComponent.prototype.getCurrentShownUsers = function () {\n        return this.getRankedHighscoreListArray().slice(this.highscorepage * this.number_of_shown_users_per_page, (this.highscorepage + 1) * this.number_of_shown_users_per_page);\n    };\n    HighscorelistComponent.prototype.getArrayTotalNumberOfHighscorePages = function () {\n        var t_return = [];\n        for (var i = 0; i < Math.ceil(this.getRankedHighscoreListArray().length / this.number_of_shown_users_per_page); i++)\n            t_return.push(i);\n        return t_return;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], HighscorelistComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], HighscorelistComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], HighscorelistComponent.prototype, \"highscorepage\", void 0);\n    HighscorelistComponent = __decorate([\n        core_1.Component({\n            selector: 'highscorelist-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-hi-highscore-list\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Highscore</p>\\n\\n              <div style=\\\"display:table;width:100%;border-spacing:2px 2px;color:rgb(255,255,255);\\\">\\n\\n                  <div style='display:table-row;width:100%;'>\\n\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Rang</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Name</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Exp.</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">Fak.</p>\\n                      </div>\\n\\n                  </div>\\n\\n                  <div *ngFor=\\\"let t_user of getCurrentShownUsers();\\\" [style.background]=\\\"t_user.user_id==user.user_id?'#990000':'inherit'\\\" style='display:table-row;vertical-align:top;'>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1.3em;text-align:center;'>{{t_user.ranking}}</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1em;text-align:center;'>{{t_user.username}}</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1.1em;text-align:center;'>{{t_user.user_score}}</p>\\n                      </div>\\n                      <div style='display:table-cell;vertical-align:top;'>\\n                          <p style='font-size:1em;text-align:center;'>{{t_user.facultyname}}</p>\\n                      </div>\\n                  </div>\\n\\n\\n\\n              </div>\\n\\n              <!-- Navigation Highscore List -->\\n\\n              <div style=\\\"width:95%;margin-top:20px;margin-bottom:0.3em;margin-left:auto;margin-right:auto;\\\">\\n\\n                <div *ngFor=\\\"let t_pageid of getArrayTotalNumberOfHighscorePages()\\\"\\n                  [class.cf-hi-nav-item-unselected]=\\\"t_pageid!=highscorepage\\\"\\n                  [class.cf-hi-nav-item]=\\\"t_pageid==highscorepage\\\"\\n                  (click)=\\\"highscorepage=t_pageid;\\\"\\n                  style='float:left;margin-right:2px;padding:10px 15px;border:1px solid black;'>{{t_pageid+1}}</div>\\n\\n                <div style=\\\"clear:both;\\\"></div>\\n              </div>\\n\\n          </div>\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], HighscorelistComponent);\n    return HighscorelistComponent;\n}());\nexports.HighscorelistComponent = HighscorelistComponent;\n//# sourceMappingURL=highscorelist.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/highscorelist.component.js\n ** module id = 76\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar router_1 = require('@angular/router');\nvar LoggedcontentComponent = (function () {\n    function LoggedcontentComponent(router, route, lService) {\n        this.router = router;\n        this.route = route;\n        this.lService = lService;\n        this.user = {};\n        this.loading_user = true;\n        this.universalcontent = {};\n        this.loading_universalcontent = true;\n        this.showncomponent = \"\";\n        this.timeframeForCheckingLocation = 30000;\n        this.intervalTimerManageCheckLocation = null;\n        //Solved Overlay\n        this.solvedOverlayArray = [];\n        //Small Screen\n        this.toggled = false;\n        //Unmendatory\n        this.badge_id = \"\";\n        this.quest_id = \"\";\n        this.task_id = \"\";\n        this.legalcomponent = \"\";\n        this.highscorepage = 0;\n        this.additionalinformation = \"\";\n        this.locationfound_id = \"\";\n        this.reg_username = \"\";\n        this.reg_username_valid = true;\n        this.reg_username_exists = false;\n        this.reg_email = \"\";\n        this.reg_email_valid = true;\n        this.reg_email_exists = false;\n        this.reg_password = \"\";\n        this.reg_password_valid = true;\n        this.reg_password_repeat = \"\";\n        this.reg_password_repeat_valid = true;\n        this.reg_faculty_id = -2;\n    }\n    LoggedcontentComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.sub = this.route.params.subscribe(function (params) {\n            var scroll = typeof params['scroll'] !== 'undefined' ? params['scroll'] : '';\n            if (typeof scroll !== 'undefined' && scroll.length > 0) {\n                $('html, body').animate({ scrollTop: ($('#' + scroll).offset().top) }, 'slow');\n            }\n            else {\n                $('html, body').animate({ scrollTop: 0 }, 'slow');\n            }\n        });\n        $('#titleBar').show();\n        //User\n        this.loading_user = true;\n        this.lService.user$.subscribe(function (user) {\n            if (typeof user === 'undefined' || typeof user.user_id === 'undefined') {\n                _this.navigateToUnloggedComponent('home');\n            }\n            _this.user = user;\n            _this.loading_user = false;\n            if (typeof _this.user.user_id !== 'undefined' && _this.user.user_id != -1) {\n                _this.manageCheckLocation();\n                if (_this.intervalTimerManageCheckLocation != null) {\n                    window.clearInterval(_this.intervalTimerManageCheckLocation);\n                }\n                _this.intervalTimerManageCheckLocation = window.setInterval(function () { _this.manageCheckLocation(); }, _this.timeframeForCheckingLocation);\n            }\n        });\n        this.lService.loadUser();\n        //Universal Content\n        this.loading_universalcontent = true;\n        this.lService.universalcontent$.subscribe(function (universalcontent) {\n            _this.universalcontent = universalcontent;\n            _this.loading_universalcontent = false;\n        });\n        this.lService.loadUniversalContent();\n        //Sub Route\n        this.sub = this.route.params.subscribe(function (params) {\n            var component = typeof params['component'] !== 'undefined' ? params['component'] : '';\n            var id = typeof params['id'] !== 'undefined' ? params['id'] : '';\n            var additionalinformation = typeof params['additionalinformation'] !== 'undefined' ? params['additionalinformation'] : '';\n            component = component.toLowerCase();\n            id = id.toLowerCase();\n            if (component.length == 0 || component == 'tasks') {\n                _this.showncomponent = 'tasks';\n            }\n            else if (component == 'administration') {\n                _this.showncomponent = 'administration';\n            }\n            else if (component == 'task' && id.length != 0) {\n                _this.showncomponent = 'task';\n                _this.task_id = id;\n                _this.additionalinformation = additionalinformation;\n            }\n            else if (component == 'tasksearch') {\n                _this.showncomponent = 'tasksearch';\n            }\n            else if (component == 'highscorelist') {\n                _this.showncomponent = 'highscorelist';\n                _this.highscorepage = parseInt(id);\n            }\n            else if (component == 'quest' && id.length != 0) {\n                _this.showncomponent = 'quest';\n                _this.quest_id = id;\n            }\n            else if (component == 'badge' && id.length != 0) {\n                _this.showncomponent = 'badge';\n                _this.badge_id = id;\n            }\n            else if (component == 'legal' && id.length != 0) {\n                _this.showncomponent = 'legal';\n                _this.legalcomponent = id;\n            }\n            else if (component == 'statistics') {\n                _this.showncomponent = 'statistics';\n            }\n            else if (component == 'userprogress') {\n                _this.showncomponent = 'userprogress';\n            }\n            else if (component == 'usersettings') {\n                _this.showncomponent = 'usersettings';\n            }\n            else if (component == 'locationfound' && id.length != 0) {\n                _this.showncomponent = 'tasks';\n                _this.locationfound_id = id;\n                _this.checkLocation(\"\", \"\", _this.locationfound_id);\n            }\n            else {\n                _this.showncomponent = 'tasks';\n            }\n        });\n    };\n    LoggedcontentComponent.prototype.getUniversalContentFacultyArray = function () {\n        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Faculties\"] !== 'undefined') {\n            return this.universalcontent[\"_Faculties\"];\n        }\n        return [];\n    };\n    LoggedcontentComponent.prototype.getUniversalContentAnonymousUserPhrase = function () {\n        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"Anonymous_User_Phrase\"] !== 'undefined') {\n            return this.universalcontent[\"Anonymous_User_Phrase\"];\n        }\n        return \"\";\n    };\n    LoggedcontentComponent.prototype.getUniversalContentMainPictureId = function () {\n        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; }).length != 0) {\n            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; })[0].text;\n        }\n        return -1;\n    };\n    LoggedcontentComponent.prototype.isUserAnonymousUser = function () {\n        if (typeof this.user === 'undefined' || typeof this.user.username === 'undefined') {\n            return false;\n        }\n        if (this.getUniversalContentAnonymousUserPhrase().length == 0) {\n            return false;\n        }\n        if (this.user.username.indexOf(this.getUniversalContentAnonymousUserPhrase()) > -1) {\n            return true;\n        }\n        return false;\n    };\n    LoggedcontentComponent.prototype.isUserAdminUser = function () {\n        if (typeof this.user === 'undefined' || typeof this.user.user_type_id === 'undefined' || (this.user.user_type_id != 1 && this.user.user_type_id != 2)) {\n            return false;\n        }\n        return true;\n    };\n    LoggedcontentComponent.prototype.logoutUser = function () {\n        var _this = this;\n        this.lService.logoutUser().subscribe(function (data) {\n            _this.router.navigate([\"/u/home\"]);\n        }, function (error) { console.error('Could not logout user.'); });\n    };\n    LoggedcontentComponent.prototype.navigateToComponent = function (componentname) {\n        this.router.navigate([\"/l/\" + componentname]);\n    };\n    LoggedcontentComponent.prototype.navigateToUnloggedComponent = function (componentname) {\n        this.router.navigate([\"/u/\" + componentname]);\n    };\n    LoggedcontentComponent.prototype.navigateToLegal = function (legalcomponentname) {\n        this.router.navigate([\"/l/legal\", legalcomponentname]);\n    };\n    LoggedcontentComponent.prototype.ngOnDestroy = function () {\n        this.sub.unsubscribe();\n        if (this.intervalTimerManageCheckLocation != null) {\n            window.clearInterval(this.intervalTimerManageCheckLocation);\n        }\n    };\n    LoggedcontentComponent.prototype.deleteUser = function () {\n        var _this = this;\n        if (confirm(\"Möchtest du deinen User jetzt löschen?\") == true) {\n            this.lService.deleteUser().subscribe(function (data) {\n                if (typeof data.result !== 'undefined' && data.result == true) {\n                    _this.navigateToUnloggedComponent(\"home\");\n                }\n                else {\n                    window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n                }\n            }, function (error) {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            });\n        }\n    };\n    //checkLocation\n    LoggedcontentComponent.prototype.manageCheckLocation = function () {\n        var _this = this;\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (p) {\n                /*lati = p.coords.latitude;\n                long = p.coords.longitude;*/\n                _this.checkLocation(p.coords.latitude, p.coords.longitude, \"\");\n            }, function (error) {\n                console.log('Positioning Error: ');\n                console.log(error);\n                window.alert(\"Positionieren des Nutzers nicht möglich! Fehler: \" + (typeof error.message !== 'undefined' ? error.message : ''));\n            }, {\n                enableHighAccuracy: true,\n                maximumAge: 1000000\n            });\n        }\n        else {\n            window.alert(\"Bitte erlaube dem Spiel deine Position zu checken, da sonst das Spiel für dich nicht in vollem Umfang spielbar ist. Deine Position wird NICHT permanent gespeichert, sondern nur kurz (5-10 Sekunden) für die Suche von Aufgaben und Quests in deiner Nähe benutzt!\");\n        }\n    };\n    LoggedcontentComponent.prototype.checkLocation = function (lati, long, location_id) {\n        var _this = this;\n        if ((typeof lati === 'undefined' || typeof long === 'undefined') && typeof location_id === 'undefined') {\n            return;\n        }\n        this.lService.checkLocation(lati, long, location_id).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true && data.data != null) {\n                //console.log(data);\n                //New Tasks\n                for (var key in data.data[\"new_tasks\"]) {\n                    _this.solvedOverlayArray.push({\n                        type: 4,\n                        name: \"Aufgabe gefunden\",\n                        solved_description: \"Du hast eine neue Aufgabe gefunden: '\" + data.data[\"new_tasks\"][key][\"taskname\"] + \"'. Du findest sie ab sofort unter deinen aktuellen Aufgaben!\"\n                    });\n                }\n                //New Quests\n                for (var key in data.data[\"new_quests\"]) {\n                    _this.solvedOverlayArray.push({\n                        type: 4,\n                        name: \"Quest gefunden\",\n                        solved_description: \"Du hast einen neuen Quest gefunden: '\" + data.data[\"new_quests\"][key][\"questname\"] + \"'. Du findest sie ab sofort unter deinen aktuellen Aufgaben!\"\n                    });\n                }\n                //Solved Tasks\n                for (var key in data.data[\"all_tasks_to_solve_in_near\"]) {\n                    var t_solved_quests = \"\";\n                    var t_solved_badges = \"\";\n                    if (typeof data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"] !== 'undefined') {\n                        for (var t_key_quests in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"]) {\n                            t_solved_quests += \"-\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"questname\"] + \"<br />\";\n                        }\n                        for (var t_key_badges in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"]) {\n                            t_solved_badges += \"-\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"][t_key_badges][\"badgename\"] + \"<br />\";\n                        }\n                    }\n                    _this.solvedOverlayArray.push({\n                        type: 1,\n                        name: \"Aufgabe erfüllt\",\n                        solved_description: \"Herzlichen Glückwunsch! Du hast die Aufgabe '\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"taskname\"] + \"' abgeschlossen.\",\n                        score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"score_rule\"],\n                        faculty_score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"added_score_for_faculty\"],\n                        solved_quests: t_solved_quests,\n                        solved_badges: t_solved_badges\n                    });\n                    //Solved Quests\n                    if (typeof data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"] !== 'undefined') {\n                        for (var t_key_quests in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"]) {\n                            _this.solvedOverlayArray.push({\n                                type: 3,\n                                name: \"Quest erfüllt\",\n                                solved_description: \"Herzlichen Glückwunsch! Du hast den Quest '\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"questname\"] + \"' abgeschlossen.\",\n                                score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"score_rule\"],\n                                faculty_score_rule: data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"quests\"][t_key_quests][\"score_rule\"]\n                            });\n                        }\n                    }\n                    //Solved Badges\n                    if (typeof data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"] !== 'undefined') {\n                        for (var t_key_badges in data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"]) {\n                            _this.solvedOverlayArray.push({\n                                type: 2,\n                                name: \"Abzeichen erhalten\",\n                                solved_description: \"Herzlichen Glückwunsch! Du hast das Abzeichen '\" + data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"][t_key_badges][\"badgename\"] + \"' abgeschlossen.<br /><img src='\" + _this.lService.getPictureLink(data.data[\"all_tasks_to_solve_in_near\"][key][\"achievements\"][\"badges\"][t_key_badges][\"picture_id\"]) + \"' />\"\n                            });\n                        }\n                    }\n                }\n            }\n            else if (typeof data.result !== 'undefined' && data.result == true && data.data == null) {\n                if (_this.intervalTimerManageCheckLocation != null) {\n                    window.clearInterval(_this.intervalTimerManageCheckLocation);\n                    _this.intervalTimerManageCheckLocation = null;\n                }\n            }\n            else {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte lass die Seite neuladen!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n        });\n    };\n    //Solved Overlay Methods\n    LoggedcontentComponent.prototype.removeFromSolvedOverlayArray = function (index) {\n        this.solvedOverlayArray.splice(index, 1);\n    };\n    //Register for Anonymous Users\n    LoggedcontentComponent.prototype.registerLoggedUser = function () {\n        //Username\n        var pattern = /^[A-Za-z0-9]{2,}$/;\n        if (this.reg_username.length == 0 || this.reg_username.match(pattern) == null) {\n            window.alert(\"Dein gewählter Username entspricht nicht unseren Richtlinien!\");\n            return;\n        }\n        if (this.reg_username_exists == true) {\n            window.alert(\"Dein gewählter Username ist bereits vergeben!\");\n            return;\n        }\n        //Email\n        pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (this.reg_email.length == 0 || this.reg_email.match(pattern) == null) {\n            window.alert(\"Bitte überprüfe deine E-Mail und versuche es erneut!\");\n            return;\n        }\n        if (this.reg_email_exists == true) {\n            window.alert(\"Deine gewählte E-Mail ist bereits vergeben!\");\n            return;\n        }\n        //Password\n        pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n        if (this.reg_password.length == 0 || this.reg_password.match(pattern) == null || this.reg_password != this.reg_password_repeat) {\n            window.alert(\"Dein Passwort entspricht nicht unseren Richtlinien oder du hast die beiden Passwörter stimmen nicht überein!\");\n            return;\n        }\n        //Faculty\n        if (this.reg_faculty_id == -2) {\n            window.alert(\"Bitte wähle vor der Registration eine Fakultät!\");\n            return;\n        }\n        //Accept TOU and PP\n        if ($(\"#reg_bed\").prop(\"checked\") == false) {\n            window.alert(\"Bitte akzeptiere vor der Registration die AGB sowie die Datenschutzerklärungen!\");\n            return;\n        }\n        this.lService.registerUser(this.reg_username, this.reg_email, this.reg_password, this.reg_password_repeat, this.reg_faculty_id).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n                window.location.reload();\n            }\n            else {\n                window.alert(\"Bitte lass die Seite neuladen und überprüfe deine Eingaben!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            console.error('Could not register user.');\n        });\n    };\n    LoggedcontentComponent.prototype.keyupRegisterUsername = function () {\n        var _this = this;\n        var pattern = /^[A-Za-z0-9]{2,}$/;\n        if (this.reg_username.length != 0 && this.reg_username.match(pattern) != null) {\n            this.reg_username_valid = true;\n        }\n        else {\n            this.reg_username_valid = false;\n        }\n        this.lService.checkUsername(this.reg_username).subscribe(function (data) {\n            if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == true) {\n                _this.reg_username_exists = true;\n            }\n            else if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == false) {\n                _this.reg_username_exists = false;\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            console.error('Could not login user.');\n        });\n    };\n    LoggedcontentComponent.prototype.keyupRegisterEmail = function () {\n        var _this = this;\n        var pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (this.reg_email.length != 0 && this.reg_email.match(pattern) != null) {\n            this.reg_email_valid = true;\n        }\n        else {\n            this.reg_email_valid = false;\n        }\n        this.lService.checkEmail(this.reg_email).subscribe(function (data) {\n            if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == true) {\n                _this.reg_email_exists = true;\n            }\n            else if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == false) {\n                _this.reg_email_exists = false;\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            console.error('Could not login user.');\n        });\n    };\n    LoggedcontentComponent.prototype.keyupRegisterPassword = function () {\n        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n        if (this.reg_password.length != 0 && this.reg_password.match(pattern) != null) {\n            this.reg_password_valid = true;\n        }\n        else {\n            this.reg_password_valid = false;\n        }\n    };\n    LoggedcontentComponent.prototype.keyupRegisterPasswordRepeat = function () {\n        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n        if (this.reg_password_repeat.length != 0 && this.reg_password == this.reg_password_repeat) {\n            this.reg_password_repeat_valid = true;\n        }\n        else {\n            this.reg_password_repeat_valid = false;\n        }\n    };\n    LoggedcontentComponent = __decorate([\n        core_1.Component({\n            selector: 'loggedcontent-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n\\n  <!-- -->\\n  <div id=\\\"wrapper\\\" [class.toggled]=\\\"toggled\\\">\\n\\n      <!-- Sidebar -->\\n      <div id=\\\"sidebar-wrapper\\\">\\n\\n        <!-- Logo -->\\n        <div id=\\\"logo\\\">\\n          <img [src]=\\\"getUniversalContentMainPictureId().length != 0 ? lService.getPictureLink(getUniversalContentMainPictureId()) : ''\\\" style=\\\"width:100%;\\\" />\\n        </div>\\n\\n        <!-- Nav -->\\n        <nav class=\\\"nav\\\">\\n            <ul>\\n                <li [class.current_page_item]=\\\"showncomponent=='tasks'\\\"><a id=\\\"tasks\\\" (click)=\\\"navigateToComponent('tasks')\\\" style=\\\"cursor:pointer;\\\">Aktuelle Aufgaben</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='tasksearch'\\\"><a id=\\\"map\\\" (click)=\\\"navigateToComponent('tasksearch')\\\" style=\\\"cursor:pointer;\\\">Aufgabensuche</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='userprogress'\\\"><a id=\\\"achievements\\\" (click)=\\\"navigateToComponent('userprogress')\\\" style=\\\"cursor:pointer;\\\">Spielstand</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='statistics'\\\"><a id=\\\"statistics\\\" (click)=\\\"navigateToComponent('statistics')\\\" style=\\\"cursor:pointer;\\\">Statistiken</a></li>\\n                <li><a id=\\\"logout\\\" (click)=\\\"logoutUser()\\\" style=\\\"cursor:pointer;\\\">Abmelden</a></li>\\n            </ul>\\n        </nav>\\n\\n        <nav *ngIf=\\\"isUserAdminUser()\\\" class=\\\"nav\\\" style=\\\"margin-top:0.5em;\\\">\\n            <ul>\\n                <li [class.current_page_item]=\\\"showncomponent=='administration'\\\"><a id=\\\"administration\\\" (click)=\\\"navigateToComponent('administration')\\\" style=\\\"cursor:pointer;\\\">Administration</a></li>\\n            </ul>\\n        </nav>\\n\\n        <!-- Copyright -->\\n        <!--\\n        <section id=\\\"copyright\\\" style=\\\"margin-top: 0.5em;\\\">\\n            <p>\\n                &copy; 2016 The Library Game.<br />\\n                CodeDesign, Database: <a href=\\\"http://company.aliru.de\\\">Julian Kissel</a><br />\\n                Design: Alexander Moch<br />\\n                Weitere Beteiligte: <a href=\\\"https://www.bib.uni-mannheim.de/\\\">Bibliothek der Universit\\u00E4t Mannheim</a>, <a href=\\\"http://ls.wim.uni-mannheim.de/de/pi4/people/philip-mildner/\\\">Philip Mildner</a>\\n            </p>\\n        </section>\\n        -->\\n\\n\\n        <!-- Register for Anonymous Player -->\\n        <section id=\\\"registerAsAnonymous\\\" *ngIf=\\\"getUniversalContentAnonymousUserPhrase().length!=0 && isUserAnonymousUser()\\\">\\n            <div style=\\\"padding:0px 10px;\\\">\\n\\n                <form id=\\\"registerForm\\\">\\n                      <input [(ngModel)]=\\\"reg_username\\\" (keyup)=\\\"keyupRegisterUsername()\\\" [style.background]=\\\"reg_username.length>0?(reg_username_valid && reg_username_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_username\\\" name=\\\"reg_username\\\" type=\\\"text\\\" maxlength=\\\"30\\\" placeholder=\\\"Username\\\" title=\\\"Gib hier deinen gew\\u00FCnschten Usernamen ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;\\\"/>\\n                      <div *ngIf=\\\"reg_username_exists\\\" style=\\\"padding: 5px;color: white;\\\">Username ist leider schon vergeben!</div>\\n\\n                      <input [(ngModel)]=\\\"reg_email\\\" (keyup)=\\\"keyupRegisterEmail()\\\" [style.background]=\\\"reg_email.length>0?(reg_email_valid && reg_email_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_email\\\" name=\\\"reg_email\\\" type=\\\"text\\\" maxlength=\\\"100\\\" placeholder=\\\"E-Mail\\\" title=\\\"Gib hier deine E-Mail ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.2em;\\\"/>\\n                      <div *ngIf=\\\"reg_email_exists\\\" style=\\\"padding: 5px;color: white;\\\">Ein User mit dieser E-Mail existiert leider bereits!</div>\\n\\n                      <input [(ngModel)]=\\\"reg_password\\\" (keyup)=\\\"keyupRegisterPassword();keyupRegisterPasswordRepeat();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password\\\" name=\\\"reg_password\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Passwort (Mind. 6 Zeichen)\\\" title=\\\"Gib hier dein Passwort ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.2em;\\\"/>\\n\\n                      <input [(ngModel)]=\\\"reg_password_repeat\\\" (keyup)=\\\"keyupRegisterPasswordRepeat();keyupRegisterPassword();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_repeat_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password_repeat\\\" name=\\\"reg_password_repeat\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Wiederhole dein Passwort\\\" title=\\\"Wiederhole hier dein Passwort\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.2em;\\\"/>\\n\\n                      <select [(ngModel)]=\\\"reg_faculty_id\\\" name=\\\"reg_department\\\" style=\\\"font-size:1em;background:#eeeeee;padding-top: 7px;padding-bottom: 7px;margin-top: 0.2em;\\\">\\n                        <option value=\\\"-2\\\">W\\u00E4hle deine Fakult\\u00E4t</option>\\n                        <option *ngFor=\\\"let t_faculty of getUniversalContentFacultyArray();\\\" value='{{t_faculty.faculty_id}}'>{{t_faculty.facultyname}}</option>\\n                      </select>\\n\\n                      <div style=\\\"margin:10px 5px;float:left;\\\">\\n                        <input id=\\\"reg_bed\\\" style=\\\"width:20px;height:20px;\\\" name=\\\"reg_bed\\\" type=\\\"checkbox\\\" value=\\\"bed\\\">\\n                      </div>\\n                      <div style=\\\"color:white;margin:10px 5px;\\\">Ich stimme den <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToLegal('tou')\\\" target=\\\"_blank\\\">AGB</a> sowie der <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToLegal('pp')\\\" target=\\\"_blank\\\">Datenschutzerkl\\u00E4rungen</a> zu</div>\\n                      <div style=\\\"clear:both;\\\"></div>\\n\\n                      <div (click)=\\\"registerLoggedUser()\\\" id=\\\"buttonReg\\\">Jetzt registrieren</div>\\n                </form>\\n\\n\\n            </div>\\n        </section>\\n\\n\\n        <!-- \\\"Delete ACC\\\" AND \\\"Go to Settings\\\" for Non-Anonymous Player -->\\n        <section id=\\\"deleteAcc\\\">\\n            <div style=\\\"padding:0px 10px;\\\">\\n\\n                <input (click)=\\\"deleteUser()\\\" type=\\\"button\\\" id=\\\"buttonDeleteAcc\\\" value=\\\"L\\u00F6sche meinen Account\\\" style=\\\"width:100%;\\\"/>\\n                <input (click)=\\\"navigateToComponent('usersettings')\\\" type=\\\"button\\\" id=\\\"buttonSettingsAcc\\\" value=\\\"Meine Einstellungen\\\" style=\\\"width:100%;margin-top:5px;\\\"/>\\n\\n            </div>\\n        </section>\\n\\n\\n        <!-- Nav -->\\n        <nav class=\\\"nav\\\">\\n            <ul>\\n                <li [class.current_page_item]=\\\"showncomponent=='legal' && legalcomponent=='tou'\\\"><a (click)=\\\"navigateToLegal('tou')\\\" style=\\\"cursor:pointer;\\\">Nutzungsbedingungen</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='legal' && legalcomponent=='pp'\\\"><a (click)=\\\"navigateToLegal('pp')\\\" style=\\\"cursor:pointer;\\\">Datenschutzerkl\\u00E4rung</a></li>\\n                <li [class.current_page_item]=\\\"showncomponent=='legal' && legalcomponent=='impressum'\\\"><a (click)=\\\"navigateToLegal('impressum')\\\" style=\\\"cursor:pointer;\\\">Impressum</a></li>\\n            </ul>\\n        </nav>\\n\\n      </div>\\n      <!-- /#sidebar-wrapper -->\\n\\n      <!-- Page Content -->\\n      <div id=\\\"page-content-wrapper\\\" style=\\\"padding:0;\\\">\\n\\n        <div id=\\\"titleBar\\\" class=\\\"hidden-sm hidden-md hidden-lg\\\">\\n          <div class=\\\"toggleLeft\\\" (click)=\\\"toggled=toggled?false:true;\\\"></div><div class=\\\"reloadButton\\\" onclick=\\\"location.reload();\\\"></div>\\n        </div>\\n\\n        <div style=\\\"padding:15px;\\\">\\n\\n          <div class=\\\"container-fluid\\\">\\n\\n            <div id=\\\"content\\\">\\n\\n              <!-- Routing Logged User -->\\n              <tasks-component *ngIf=\\\"showncomponent=='tasks'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></tasks-component>\\n              <quest-component *ngIf=\\\"showncomponent=='quest'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [quest_id]=\\\"quest_id\\\"></quest-component>\\n              <badge-component *ngIf=\\\"showncomponent=='badge'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [badge_id]=\\\"badge_id\\\"></badge-component>\\n              <userprogress-component *ngIf=\\\"showncomponent=='userprogress'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></userprogress-component>\\n              <legal-component *ngIf=\\\"showncomponent=='legal'\\\" [user]=\\\"user\\\" [legalcomponent]=\\\"legalcomponent\\\" [universalcontent]=\\\"universalcontent\\\"></legal-component>\\n              <usersettings-component *ngIf=\\\"showncomponent=='usersettings'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></usersettings-component>\\n              <statistics-component *ngIf=\\\"showncomponent=='statistics'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></statistics-component>\\n              <highscorelist-component *ngIf=\\\"showncomponent=='highscorelist'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [highscorepage]=\\\"highscorepage\\\"></highscorelist-component>\\n              <tasksearch-component *ngIf=\\\"showncomponent=='tasksearch'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\"></tasksearch-component>\\n              <task-component *ngIf=\\\"showncomponent=='task'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [task_id]=\\\"task_id\\\" [additionalinformation]=\\\"additionalinformation\\\"></task-component>\\n              <administration-component *ngIf=\\\"showncomponent=='administration'\\\" [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" (reload)=\\\"lService.loadUniversalContent();\\\"></administration-component>\\n\\n              <footer id=\\\"is-footer\\\">\\n                <hr style=\\\"width:100%\\\">\\n              </footer>\\n\\n\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <!-- /#page-content-wrapper -->\\n\\n  </div>\\n  <!-- -->\\n\\n  <!-- Overlay -->\\n  <div *ngFor=\\\"let solvedOverlayDataObject of solvedOverlayArray;let i = index;\\\">\\n    <solvedoverlay-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [solveddata]=\\\"solvedOverlayDataObject\\\" (closeOverlay)=\\\"removeFromSolvedOverlayArray(i);\\\"></solvedoverlay-component>\\n  </div>\\n\\n\\n  <!-- Dialog -->\\n  <div id=\\\"dialog-confirm\\\" style=\\\"display:none;\\\">\\n    <div id=\\\"dialog-content\\\"></div>\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, router_1.ActivatedRoute, libgame_service_1.LibgameService])\n    ], LoggedcontentComponent);\n    return LoggedcontentComponent;\n}());\nexports.LoggedcontentComponent = LoggedcontentComponent;\n//# sourceMappingURL=loggedcontent.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/loggedcontent.component.js\n ** module id = 77\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar QuestComponent = (function () {\n    function QuestComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n    }\n    QuestComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n        });\n        if (typeof this.quest_id === 'string' && this.quest_id.length != 0)\n            this.lService.loadSpecificContent('quest&quest_id=' + this.quest_id);\n    };\n    QuestComponent.prototype.ngOnChanges = function (changes) {\n        var log = [];\n        for (var propName in changes) {\n            var changedProp = changes[propName];\n            var from = changedProp.previousValue;\n            var to = changedProp.currentValue;\n            if (propName == \"quest_id\" && from != to) {\n                this.lService.loadSpecificContent('quest&quest_id=' + to);\n            }\n        }\n    };\n    QuestComponent.prototype.getQuestData = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['QUEST_DATA'] !== 'undefined' ? this.specificcontent['QUEST_DATA']\n            : {\n                json_quest_task_ids: [],\n                score_rule: 0,\n                is_starter_quest: \"0\",\n                is_active: \"1\"\n            };\n    };\n    QuestComponent.prototype.getProgressPreQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PROGRESS_PRE_QUESTS'] !== 'undefined' ? this.specificcontent['PROGRESS_PRE_QUESTS'] : [];\n    };\n    QuestComponent.prototype.getUserQuest = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_QUEST'] !== 'undefined' ? this.specificcontent['USER_QUEST'] : { completed: \"0\", ts_quest_completed: \"\" };\n    };\n    QuestComponent.prototype.getProgressTasks = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['PROGRESS_TASKS'] !== 'undefined' ? this.specificcontent['PROGRESS_TASKS'] : [];\n    };\n    QuestComponent.prototype.getProgressTasksArrayForView = function () {\n        if ($.isEmptyObject(this.specificcontent) || typeof this.specificcontent['PROGRESS_TASKS'] === 'undefined')\n            return [];\n        var t_returnarray = [];\n        for (var key in this.specificcontent['PROGRESS_TASKS']) {\n            if (typeof this.getProgressTasks()[key] === 'object' && this.getProgressTasks()[key][\"completed\"] == true) {\n                t_returnarray.push(this.getProgressTasks()[key]);\n            }\n            else if (typeof this.getProgressTasks()[key] === 'object') {\n                t_returnarray.push(this.getProgressTasks()[key]);\n                return t_returnarray;\n            }\n        }\n        return t_returnarray;\n    };\n    QuestComponent.prototype.getTaskArrayForProgressTasksArrayKey = function (taskarraykey) {\n        var t_taskarray = [];\n        for (var key in this.getProgressTasks()[taskarraykey]) {\n            if (typeof this.getProgressTasks()[key] === 'object') {\n                t_taskarray.push(this.getProgressTasks()[taskarraykey][key]);\n            }\n        }\n        return t_taskarray;\n    };\n    QuestComponent.prototype.navigateToQuest = function (quest_id) {\n        this.router.navigate(['/l/quest', quest_id]);\n    };\n    QuestComponent.prototype.navigateToTask = function (task_id) {\n        this.router.navigate(['/l/task', task_id]);\n    };\n    QuestComponent.prototype.navigateToBadge = function (badge_id) {\n        this.router.navigate(['/l/badge', badge_id]);\n    };\n    QuestComponent.prototype.isQuestCompleted = function () {\n        return typeof this.getUserQuest().completed !== 'undefined' && this.getUserQuest().completed == \"1\";\n    };\n    QuestComponent.prototype.getNumberOfCompletedLevels = function () {\n        var t_completedlevels = 0;\n        for (var key in this.getProgressTasks()) {\n            if (typeof this.getProgressTasks()[key] === 'object') {\n                if (this.getProgressTasks()[key][\"completed\"] == true) {\n                    t_completedlevels++;\n                }\n                else {\n                    return t_completedlevels;\n                }\n            }\n        }\n        return t_completedlevels;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], QuestComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], QuestComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], QuestComponent.prototype, \"quest_id\", void 0);\n    QuestComponent = __decorate([\n        core_1.Component({\n            selector: 'quest-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- Overview of quest -->\\n        <div id=\\\"cf-qu-overview\\\" class=\\\"content-frame\\\">\\n\\n            <div class=\\\"content-quest-frame\\\" style=\\\"width: 100%!important;padding: 0!important;margin: 0!important;border-radius: 0;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">{{'Quest: '+getQuestData()?.questname}}</div>\\n                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{getQuestData()?.score_rule}}</span> Exp.</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"isQuestCompleted()\\\" style=\\\"width:100%;padding: 0!important;\\\">\\n              <p class='headline' style=\\\"background:rgb(120,255,120);\\\">\\n                  Du hast diesen Quest bereits gel\\u00F6st.\\n                  <br>\\n                  Gel\\u00F6st am: {{lService.getFormatedDate(getUserQuest().ts_quest_completed)}}\\n              </p>\\n            </div>\\n\\n\\n\\n            <div style=\\\"padding:1em 1em;width:100%;max-width:30em;margin-left:auto;margin-right:auto;\\\">\\n\\n                <div style=\\\"display:table;border-spacing:0 2px;width:100%;\\\">\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Erfahrung</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">+{{getQuestData()?.score_rule}}\\n                          <span [hidden]=\\\"!isQuestCompleted()\\\" class='fa fa-check-square' style='color:rgb(0,150,0);background:transparent;'></span>\\n                          <span [hidden]=\\\"isQuestCompleted()\\\" class='fa fa-minus-square' style='color:rgb(150,0,0);background:transparent;'></span>\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Dein Fortschritt</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">\\n                          <span style=\\\"color:green;\\\">{{getNumberOfCompletedLevels()}}</span> / {{getProgressTasks().length}}\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Deine gesammelten Exp.</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;color:green!important;\\\">\\n                          +{{isQuestCompleted()?getQuestData()?.score_rule:'0'}}\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Starterquest</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">\\n                          {{getQuestData().is_starter_quest=='1'?'Yes':'No'}}\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n\\n\\n                <div style=\\\"text-align:center;margin-top:0.5em;\\\">Ben\\u00F6tigte Vorquests</div>\\n\\n                  <div [hidden]=\\\"getProgressPreQuests().length != 0\\\" id='cf-qu-overview-no-pre-quests' style='font-weight:bold;font-size:1em;color:rgb(0,0,0);margin-bottom:0.3em;margin-top:0.2em;'>Es werden keine Vorquests ben\\u00F6tigt</div>\\n\\n                  <div *ngFor=\\\"let t_quest of getProgressPreQuests();\\\" id='cf-qu-overview-pre-quest' style='overflow:hidden;cursor:pointer;font-weight:bold;font-size:1.2em;color:rgb(255,255,255);border:0px solid rgb(0,0,0);border-radius:4px;padding:0.2em 0.3em;background:rgb(50,50,50);' (click)=\\\"navigateToQuest(t_quest.quest_id)\\\">\\n                    {{t_quest.questname}}<br>\\n                    <button [hidden]=\\\"!t_quest.completed\\\" class='fa fa-check-square' style='padding:0;font-size:1em;color:rgb(0,150,0);border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n                    <button [hidden]=\\\"t_quest.completed\\\" class='fa fa-minus-square' style='padding:0;font-size:1em;color:rgb(150,0,0);border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n                  </div>\\n\\n            </div>\\n            <div style=\\\"clear:both;\\\"></div>\\n\\n        </div>\\n\\n\\n        <div [hidden]=\\\"getQuestData().is_active=='1'\\\" class=\\\"content-frame\\\" >\\n            <p class='headline' style=\\\"background:rgb(255,120,120);\\\">\\n              Der Quest ist nicht l\\u00E4nger aktiv\\n            </p>\\n        </div>\\n\\n        <div [hidden]=\\\"getQuestData().is_active!='1'\\\" id=\\\"cf-qu-quest-progress\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Dein Fortschritt</p>\\n\\n\\n            <div *ngFor=\\\"let t_tasklevelinfo of getProgressTasksArrayForView(); let i = index;\\\" class=\\\"cf-qu-quest-progress-step\\\"style=\\\"margin-top:1em;\\\">\\n                <p class=\\\"cf-qu-quest-progress-step-headline\\\" style=\\\"text-align:center;width:100%;\\\">Stufe {{i+1}}/{{getProgressTasks().length}}\\n\\n                  <span class='fa'\\n                    [class.fa-check-square]=\\\"t_tasklevelinfo.completed\\\"\\n                    [class.fa-minus-square]=\\\"!t_tasklevelinfo.completed\\\"\\n                    [style.color]=\\\"t_tasklevelinfo.completed?'rgb(0,150,0)':'rgb(150,0,0)'\\\" style='padding:0;font-size:1em;border:0;margin:0;background:transparent;margin-left:5px;'></span>\\n                </p>\\n\\n                <div class=\\\"cf-qu-quest-progress-step-tasks\\\" style=\\\"padding:0 1.5em;\\\">\\n                  <div *ngFor=\\\"let t_taskarray of getTaskArrayForProgressTasksArrayKey(i); let i_t = in\\\" (click)=\\\"navigateToTask(t_taskarray.task_id)\\\" class=\\\"content-task-frame\\\" style=\\\"width:100%;\\\">\\n                      <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                          <div style=\\\"float:left;\\\">Aufgabe: {{t_taskarray.taskname}}</div>\\n                          <button class='fa fa-check-square'\\n                          [class.fa-check-square]=\\\"t_taskarray.completed\\\"\\n                          [class.fa-minus-square]=\\\"!t_taskarray.completed\\\"\\n                          [style.color]=\\\"t_taskarray.completed?'rgb(20,100,20)!important':'rgb(100,20,20)!important'\\\" style='padding:0;font-size:1.5em!important;border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n                  </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n\\n\\n</div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], QuestComponent);\n    return QuestComponent;\n}());\nexports.QuestComponent = QuestComponent;\n//# sourceMappingURL=quest.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/quest.component.js\n ** module id = 78\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar SolvedOverlayComponent = (function () {\n    function SolvedOverlayComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        //type: 1: Task, 2: Badge, 3: Quest, 4: Other\n        //name:\n        //score_rule:\n        //faculty_score_rule:\n        //solved_description:\n        //solved_quests:\n        //solved_badges:\n        this.closeOverlay = new core_1.EventEmitter();\n        this.stars = [];\n    }\n    SolvedOverlayComponent.prototype.ngOnInit = function () {\n        this.stars = [\n            { show: false, opacity: 1 },\n            { show: false, opacity: 1 },\n            { show: false, opacity: 1 },\n            { show: false, opacity: 1 },\n            { show: false, opacity: 1 }\n        ];\n        this.animateStar(0);\n        this.animateStar(1);\n        this.animateStar(2);\n        this.animateStar(3);\n        this.animateStar(4);\n    };\n    SolvedOverlayComponent.prototype.getType = function () {\n        return typeof this.solveddata[\"type\"] !== 'undefined' ? this.solveddata[\"type\"] : -1;\n    };\n    SolvedOverlayComponent.prototype.getName = function () {\n        return typeof this.solveddata[\"name\"] !== 'undefined' ? this.solveddata[\"name\"] : \"\";\n    };\n    SolvedOverlayComponent.prototype.getSolvedDescription = function () {\n        return typeof this.solveddata[\"solved_description\"] !== 'undefined' ? this.solveddata[\"solved_description\"] : \"\";\n    };\n    SolvedOverlayComponent.prototype.getScoreRule = function () {\n        return typeof this.solveddata[\"score_rule\"] !== 'undefined' ? this.solveddata[\"score_rule\"] : \"\";\n    };\n    SolvedOverlayComponent.prototype.getFacultyScoreRule = function () {\n        return typeof this.solveddata[\"faculty_score_rule\"] !== 'undefined' ? this.solveddata[\"faculty_score_rule\"] : \"\";\n    };\n    SolvedOverlayComponent.prototype.getSolvedQuests = function () {\n        return typeof this.solveddata[\"solved_quests\"] !== 'undefined' ? this.solveddata[\"solved_quests\"] : \"\";\n    };\n    SolvedOverlayComponent.prototype.getSolvedBadges = function () {\n        return typeof this.solveddata[\"solved_badges\"] !== 'undefined' ? this.solveddata[\"solved_badges\"] : \"\";\n    };\n    //Show Helper Functions\n    SolvedOverlayComponent.prototype.animateStar = function (starindex) {\n        var _this = this;\n        var randomNumber1 = 0;\n        this.stars[starindex].opacity = 0.5 + Math.random() * 0.5;\n        if (this.stars[starindex].show == false) {\n            this.stars[starindex].show = true;\n            randomNumber1 = Math.random() * 500;\n        }\n        else {\n            this.stars[starindex].show = false;\n            randomNumber1 = Math.random() * 3500;\n        }\n        setTimeout(function (s_index) { _this.animateStar(s_index); }, randomNumber1, starindex);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], SolvedOverlayComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], SolvedOverlayComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], SolvedOverlayComponent.prototype, \"solveddata\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], SolvedOverlayComponent.prototype, \"closeOverlay\", void 0);\n    SolvedOverlayComponent = __decorate([\n        core_1.Component({\n            selector: 'solvedoverlay-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n        <div class=\\\"overlay\\\" style=\\\"display: block;\\\">\\n          <div class=\\\"overlay_lightbox\\\" style=\\\"height: auto;\\\">\\n            <div class=\\\"overlay_buttons\\\" style=\\\"text-align: right;\\\">\\n              <div class=\\\"button\\\" (click)=\\\"closeOverlay.emit(true);\\\" style=\\\"width: 50px; float: right; margin-right: 5px; margin-top: 5px;text-align: center;\\\">X</div>\\n            </div>\\n            <div class=\\\"overlay_content\\\">\\n              <div style=\\\"position:relative;\\\">\\n                <img class=\\\"star-1\\\" [hidden]=\\\"stars[0].show==false\\\" [style.opacity]=\\\"stars[0].opacity\\\" src=\\\"./../public/images/star1.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-2\\\" [hidden]=\\\"stars[1].show==false\\\" [style.opacity]=\\\"stars[1].opacity\\\" src=\\\"./../public/images/star1.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-3\\\" [hidden]=\\\"stars[2].show==false\\\" [style.opacity]=\\\"stars[2].opacity\\\" src=\\\"./../public/images/star1.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-4\\\" [hidden]=\\\"stars[3].show==false\\\" [style.opacity]=\\\"stars[3].opacity\\\" src=\\\"./../public/images/star2.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n                <img class=\\\"star-5\\\" [hidden]=\\\"stars[4].show==false\\\" [style.opacity]=\\\"stars[4].opacity\\\" src=\\\"./../public/images/star2.png\\\" style=\\\"width: 50px; height: 50px;\\\">\\n              </div>\\n              <p class=\\\"headline\\\" style=\\\"font-size:1.4em!important;font-weight:bold!important;width:90%;margin-left:auto;margin-right:auto;padding-top:1em;text-align:center;\\\">\\n                {{getName()}}\\n              </p>\\n              <p [hidden]=\\\"getType() != 1 && getType() != 3\\\" class=\\\"headline2\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;text-align:center;\\\">\\n                Deine Erfahrung: +{{getScoreRule()}} EXP. <br>\\n                Fakult\\u00E4tsscore: +{{getFacultyScoreRule()}} EXP.\\n              </p>\\n              <div [innerHTML]=\\\"getSolvedDescription()\\\" [style.padding-bottom]=\\\"getSolvedQuests().length == 0 && getSolvedBadges().length == 0? '50px':'10px'\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;\\\">\\n              </div>\\n              <div [hidden]=\\\"getSolvedQuests().length == 0\\\" [style.padding-bottom]=\\\"getSolvedBadges().length == 0? '50px':'10px'\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;\\\">\\n                Damit hast du folgende Quests ebenfalls abgeschlossen:<br />\\n                <div [innerHTML]=\\\"getSolvedQuests()\\\"></div>\\n              </div>\\n              <div [hidden]=\\\"getSolvedBadges().length == 0\\\" style=\\\"width:90%;margin-left:auto;margin-right:auto;padding-bottom:50px;\\\">\\n                Damit hast du folgende Abzeichen ebenfalls erhalten:<br />\\n                <div [innerHTML]=\\\"getSolvedBadges()\\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], SolvedOverlayComponent);\n    return SolvedOverlayComponent;\n}());\nexports.SolvedOverlayComponent = SolvedOverlayComponent;\n//# sourceMappingURL=solvedoverlay.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/solvedoverlay.component.js\n ** module id = 79\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar StatisticsComponent = (function () {\n    function StatisticsComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n        this.user_score_period_active = \"10d\";\n        this.user_task_period_active = \"10d\";\n    }\n    StatisticsComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.user_score_period_active = \"10d\";\n        this.user_task_period_active = \"10d\";\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n            _this.initFacultyChart();\n            _this.updateChartUserScore(10, 0, 0, true);\n            _this.updateChartUserTasks(10, 0, 0, true);\n        });\n        this.lService.loadSpecificContent('statistics');\n    };\n    StatisticsComponent.prototype.getStatistics = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Statistics'] !== 'undefined' ? this.specificcontent['Statistics'] : {};\n    };\n    StatisticsComponent.prototype.getLastCompletedQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Last_Completed_Quests'] !== 'undefined' ? this.specificcontent['Last_Completed_Quests'] : [];\n    };\n    StatisticsComponent.prototype.getLastCompletedBadges = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Last_Completed_Badges'] !== 'undefined' ? this.specificcontent['Last_Completed_Badges'] : [];\n    };\n    StatisticsComponent.prototype.getLastCompletedTasks = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Last_Completed_Tasks'] !== 'undefined' ? this.specificcontent['Last_Completed_Tasks'] : [];\n    };\n    StatisticsComponent.prototype.getFaculties = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Faculties'] !== 'undefined' ? this.specificcontent['Faculties'] : [];\n    };\n    StatisticsComponent.prototype.getBestUsers = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Best_Users'] !== 'undefined' ? this.specificcontent['Best_Users'] : [];\n    };\n    StatisticsComponent.prototype.getBestUsersForFaculty = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Best_Users_For_Faculty'] !== 'undefined' ? this.specificcontent['Best_Users_For_Faculty'] : [];\n    };\n    StatisticsComponent.prototype.getCountBadges = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Badges'] !== 'undefined' ? this.specificcontent['Count_Badges'] : 0;\n    };\n    StatisticsComponent.prototype.getCountQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Count_Quests'] !== 'undefined' ? this.specificcontent['Count_Quests'] : 0;\n    };\n    StatisticsComponent.prototype.navigateToQuest = function (quest_id) {\n        this.router.navigate(['/l/quest', quest_id]);\n    };\n    StatisticsComponent.prototype.navigateToTask = function (task_id) {\n        this.router.navigate(['/l/task', task_id]);\n    };\n    StatisticsComponent.prototype.navigateToBadge = function (badge_id) {\n        this.router.navigate(['/l/badge', badge_id]);\n    };\n    StatisticsComponent.prototype.navigateToComponent = function (componentname) {\n        this.router.navigate([\"/l/\" + componentname]);\n    };\n    StatisticsComponent.prototype.updateChartUserScore = function (d, m, y, init) {\n        var ObjectForCalculation = {};\n        var tempObject = typeof this.getStatistics()[\"User_Statistic_2\"] !== 'undefined' ? this.getStatistics()[\"User_Statistic_2\"][\"json_statistic\"] : [];\n        for (var key in tempObject) {\n            ObjectForCalculation[key] = {};\n            ObjectForCalculation[key]['data'] = tempObject[key]['data'];\n            ObjectForCalculation[key]['ts'] = tempObject[key]['ts'];\n        }\n        var CalculatedChartDataScore = this.lService.getLabelsAndDataForChart(JSON.stringify(ObjectForCalculation), d, m, y, 'normal_comb');\n        var lineChartData_canvas_user_score = {\n            labels: $.map(CalculatedChartDataScore['labels'], function (el) { return el; }),\n            datasets: [\n                {\n                    strokeColor: 'rgba(251,78,0,1)',\n                    pointColor: 'rgba(251,78,0,1)',\n                    pointStrokeColor: '#fff',\n                    pointHighlightStroke: 'rgba(220,220,220,1)',\n                    data: $.map(CalculatedChartDataScore['data'], function (el) { return el; })\n                }\n            ]\n        };\n        var settingsObj_canvas_user_score = {\n            animation: false,\n            responsive: true,\n            scaleFontColor: '#000',\n            bezierCurve: false,\n            datasetFill: false,\n            scaleOverride: true,\n            scaleSteps: 8,\n            scaleStepWidth: Math.ceil(CalculatedChartDataScore['data'][Object.keys(CalculatedChartDataScore['data']).length - 1] / 8) + 1,\n            scaleStartValue: 0,\n            scaleLineColor: 'rgba(0,0,0,.6)',\n            scaleGridLineColor: 'rgba(0,0,0,.2)',\n            graphTitle: 'Erfahrung',\n            graphTitleFontSize: 18,\n            graphTitleFontColor: '#000',\n        };\n        if (typeof init === 'undefined' || init == false) {\n            var t_canvas = document.getElementById('canvas_user_score');\n            updateChart(t_canvas.getContext('2d'), lineChartData_canvas_user_score, settingsObj_canvas_user_score, false, false);\n        }\n        else {\n            $('#canvas_user_score').attr('width', $('#canvas_user_score').parent().width());\n            var t_canvas = document.getElementById('canvas_user_score');\n            new Chart(t_canvas.getContext('2d')).Line(lineChartData_canvas_user_score, settingsObj_canvas_user_score);\n        }\n    };\n    StatisticsComponent.prototype.updateChartUserTasks = function (d, m, y, init) {\n        var ObjectForCalculation = {};\n        var tempObject = typeof this.getStatistics()[\"User_Statistic_1\"] !== 'undefined' ? this.getStatistics()[\"User_Statistic_1\"][\"json_statistic\"] : [];\n        for (var key in tempObject) {\n            ObjectForCalculation[key] = {};\n            ObjectForCalculation[key]['data'] = tempObject[key]['data'];\n            ObjectForCalculation[key]['ts'] = tempObject[key]['ts'];\n        }\n        var CalculatedChartDataTasks = this.lService.getLabelsAndDataForChart(JSON.stringify(ObjectForCalculation), d, m, y, 'normal_comb');\n        var lineChartData_canvas_user_tasks = {\n            labels: $.map(CalculatedChartDataTasks['labels'], function (el) { return el; }),\n            datasets: [\n                {\n                    strokeColor: 'rgba(251,78,0,1)',\n                    pointColor: 'rgba(251,78,0,1)',\n                    pointStrokeColor: '#fff',\n                    pointHighlightStroke: 'rgba(220,220,220,1)',\n                    data: $.map(CalculatedChartDataTasks['data'], function (el) { return el; })\n                }\n            ]\n        };\n        var settingsObj_canvas_user_tasks = {\n            animation: false,\n            responsive: true,\n            scaleFontColor: '#000',\n            bezierCurve: false,\n            datasetFill: false,\n            scaleOverride: true,\n            scaleSteps: 8,\n            scaleStepWidth: Math.ceil(CalculatedChartDataTasks['data'][Object.keys(CalculatedChartDataTasks['data']).length - 1] / 8) + 1,\n            scaleStartValue: 0,\n            scaleLineColor: 'rgba(0,0,0,.6)',\n            scaleGridLineColor: 'rgba(0,0,0,.2)',\n            graphTitle: 'Aufgaben',\n            graphTitleFontSize: 18,\n            graphTitleFontColor: '#000',\n        };\n        if (typeof init === 'undefined' || init == false) {\n            var t_canvas = document.getElementById('canvas_user_tasks');\n            updateChart(t_canvas.getContext('2d'), lineChartData_canvas_user_tasks, settingsObj_canvas_user_tasks, false, false);\n        }\n        else {\n            $('#canvas_user_tasks').attr('width', $('#canvas_user_tasks').parent().width());\n            var t_canvas = document.getElementById('canvas_user_tasks');\n            new Chart(t_canvas.getContext('2d')).Line(lineChartData_canvas_user_tasks, settingsObj_canvas_user_tasks);\n        }\n    };\n    StatisticsComponent.prototype.initFacultyChart = function () {\n        var t_facultyname_array = [];\n        var t_facultyscore_array = [];\n        var max_value_faculty_score = 0;\n        for (var _i = 0, _a = this.getFaculties(); _i < _a.length; _i++) {\n            var t_faculty = _a[_i];\n            t_facultyname_array.push(t_faculty.facultyname);\n            t_facultyscore_array.push(t_faculty.faculty_score);\n            if (parseInt(t_faculty.faculty_score) > max_value_faculty_score)\n                max_value_faculty_score = parseInt(t_faculty.faculty_score);\n        }\n        var lineChartData_canvas_faculties = {\n            labels: t_facultyname_array,\n            datasets: [\n                {\n                    fillColor: 'green',\n                    data: t_facultyscore_array,\n                }\n            ]\n        };\n        var settingsObj_canvas_faculties = {\n            animation: false,\n            responsive: true,\n            scaleFontColor: '#000',\n            scaleOverride: true,\n            scaleSteps: 8,\n            scaleStepWidth: Math.ceil(max_value_faculty_score / 8) + 1,\n            scaleStartValue: 0,\n            inGraphDataShow: true,\n            inGraphDataXPosition: 2,\n            inGraphDataAlign: 'center',\n            inGraphDataFontColor: '#fff',\n            graphTitle: 'Fakultätenhighscore',\n            graphTitleFontSize: 18,\n            graphTitleFontColor: '#000',\n        };\n        $('#canvas_faculties').attr('width', $('#canvas_faculties').parent().width());\n        var t_canvas = document.getElementById('canvas_faculties');\n        new Chart(t_canvas.getContext('2d')).HorizontalBar(lineChartData_canvas_faculties, settingsObj_canvas_faculties);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], StatisticsComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], StatisticsComponent.prototype, \"universalcontent\", void 0);\n    StatisticsComponent = __decorate([\n        core_1.Component({\n            selector: 'statistics-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12 col-sm-7\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- USER \\u00DCbersicht -->\\n        <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Dein Fortschritt</p>\\n\\n            <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                <div class=\\\"depend-on-device-tablerow-to-none\\\" style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                    <div id=\\\"cf-ho-overview-stats-quests\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Quests</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.completed_quests}}/{{getCountQuests()}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div id=\\\"cf-ho-overview-stats-badges\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Abzeichen</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.completed_badges}}/{{getCountBadges()}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div id=\\\"cf-ho-overview-stats-tasks\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Aufgaben</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.completed_tasks}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"col-xs-6 col-sm-3\\\" style=\\\"vertical-align:top;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;\\\">Erfahrung</p>\\n                        <p style=\\\"font-size:1em;text-align:center;color: black;\\\">{{user?.user_score}}</p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                    <div style=\\\"clear:both;\\\"></div>\\n\\n                </div>\\n\\n\\n            </div>\\n\\n\\n\\n        </div>\\n\\n        <!-- Overview departments -->\\n        <div id=\\\"cf-ho-statistic-departments\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">\\u00DCbersicht \\u00FCber die Fakult\\u00E4ten</p>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <canvas id=\\\"canvas_faculties\\\" height=\\\"300\\\"></canvas>\\n            </div>\\n\\n        </div>\\n\\n        <!-- USER SCORE -->\\n        <div id=\\\"cf-st-user-score\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Deine Erfahrung im Zeitverlauf</p>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <div style=\\\"display:inline-block;border:2px solid rgb(0,0,0);border-radius:4px;\\\">\\n                    <div (click)=\\\"updateChartUserScore(10,0,0);user_score_period_active='10d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='10d'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='10d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">10 Tage</div>\\n                    <div (click)=\\\"updateChartUserScore(30,0,0);user_score_period_active='30d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='30d'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='30d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">30 Tage</div>\\n                    <div (click)=\\\"updateChartUserScore(0,6,0);user_score_period_active='6m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='6m'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='6m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">6 Monate</div>\\n                    <div (click)=\\\"updateChartUserScore(0,12,0);user_score_period_active='12m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='12m'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='12m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">12 Monate</div>\\n                    <div (click)=\\\"updateChartUserScore(0,24,0);user_score_period_active='24m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='24m'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='24m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">24 Monate</div>\\n                    <div (click)=\\\"updateChartUserScore(0,0,5);user_score_period_active='5y';\\\" [class.whiteButtonClass-currentItem]=\\\"user_score_period_active=='5y'\\\" [class.whiteButtonClass]=\\\"user_score_period_active!='5y'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">5 Jahre</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <canvas id=\\\"canvas_user_score\\\" height=\\\"400\\\"></canvas>\\n            </div>\\n\\n        </div>\\n\\n        <!-- USER COMPLETED TASKS -->\\n        <div id=\\\"cf-st-user-tasks\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Deine gel\\u00F6sten Aufgaben im Zeitverlauf</p>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <div style=\\\"display:inline-block;border:2px solid rgb(0,0,0);border-radius:4px;\\\">\\n                    <div (click)=\\\"updateChartUserTasks(10,0,0);user_task_period_active='10d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='10d'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='10d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">10 Tage</div>\\n                    <div (click)=\\\"updateChartUserTasks(30,0,0);user_task_period_active='30d';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='30d'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='30d'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">30 Tage</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,6,0);user_task_period_active='6m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='6m'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='6m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">6 Monate</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,12,0);user_task_period_active='12m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='12m'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='12m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">12 Monate</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,24,0);user_task_period_active='24m';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='24m'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='24m'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">24 Monate</div>\\n                    <div (click)=\\\"updateChartUserTasks(0,0,5);user_task_period_active='5y';\\\" [class.whiteButtonClass-currentItem]=\\\"user_task_period_active=='5y'\\\" [class.whiteButtonClass]=\\\"user_task_period_active!='5y'\\\" class=\\\"depend-on-device-none-to-33-percentage-width\\\" style=\\\"float:left;padding:5px 10px;\\\">5 Jahre</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <div style=\\\"width:100%;\\\">\\n                <canvas id=\\\"canvas_user_tasks\\\" height=\\\"400\\\"></canvas>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-sm-5 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- Last gathered quests -->\\n        <div id=\\\"cf-ho-completed-quests\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Zuletzt gel\\u00F6ste Quests</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 10px!important;color:rgb(255,255,255);\\\">\\n\\n              <div *ngIf=\\\"getLastCompletedQuests().length == 0\\\" (click)=\\\"navigateToComponent('tasks')\\\" style='width:100%;padding:0 20px;text-align:justify;margin-bottom:1em;'><span class='link'>Du hast leider noch keine abgeschlossenen Quests. Klicke hier, um zu deinen aktuellen Quests zu gelangen.</span></div>\\n\\n              <div *ngFor=\\\"let t_quest_data of getLastCompletedQuests();\\\" style='display:table-row;vertical-align:top;'>\\n                  <div style='display:table-cell;vertical-align:top;'>\\n                      <p style='font-size:1.1em;text-align:center;'><span (click)=\\\"navigateToQuest(t_quest_data.quest_id)\\\" class='link'>{{t_quest_data.questname}}</span></p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;min-width:100px;'>\\n                      <p style='font-size:1.1em;text-align:center;'>+{{t_quest_data.score_rule}} Exp.</p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;'>\\n                      <p style='font-size:1em;text-align:center;'>{{lService.getFormatedDate(t_quest_data.ts_quest_completed)}}</p>\\n                  </div>\\n              </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <!-- Last gathered badges -->\\n        <div id=\\\"cf-ho-gathered-badges\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Zuletzt gesammelte Abzeichen</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 10px!important;color:rgb(255,255,255);\\\">\\n\\n              <div *ngIf=\\\"getLastCompletedBadges().length == 0\\\" (click)=\\\"navigateToComponent('userprogress')\\\" style='width:100%;padding:0 20px;text-align:justify;margin-bottom:1em;'><span class='link'>Du hast leider noch kein gesammeltes Abzeichen.</span></div>\\n\\n              <div *ngFor=\\\"let t_badge_data of getLastCompletedBadges()\\\" style='display:table-row;vertical-align:top;'>\\n                  <div style='display:table-cell;vertical-align:top;'>\\n                      <img style='width:5em;' src='{{lService.getPictureLink(t_badge_data.picture_id)}}'>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;min-width:120px;'>\\n                      <p style='font-size:1.1em;text-align:center;'>{{t_badge_data.badgename}}</p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;'>\\n                      <p style='font-size:1em;text-align:center;'>{{lService.getFormatedDate(t_badge_data.ts_badge_completed)}}</p>\\n                  </div>\\n              </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <!-- Last completed tasks -->\\n        <div id=\\\"cf-ho-completed-tasks\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Zuletzt gel\\u00F6ste Aufgaben</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 10px!important;color:rgb(255,255,255);\\\">\\n\\n              <div *ngIf=\\\"getLastCompletedTasks().length == 0\\\" (click)=\\\"navigateToComponent('tasks')\\\" style='width:100%;padding:0 20px;text-align:justify;margin-bottom:1em;'><span class='link'>Du hast leider noch keine gel\\u00F6sten Aufgaben. Klicke hier, um zu deinen aktuellen Aufgaben zu gelangen.</span></div>\\n\\n              <div *ngFor=\\\"let t_task_data of getLastCompletedTasks()\\\" style='display:table-row;vertical-align:top;'>\\n                  <p style='display:table-cell;vertical-align:middle;font-size:1.1em;text-align:center;'><span (click)=\\\"navigateToTask(t_task_data.task_id)\\\" class='link'>{{t_task_data.taskname}}</span></p>\\n                  <div style='display:table-cell;vertical-align:middle;min-width:100px;'>\\n                      <p style='font-size:1.1em;text-align:center;'>+{{t_task_data.score_rule}} Exp.</p>\\n                  </div>\\n                  <div style='display:table-cell;vertical-align:middle;'>\\n                      <p style='font-size:1em;text-align:center;'>{{lService.getFormatedDate(t_task_data.ts_last_update)}}</p>\\n                  </div>\\n              </div>\\n\\n            </div>\\n\\n\\n        </div>\\n\\n        <!-- Best Users -->\\n        <div id=\\\"cf-ho-best-users\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\"><span (click)=\\\"navigateToComponent('highscorelist/0')\\\" class=\\\"link\\\">Die besten User</span></p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 2px;color:rgb(255,255,255);\\\">\\n\\n\\n                <div style='display:table-row;width:100%;'>\\n\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">NAME</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">EXP.</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">FAK.</p>\\n                    </div>\\n\\n                </div>\\n\\n                <div *ngFor=\\\"let t_user of getBestUsers()\\\" style='display:table-row;vertical-align:top;'>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1em;text-align:center;'>{{t_user.username}}</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1.1em;text-align:center;'>{{t_user.user_score}}</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1em;text-align:center;'>{{t_user.facultyname}}</p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <!-- Best Users for Users Faculty -->\\n        <div id=\\\"cf-ho-best-users-faculty\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Die besten User deiner Fakult\\u00E4t</p>\\n\\n            <div style=\\\"display:table;width:100%;border-spacing:2px 2px;color:rgb(255,255,255);\\\">\\n\\n\\n                <div style='display:table-row;width:100%;'>\\n\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">NAME</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;text-decoration:underline;\\\">EXP.</p>\\n                    </div>\\n\\n                </div>\\n\\n                <div *ngFor=\\\"let t_user of getBestUsersForFaculty()\\\" style='display:table-row;vertical-align:top;'>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1em;text-align:center;'>{{t_user.username}}</p>\\n                    </div>\\n                    <div style='display:table-cell;vertical-align:top;'>\\n                        <p style='font-size:1.1em;text-align:center;'>{{t_user.user_score}}</p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n\\n    </div>\\n\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], StatisticsComponent);\n    return StatisticsComponent;\n}());\nexports.StatisticsComponent = StatisticsComponent;\n//# sourceMappingURL=statistics.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/statistics.component.js\n ** module id = 80\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar TaskComponent = (function () {\n    function TaskComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n        //Task Type 1\n        this.shuffleArrayTaskType1 = [1, 2, 3, 4];\n        this.shuffleArrayTaskType4 = [1, 2, 3];\n        //Solving Parameters\n        this.successfullSolved = false;\n        this.notSuccessfullSolved = false;\n        //Solved Overlay\n        this.solvedOverlayArray = [];\n    }\n    TaskComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.successfullSolved = false;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            console.log(\"Specific Content\");\n            console.log(specificcontent);\n            if (typeof specificcontent[\"TASK_DATA\"] !== 'undefined' && typeof specificcontent[\"TASK_DATA\"].json_task_data !== 'undefined')\n                specificcontent[\"TASK_DATA\"].json_task_data = JSON.parse(specificcontent[\"TASK_DATA\"].json_task_data);\n            _this.shuffle(_this.shuffleArrayTaskType1);\n            _this.shuffle(_this.shuffleArrayTaskType4);\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n            if (_this.getTaskData().task_type_id == \"3\") {\n                setTimeout(function () { _this.initBarcodeReader(); }, 300);\n            }\n            if (_this.getTaskData().task_type_id == \"6\" && _this.additionalinformation.length != 0 && !isNaN(parseFloat(_this.additionalinformation))) {\n                _this.solveTaskType6(_this.additionalinformation);\n            }\n        });\n        this.lService.loadSpecificContent('task&task_id=' + this.task_id);\n    };\n    TaskComponent.prototype.getTaskBlockedData = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['TASK_BLOCKED_DATA'] !== 'undefined' ? this.specificcontent['TASK_BLOCKED_DATA'] : {};\n    };\n    TaskComponent.prototype.getUserTaskScore = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_TASK_SCORE'] !== 'undefined' ? this.specificcontent['USER_TASK_SCORE'] : {\n            value: \"0\",\n            score: \"0\"\n        };\n    };\n    TaskComponent.prototype.getTaskData = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['TASK_DATA'] !== 'undefined' ? this.specificcontent['TASK_DATA'] : {\n            task_type_id: \"0\",\n            json_task_data: {},\n            needed_value: \"0\",\n            score_rule: \"1\"\n        };\n    };\n    TaskComponent.prototype.getQuestsContainingTaskId = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['QUESTS_CONTAINING_TASK_ID'] !== 'undefined' ? this.specificcontent['QUESTS_CONTAINING_TASK_ID'] : [];\n    };\n    TaskComponent.prototype.getIsTaskBlocked = function () {\n        return typeof this.getTaskBlockedData().ts_blocked !== 'undefined' && (this.getTaskBlockedData().ts_blocked + \"\").length != 0;\n    };\n    TaskComponent.prototype.getIsTaskSolvedByUser = function () {\n        return parseFloat(this.getUserTaskScore().value) >= parseFloat(this.getTaskData().needed_value);\n    };\n    TaskComponent.prototype.getIsTaskActive = function () {\n        return this.getTaskData().is_task_active == '1';\n    };\n    TaskComponent.prototype.navigateToQuest = function (quest_id) {\n        this.router.navigate(['/l/quest', quest_id]);\n    };\n    TaskComponent.prototype.solveTaskOverall = function (solvedata, task_id) {\n        var _this = this;\n        this.lService.solveTask(solvedata, task_id).subscribe(function (data) {\n            console.log(data);\n            if (typeof data.result !== 'undefined' && data.result == true && typeof data.data !== 'undefined' && typeof data.data.task_solved !== 'undefined' && data.data.task_solved == true) {\n                _this.successfullSolved = true;\n                //Start Solved Overlay\n                var t_solved_badges = \"\";\n                var t_solved_quests = \"\";\n                //Solved Badges\n                if (typeof data.data[\"badges\"] !== 'undefined') {\n                    for (var t_key_badges in data.data[\"badges\"]) {\n                        t_solved_badges += \"-\" + data.data[\"badges\"][t_key_badges][\"badgename\"] + \"<br />\";\n                        _this.solvedOverlayArray.push({\n                            type: 2,\n                            name: \"Abzeichen erhalten\",\n                            solved_description: \"Herzlichen Glückwunsch! Du hast das Abzeichen '\" + data.data[\"badges\"][t_key_badges][\"badgename\"] + \"' abgeschlossen.<br /><img src='\" + _this.lService.getPictureLink(data.data[\"badges\"][t_key_badges][\"picture_id\"]) + \"' />\"\n                        });\n                    }\n                }\n                //Solved Quests\n                if (typeof data.data[\"quests\"] !== 'undefined') {\n                    for (var t_key_quests in data.data[\"quests\"]) {\n                        t_solved_quests += \"-\" + data.data[\"quests\"][t_key_quests][\"questname\"] + \"<br />\";\n                        _this.solvedOverlayArray.push({\n                            type: 3,\n                            name: \"Quest erfüllt\",\n                            solved_description: \"Herzlichen Glückwunsch! Du hast den Quest '\" + data.data[\"quests\"][t_key_quests][\"questname\"] + \"' abgeschlossen.\",\n                            score_rule: data.data[\"quests\"][t_key_quests][\"score_rule\"],\n                            faculty_score_rule: data.data[\"quests\"][t_key_quests][\"score_rule\"]\n                        });\n                    }\n                }\n                //Solved Tasks\n                if (typeof data.data[\"tasks\"] !== 'undefined') {\n                    for (var t_key_tasks in data.data[\"tasks\"]) {\n                        _this.solvedOverlayArray.push({\n                            type: 1,\n                            name: \"Aufgabe erfüllt\",\n                            solved_description: \"Herzlichen Glückwunsch! Du hast die Aufgabe '\" + data.data[\"tasks\"][t_key_tasks][\"taskname\"] + \"' abgeschlossen.\",\n                            score_rule: data.data[\"tasks\"][t_key_tasks][\"score_rule\"],\n                            faculty_score_rule: data.data[\"tasks\"][t_key_tasks][\"score_rule\"],\n                            solved_quests: t_solved_quests,\n                            solved_badges: t_solved_badges\n                        });\n                    }\n                }\n                //End Solved Overlay\n                //Reload Data\n                _this.lService.loadSpecificContent('task&task_id=' + _this.task_id);\n            }\n            else {\n                window.alert(\"Leider hast du die Aufgabe nicht erfolgreich gelöst! Bitte versuche es erneut!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n        });\n    };\n    //Task Type 1\n    TaskComponent.prototype.getTaskType1Answer = function (id) {\n        if (typeof this.user.language === 'undefined' || this.user.language.length == 0 || $.isEmptyObject(this.getTaskData().json_task_data))\n            return { id: \"\", answer: \"\" };\n        return { id: \"a\" + this.shuffleArrayTaskType1[id], answer: this.getTaskData().json_task_data[this.user.language][\"a\" + this.shuffleArrayTaskType1[id]] };\n    };\n    TaskComponent.prototype.solveTaskType1 = function (id) {\n        var solvedata = JSON.stringify({ chosenanswer: this.getTaskType1Answer(id).id });\n        this.solveTaskOverall(solvedata, this.task_id);\n    };\n    //Task Type 2 -- Locationsearch\n    TaskComponent.prototype.solveTaskType2 = function (id) {\n    };\n    //Task Type 3\n    TaskComponent.prototype.solveTaskType3 = function (isbn) {\n        var solvedata = JSON.stringify({ \"isbn\": isbn });\n        this.solveTaskOverall(solvedata, this.task_id);\n    };\n    TaskComponent.prototype.initBarcodeReader = function () {\n        var _this = this;\n        var takePicture = document.querySelector(\"#upload-barcode-pic\");\n        var showPicture = document.createElement(\"img\");\n        var Result = document.querySelector(\"#cf-tas-specification-task-3-result-text\");\n        var canvas = document.getElementById(\"task-3-picture\");\n        var ctx = canvas.getContext(\"2d\");\n        JOB.Init();\n        JOB.SetImageCallback(function (result) {\n            if (result.length > 0) {\n                var tempArray = [];\n                for (var i = 0; i < result.length; i++) {\n                    tempArray.push(\"Gefundene ISBN : \" + result[i].Value);\n                }\n                Result.innerHTML = tempArray.join(\"<br />\");\n                //Wert ist in result[0].Value enthalten\n                //Sende die Daten hier noch\n                _this.solveTaskType3(result[0].Value + \"\");\n            }\n            else {\n                if (result.length === 0) {\n                    Result.innerHTML = \"Dekodieren ist leider fehlgeschlagen. Bitte versuche es mit einem Bild von besserer Qualität!\";\n                }\n            }\n        });\n        JOB.PostOrientation = true;\n        JOB.OrientationCallback = function (result) {\n            canvas.width = result.width;\n            canvas.height = result.height;\n            var data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            for (var i = 0; i < data.data.length; i++) {\n                data.data[i] = result.data[i];\n            }\n            ctx.putImageData(data, 0, 0);\n        };\n        JOB.SwitchLocalizationFeedback(true);\n        JOB.SetLocalizationCallback(function (result) {\n            ctx.beginPath();\n            ctx.lineWIdth = \"2\";\n            ctx.strokeStyle = \"red\";\n            for (var i = 0; i < result.length; i++) {\n                ctx.rect(result[i].x, result[i].y, result[i].width, result[i].height);\n            }\n            ctx.stroke();\n        });\n        if (takePicture && showPicture) {\n            takePicture.onchange = function (event) {\n                $(\"#task-3-picture\").show();\n                var files = event.target.files;\n                if (files && files.length > 0) {\n                    var file = files[0];\n                    try {\n                        var URL = window.URL || window.webkitURL;\n                        showPicture.onload = function (event) {\n                            Result.innerHTML = \"\";\n                            JOB.DecodeImage(showPicture);\n                            URL.revokeObjectURL(showPicture.src);\n                        };\n                        showPicture.src = URL.createObjectURL(file);\n                    }\n                    catch (e) {\n                        try {\n                            var fileReader = new FileReader();\n                            fileReader.onload = function (event) {\n                                showPicture.onload = function (event) {\n                                    Result.innerHTML = \"\";\n                                    console.log(\"filereader\");\n                                    JOB.DecodeImage(showPicture);\n                                };\n                                showPicture.src = event.target.result;\n                            };\n                            fileReader.readAsDataURL(file);\n                        }\n                        catch (e) {\n                            Result.innerHTML = \"Neither createObjectURL or FileReader are supported\";\n                        }\n                    }\n                }\n            };\n        }\n    };\n    //Task Type 4\n    TaskComponent.prototype.getTaskType4Answer = function (id) {\n        if (typeof this.user.language === 'undefined' || this.user.language.length == 0 || $.isEmptyObject(this.getTaskData().json_task_data))\n            return { id: \"\", answer: \"\" };\n        return { id: \"s\" + this.shuffleArrayTaskType4[id], answer: this.getTaskData().json_task_data[this.user.language][\"s\" + this.shuffleArrayTaskType4[id]] };\n    };\n    TaskComponent.prototype.exchangeShuffleArrayPosition = function (id1, id2) {\n        var t_value_id1 = this.shuffleArrayTaskType4[id1];\n        this.shuffleArrayTaskType4[id1] = this.shuffleArrayTaskType4[id2];\n        this.shuffleArrayTaskType4[id2] = t_value_id1;\n    };\n    TaskComponent.prototype.solveTaskType4 = function () {\n        var solvedata = JSON.stringify({ \"1\": \"s\" + this.shuffleArrayTaskType4[0], \"2\": \"s\" + this.shuffleArrayTaskType4[1], \"3\": \"s\" + this.shuffleArrayTaskType4[2] });\n        this.solveTaskOverall(solvedata, this.task_id);\n    };\n    //Task Type 5\n    TaskComponent.prototype.getTaskType5TextWithoutBlankStatement = function () {\n        if (typeof this.user.language === 'undefined' || this.user.language.length == 0 || $.isEmptyObject(this.getTaskData().json_task_data))\n            return { text: \"\" };\n        return { text: this.getTaskData().json_task_data[this.user.language][\"text\"].replace(\"[::BLANK::]\", \"___\") };\n    };\n    TaskComponent.prototype.solveTaskType5 = function () {\n        var solvedata = JSON.stringify({ text: $('#input-specification-task-blank').val() });\n        this.solveTaskOverall(solvedata, this.task_id);\n    };\n    //Task Type 6\n    TaskComponent.prototype.solveTaskType6 = function (location_id) {\n        var solvedata = JSON.stringify({ \"loc\": location_id });\n        this.solveTaskOverall(solvedata, this.task_id);\n    };\n    //Solved Overlay Methods\n    TaskComponent.prototype.removeFromSolvedOverlayArray = function (index) {\n        this.solvedOverlayArray.splice(index, 1);\n    };\n    //Helper\n    TaskComponent.prototype.shuffle = function (a) {\n        for (var i = a.length; i; i--) {\n            var j = Math.floor(Math.random() * i);\n            _a = [a[j], a[i - 1]], a[i - 1] = _a[0], a[j] = _a[1];\n        }\n        var _a;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TaskComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TaskComponent.prototype, \"universalcontent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TaskComponent.prototype, \"task_id\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TaskComponent.prototype, \"additionalinformation\", void 0);\n    TaskComponent = __decorate([\n        core_1.Component({\n            selector: 'task-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n        <div *ngIf=\\\"getIsTaskBlocked()\\\" class=\\\"content-frame\\\">\\n\\n            <div class=\\\"content-task-frame\\\" style=\\\"margin:0px;border-radius:0px;width:100%!important;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div style=\\\"font-size:1.5em!important;\\\">Aufgabe: {{getTaskData().taskname}}</div>\\n                    <br>\\n                    <div id=\\\"task-description-healine\\\" [innerHTML]=\\\"getTaskData().description_long\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <p class='headline' style=\\\"background:rgb(255,120,120);\\\">\\n                Diese Aufgabe ist zur Zeit f\\u00FCr dich nicht l\\u00F6sbar.\\n                <br>\\n                Wieder l\\u00F6sbar ab: {{lService.getFormatedDate(getTaskBlockedData().ts_blocked)}}\\n            </p>\\n        </div>\\n\\n        <div *ngIf=\\\"getIsTaskSolvedByUser()\\\" class=\\\"content-frame\\\">\\n\\n            <div class=\\\"content-task-frame\\\" style=\\\"margin:0px;border-radius:0px;width:100%!important;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div style=\\\"font-size:1.5em!important;\\\">Aufgabe: {{getTaskData().taskname}}</div>\\n                    <br>\\n                    <div id=\\\"task-description-healine\\\" [innerHTML]=\\\"getTaskData().description_long\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <p class='headline' style=\\\"background:rgb(120,255,120);\\\">\\n                Du hast diese Aufgabe bereits gel\\u00F6st.\\n                <br>\\n                Gel\\u00F6st am: {{lService.getFormatedDate(getUserTaskScore().ts_last_update)}}\\n            </p>\\n        </div>\\n\\n        <div *ngIf=\\\"!getIsTaskActive()\\\" class=\\\"content-frame\\\" >\\n            <p class='headline' style=\\\"background:rgb(255,120,120);\\\">\\n                Diese Aufgabe ist nicht l\\u00E4nger aktiv!\\n            </p>\\n        </div>\\n\\n        <!-- Specific Task Data -->\\n        <div *ngIf=\\\"!getIsTaskBlocked() && !getIsTaskSolvedByUser() && getIsTaskActive()\\\" id=\\\"cf-tas-specification-task\\\" class=\\\"content-frame\\\" style=\\\"padding-bottom: 10px;\\\">\\n\\n            <div class=\\\"content-task-frame\\\" style=\\\"margin:0px;border-radius:0px;width:100%!important;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div style=\\\"font-size:1.5em!important;\\\">Aufgabe: {{getTaskData().taskname}}</div>\\n                    <br>\\n                    <div id=\\\"task-description-healine\\\" [innerHTML]=\\\"getTaskData().description_long\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n            </div>\\n\\n            <!-- Task Type 1 -->\\n            <div *ngIf=\\\"getTaskData().task_type_id==1\\\" class='cf-tas-specification-task-1 depend-on-device-table-to-none' style='width:100%;border-spacing:10px 15px;margin-top:5px;'>\\n                <div class='depend-on-device-tablerow-to-none' style='width:100%;'>\\n\\n                    <div (click)=\\\"solveTaskType1(0)\\\" [innerHTML]=\\\"getTaskType1Answer(0).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;'>\\n                    </div>\\n\\n                    <div (click)=\\\"solveTaskType1(1)\\\" [innerHTML]=\\\"getTaskType1Answer(1).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;color:white!important;'>\\n                    </div>\\n\\n                </div>\\n                <div class='depend-on-device-tablerow-to-none' style='width:100%;'>\\n\\n                    <div (click)=\\\"solveTaskType1(2)\\\" [innerHTML]=\\\"getTaskType1Answer(2).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;'>\\n                    </div>\\n\\n                    <div (click)=\\\"solveTaskType1(3)\\\" [innerHTML]=\\\"getTaskType1Answer(3).answer\\\" class='cf-tas-specification-task-1-answer depend-on-device-tablecell-to-none depend-on-device-none-to-inlineblock depend-on-device-fifty-to-hundred-percentage-width' style='text-align:center;vertical-align:middle;margin-bottom:0.2em;'>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <!-- Task Type 2 -->\\n            <div *ngIf=\\\"getTaskData().task_type_id==2\\\" class=\\\"cf-tas-specification-task-2\\\">\\n\\n                <div id=\\\"map\\\" style=\\\"width:100%;height:350px;text-align:center;font-size:1.5em;color:black;background:url(../public/images/kachel.png);background-repeat:repeat;\\\">\\n                    Du wirst zur Zeit lokalisiert. Bitte checke, ob du deinem Browser das Recht gew\\u00E4hrst auf deinen Standort zuzugreifen.\\n                </div>\\n\\n\\n                <button id=\\\"cf-tas-specification-task-2-check-in\\\" class=\\\"button\\\">QR Code hochladen</button>\\n\\n                <div style=\\\"width:320px;margin:0!important;margin-right:auto!important;margin-left:auto!important;margin-top:1em!important;\\\">\\n                    <img id=\\\"qrcode-picture-img\\\" width=\\\"320\\\" style=\\\"display:none;\\\">\\n                </div>\\n\\n                <div class=\\\"content-frame\\\">\\n                    <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                        <span class=\\\"fa fa-exclamation-triangle\\\"></span> Du kannst diese Aufgabe auch durch Scannen des QR Codes an dem Ort l\\u00F6sen!\\n                    </p>\\n                </div>\\n\\n                <div class=\\\"content-frame\\\">\\n                    <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                        <span class=\\\"fa fa-exclamation-triangle\\\"></span> Das Spiel lokalisiert deine Position in einem gewissen Interval, sobald du die Webseite ge\\u00F6ffnet hast und deine Zustimmung hierzu gegeben hast! Solltest du also in der N\\u00E4he des gesuchten Ortes sein, wirst du automatisch benachrichtigt.\\n                    </p>\\n                </div>\\n\\n            </div>\\n\\n            <!-- Task Type 3 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==3\\\" class=\\\"cf-tas-specification-task-3\\\" style=\\\"margin-top:30px;\\\">\\n                <div style=\\\"width:320px;margin:0!important;margin-right:auto!important;margin-left:auto!important;\\\">\\n                    <canvas width=\\\"320\\\" height=\\\"240\\\" id=\\\"task-3-picture\\\" style=\\\"display:none;\\\"></canvas>\\n                </div>\\n                <p id=\\\"cf-tas-specification-task-3-result-text\\\" style=\\\"width:100%;text-align:center;margin-top:20px;\\\"></p>\\n                <button onclick=\\\"$('#upload-barcode-pic').click();\\\" class=\\\"button\\\">Lade einen Barcode hoch!</button>\\n                <input id=\\\"upload-barcode-pic\\\" type=\\\"file\\\" accept=\\\"image/*\\\" style=\\\"display:none;\\\" />\\n            </div>\\n\\n\\n            <!-- Task Type 4 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==4\\\" class=\\\"cf-tas-specification-task-4\\\" style=\\\"padding:0 1.5em;\\\">\\n                <div id=\\\"cf-tas-specification-task-source-1\\\" style=\\\"margin-top:1em;width:100%;line-height:3em;background:green;color:rgb(0,0,0);vertical-align:middle;text-align:center;\\\">\\n                    <div style=\\\"min-width:30%;float:left;color:transparent;\\\">a</div>\\n                    <div class=\\\"cf-tas-specification-task-4-source\\\" style=\\\"width:40%;float:left;\\\">{{getTaskType4Answer(0).answer}}</div>\\n                    <div class=\\\"fa fa-arrow-circle-o-down\\\" (click)=\\\"exchangeShuffleArrayPosition(0,1);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n                <div id=\\\"cf-tas-specification-task-source-2\\\" style=\\\"margin-top:1em;width:100%;line-height:3em;background:yellow;color:rgb(0,0,0);vertical-align:middle;text-align:center;cursor:pointer;\\\">\\n                    <div class=\\\"fa fa-arrow-circle-o-up\\\" (click)=\\\"exchangeShuffleArrayPosition(0,1);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div class=\\\"cf-tas-specification-task-4-source\\\" style=\\\"width:40%;float:left;\\\">{{getTaskType4Answer(1).answer}}</div>\\n                    <div class=\\\"fa fa-arrow-circle-o-down\\\" (click)=\\\"exchangeShuffleArrayPosition(1,2);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n                <div id=\\\"cf-tas-specification-task-source-3\\\" style=\\\"margin-top:1em;width:100%;line-height:3em;background:red;color:rgb(0,0,0);vertical-align:middle;text-align:center;cursor:pointer;\\\">\\n                    <div class=\\\"fa fa-arrow-circle-o-up\\\" (click)=\\\"exchangeShuffleArrayPosition(1,2);\\\" style=\\\"width:30%;float:left;cursor:pointer;line-height:3em;vertical-align:middle;\\\"></div>\\n                    <div class=\\\"cf-tas-specification-task-4-source\\\" style=\\\"width:40%;float:left;\\\">{{getTaskType4Answer(2).answer}}</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                </div>\\n\\n                <button id=\\\"cf-tas-specification-task-4-send-button\\\" (click)=\\\"solveTaskType4()\\\" class=\\\"button\\\" style=\\\"margin-top:3em;margin-bottom:0.3em;\\\">\\u00DCberpr\\u00FCfe jetzt meine Antwort</button>\\n            </div>\\n\\n            <!-- Task Type 5 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==5\\\" class=\\\"cf-tas-specification-task-5\\\" style=\\\"padding:0 1.5em;\\\">\\n                <div class=\\\"cf-tas-specification-task-blank-text\\\" style=\\\"margin-top:1em;width:100%;color:rgb(0,0,0);vertical-align:middle;text-align:center;\\\">\\n                    <p>{{getTaskType5TextWithoutBlankStatement().text}}</p>\\n                </div>\\n                <div class=\\\"cf-tas-specification-task-blank-input\\\" style=\\\"margin-top:0.3em;width:100%;color:rgb(0,0,0);vertical-align:middle;text-align:center;\\\">\\n                    <input type=\\\"text\\\" [id]=\\\"'input-specification-task-blank'\\\" placeholder=\\\"Gib hier deine Antwort ein\\\" style=\\\"width:100%;\\\">\\n                </div>\\n\\n                <button id=\\\"cf-tas-specification-task-5-send-button\\\" (click)=\\\"solveTaskType5()\\\" class=\\\"button\\\" style=\\\"margin-top:2em;margin-bottom:0.3em;\\\">\\u00DCberpr\\u00FCfe jetzt meine Antwort</button>\\n            </div>\\n\\n            <!-- Task Type 6 -->\\n\\n            <div *ngIf=\\\"getTaskData().task_type_id==6\\\" class=\\\"cf-tas-specification-task-6\\\">\\n\\n                <div class=\\\"content-frame\\\">\\n                    <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                        <span class=\\\"fa fa-exclamation-triangle\\\"></span> Da nicht alle g\\u00E4ngigen Browser den QR Code Scan unterst\\u00FCtzen. Muss leider ein externer QR Code Scanner auf deinem Smartphone benutzt werden, um die Aufgabe zu l\\u00F6sen. Folge dann dem Link in dem gescannten QR Code und du hast diese Aufgabe abgeschlossen!\\n                    </p>\\n                </div>\\n\\n            </div>\\n\\n\\n        </div>\\n\\n        <!-- Overview of task -->\\n        <div id=\\\"cf-tas-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Mehr Informationen zu der Aufgabe</p>\\n\\n\\n\\n            <div style=\\\"padding:1em 1em;width:100%;max-width:30em;margin-left:auto;margin-right:auto;\\\">\\n\\n\\n                <div style=\\\"display:table;border-spacing:0 2px;width:100%;\\\">\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Erfahrung:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">\\n                          +{{getTaskData().score_rule}}\\n                        </div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Dein Fortschritt:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">{{getUserTaskScore().value}}</div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Ben\\u00F6tigter Fortschritt:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">{{getTaskData().needed_value}}</div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;background:#eeeeee;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Deine gesammelten Exp.:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;color:green!important;\\\">+{{getUserTaskScore().score}}</div>\\n                    </div>\\n\\n                    <div style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">Diese Aufgabe ist Teil des folgenden Quests:</div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\">{{getQuestsContainingTaskId().length==0?'-':''}}</div>\\n                    </div>\\n\\n                    <div *ngFor=\\\"let t_quest of getQuestsContainingTaskId();\\\" [hidden]=\\\"t_quest.is_active!='1'\\\" style=\\\"display:table-row;width:100%;\\\">\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;padding-left:0.5em;\\\">\\n                            <div (click)=\\\"navigateToQuest(t_quest.quest_id)\\\" class=\\\"content-quest-frame\\\" style=\\\"width:100%;\\\">\\n                                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">Quest: {{t_quest.questname}}</div>\\n                                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_quest.score_rule}}</span> Exp.</div>\\n                                    <div style=\\\"clear:both;\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div style=\\\"display:table-cell;vertical-align:middle;padding:5px;text-align:right;\\\"></div>\\n                    </div>\\n\\n\\n                </div>\\n\\n            </div>\\n            <div style=\\\"clear:both;\\\"></div>\\n\\n        </div>\\n\\n    </div>\\n\\n\\n\\n</div>\\n\\n    <!-- Solved Overlay -->\\n    <div *ngFor=\\\"let solvedOverlayDataObject of solvedOverlayArray;let i = index;\\\">\\n      <solvedoverlay-component [user]=\\\"user\\\" [universalcontent]=\\\"universalcontent\\\" [solveddata]=\\\"solvedOverlayDataObject\\\" (closeOverlay)=\\\"removeFromSolvedOverlayArray(i);\\\"></solvedoverlay-component>\\n    </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], TaskComponent);\n    return TaskComponent;\n}());\nexports.TaskComponent = TaskComponent;\n//# sourceMappingURL=task.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/task.component.js\n ** module id = 81\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar TasksComponent = (function () {\n    function TasksComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n    }\n    TasksComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n        });\n        this.lService.loadSpecificContent('tasks');\n    };\n    TasksComponent.prototype.getUniversalContentHome1Description = function () {\n        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'HOME_1'; }).length != 0) {\n            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'HOME_1'; })[0][\"text\"];\n        }\n        return '';\n    };\n    TasksComponent.prototype.tasksAvailable = function () {\n        if ($.isEmptyObject(this.specificcontent) ||\n            typeof this.specificcontent['Active_Tasks'] === 'undefined' ||\n            typeof this.specificcontent['Active_Quests'] === 'undefined')\n            return false;\n        if (this.specificcontent['Active_Tasks'].length == 0 &&\n            this.specificcontent['Active_Quests'].length == 0)\n            return false;\n        return true;\n    };\n    TasksComponent.prototype.getActiveQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Active_Quests'] !== 'undefined' ? this.specificcontent['Active_Quests'] : [];\n    };\n    TasksComponent.prototype.getActiveTasks = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['Active_Tasks'] !== 'undefined' ? this.specificcontent['Active_Tasks'] : [];\n    };\n    TasksComponent.prototype.isStepCompleted = function (tasks) {\n        for (var key in tasks) {\n            if (typeof tasks[key].completed === 'undefined' || tasks[key].completed == false)\n                return false;\n        }\n        return true;\n    };\n    TasksComponent.prototype.hasQuestStepAnUncompletedPrestep = function (queststeps, step) {\n        return parseInt(step) == 0 ? false : !this.isStepCompleted(queststeps[parseInt(step) - 1]);\n    };\n    TasksComponent.prototype.navigateToQuest = function (quest_id) {\n        this.router.navigate(['/l/quest', quest_id]);\n    };\n    TasksComponent.prototype.navigateToTask = function (task_id) {\n        this.router.navigate(['/l/task', task_id]);\n    };\n    TasksComponent.prototype.navigateToBadge = function (badge_id) {\n        this.router.navigate(['/l/badge', badge_id]);\n    };\n    TasksComponent.prototype.clickHome1Button = function () {\n        $('#cf-ta-introduction-content').fadeToggle(0);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TasksComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TasksComponent.prototype, \"universalcontent\", void 0);\n    TasksComponent = __decorate([\n        core_1.Component({\n            selector: 'tasks-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12 col-sm-3\\\" style=\\\"padding:0;\\\">\\n\\n        <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\"><span class=\\\"special-font-color\\\">{{user?.username}}</span></p>\\n\\n            <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                <div style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                    <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"depend-on-device-tablecell-to-none\\\" style=\\\"width:100%;vertical-align:middle;\\\">\\n                        <p style=\\\"font-size:1.3em;font-weight:bold;text-align:center;margin-top:0.5em;\\\">Erfahrung</p>\\n                        <p style=\\\"font-size:1em;text-align:center;\\\"><span style=\\\"font-size:1.6em!important;font-weight:bold;color:#0e9873;\\\">{{user?.user_score}}</span></p>\\n                        <div style=\\\"clear:both;\\\"></div>\\n                    </div>\\n\\n                </div>\\n\\n\\n            </div>\\n\\n\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-sm-9 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- What can I do here -->\\n        <div id=\\\"cf-ta-introduction\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline headline-as-button\\\" (click)=\\\"clickHome1Button();\\\" style=\\\"height:auto;padding-top:0px!important;\\\"><button class=\\\"button\\\">Was kann ich hier machen?</button></p>\\n\\n            <div id=\\\"cf-ta-introduction-content\\\" style='display:none;width:100%;border-spacing:3px 10px;'>\\n\\n                <div style='line-height:1.4em;text-align:justify;width:100%;vertical-align:top;color:rgb(0,0,0);padding:1em 0;'>\\n                    {{getUniversalContentHome1Description()}}\\n                </div>\\n\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n\\n\\n  </div>\\n\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n        <!-- Overview of tasks -->\\n        <div id=\\\"cf-ta-overview\\\" class=\\\"content-frame\\\">\\n\\n            <p class=\\\"headline\\\">Deine n\\u00E4chsten Ziele</p>\\n\\n            <p *ngIf=\\\"!tasksAvailable()\\\" class='content-none-placeholder' style='width:100%;text-align:center;margin-top:1em;margin-bottom:1em;background: yellow;padding:0.5em 0;'>Keine weiteren Aufgaben vorhanden</p>\\n\\n            <!-- ACTIVE TASKS -->\\n\\n            <div *ngFor=\\\"let t_task of getActiveTasks();\\\" (click)=\\\"navigateToTask(t_task.task_id)\\\" class=\\\"content-task-frame\\\" style=\\\"width:100%;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">Aufgabe: {{t_task.taskname}}</div>\\n                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_task.score_rule}}</span> Exp.</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n                    <div style=\\\"font-size:1em;text-align:justify;margin-top:1em;\\\">{{t_task.description_long}}</div>\\n                </div>\\n            </div>\\n\\n            <!-- Quests -->\\n            <div *ngFor=\\\"let t_quest of getActiveQuests()\\\" (click)=\\\"navigateToQuest(t_quest.quest_id)\\\" class=\\\"content-quest-frame\\\" style=\\\"width:100%;\\\">\\n                <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                    <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">{{'Quest: '+t_quest.questname}}</div>\\n                    <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_quest.score_rule}}</span> Exp.</div>\\n                    <div style=\\\"clear:both;\\\"></div>\\n\\n                    <div *ngFor=\\\"let t_quest_step of t_quest.json_quest_task_ids; let i = index;\\\" [hidden]=\\\"hasQuestStepAnUncompletedPrestep(t_quest.json_quest_task_ids, i)\\\">\\n                      <div style='font-size:1.2em;font-weight:bold;text-align:center;margin-top:0.3em;margin-bottom:0.2em;'>Stufe {{i+1}} von {{t_quest.json_quest_task_ids.length}}</div>\\n\\n                      <div *ngFor=\\\"let t_quest_step_task of t_quest_step; let i_tasks = index;\\\">\\n                        <div style='cursor:pointer;font-weight:bold;font-size:1em;color:rgb(255,255,255);border:0px solid rgb(0,0,0);border-radius:4px;padding:0.2em 0.3em;background:rgb(50,50,50);margin-bottom:2px;' >\\n                          {{t_quest_step_task.taskname}}\\n                          <button\\n                            [class.fa-check-square]=\\\"t_quest_step_task.completed\\\"\\n                            [style.color]=\\\"t_quest_step_task.completed ?'rgb(0,150,0)':'rgb(150,0,0)'\\\"\\n                            [class.fa-minus-square]=\\\"!t_quest_step_task.completed\\\"\\n                            class='fa' style='padding:0;font-size:1em;border:0;margin:0;background:transparent;margin-left:5px;float:right;'></button>\\n\\n                        </div>\\n                      </div>\\n\\n\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n        </div>\\n\\n\\n    </div>\\n\\n\\n\\n  </div>\\n\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], TasksComponent);\n    return TasksComponent;\n}());\nexports.TasksComponent = TasksComponent;\n//# sourceMappingURL=tasks.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/tasks.component.js\n ** module id = 82\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar TasksearchComponent = (function () {\n    function TasksearchComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n    }\n    TasksearchComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n            _this.initMap();\n        });\n        this.lService.loadSpecificContent('tasksearch');\n    };\n    TasksearchComponent.prototype.getLocationsWhereUserCanFindTaskOrQuest = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['LOCATIONS_WHERE_USER_CAN_FIND_TASK_OR_QUEST'] !== 'undefined' ? this.specificcontent['LOCATIONS_WHERE_USER_CAN_FIND_TASK_OR_QUEST'] : [];\n    };\n    TasksearchComponent.prototype.getAllLocations = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['ALL_LOCATIONS'] !== 'undefined' ? this.specificcontent['ALL_LOCATIONS'] : [];\n    };\n    TasksearchComponent.prototype.getUniversalContent = function (content_mapper) {\n        if ($.isEmptyObject(this.universalcontent) || typeof this.universalcontent['_Content'] === 'undefined') {\n            return \"\";\n        }\n        var t_content = this.universalcontent['_Content'].filter(function (x) { return x.content_mapper.toLowerCase() == content_mapper.toLowerCase(); });\n        if (t_content.length > 0) {\n            return t_content[0].text;\n        }\n        else {\n            return \"\";\n        }\n    };\n    TasksearchComponent.prototype.navigateToQuest = function (quest_id) {\n        this.router.navigate(['/l/quest', quest_id]);\n    };\n    TasksearchComponent.prototype.navigateToTask = function (task_id) {\n        this.router.navigate(['/l/task', task_id]);\n    };\n    TasksearchComponent.prototype.navigateToBadge = function (badge_id) {\n        this.router.navigate(['/l/badge', badge_id]);\n    };\n    TasksearchComponent.prototype.initMap = function () {\n        var _this = this;\n        OpenLayers.Lang.setCode('de');\n        // Position und Zoomstufe der Karte\n        this.map = new OpenLayers.Map('show_map', {\n            projection: new OpenLayers.Projection(\"EPSG:900913\"),\n            displayProjection: new OpenLayers.Projection(\"EPSG:4326\"),\n            controls: [\n                new OpenLayers.Control.Navigation(),\n                new OpenLayers.Control.PanZoomBar()],\n            maxExtent: new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34),\n            numZoomLevels: 18,\n            maxResolution: 156543,\n            units: 'meters'\n        });\n        this.layer_mapnik = new OpenLayers.Layer.OSM.Mapnik(\"Mapnik\");\n        this.layer_markers = new OpenLayers.Layer.Markers(\"Address\", { projection: new OpenLayers.Projection(\"EPSG:4326\"),\n            visibility: true, displayInLayerSwitcher: false });\n        this.layer_vector = new OpenLayers.Layer.Vector('vector');\n        this.map.addLayers([this.layer_mapnik, this.layer_markers, this.layer_vector]);\n        // Position des Markers\n        //this.addMarker(this.layer_markers, 8.45657, 49.4875);\n        var t_locations = this.getAllLocations();\n        for (var t_location_key in t_locations) {\n            this.addMarker(this.layer_markers, parseFloat(t_locations[t_location_key].geo_long), parseFloat(t_locations[t_location_key].geo_lati));\n        }\n        //Jump to Main Location\n        var lon = 8.4610;\n        var lat = 49.4855;\n        var zoom = 14;\n        var t_root_location = t_locations.length > 0 ? t_locations[0] : {};\n        for (var t_location_key in t_locations) {\n            if (t_locations[t_location_key].location_id + \"\" == this.getUniversalContent(\"ROOT_LOCATION\")) {\n                t_root_location = t_locations[t_location_key];\n            }\n        }\n        if (typeof t_root_location.location_id !== 'undefined') {\n            lon = parseFloat(t_root_location.geo_long);\n            lat = parseFloat(t_root_location.geo_lati);\n        }\n        this.jumpTo(lon, lat, zoom);\n        this.geolocate = new OpenLayers.Control.Geolocate({\n            bind: false,\n            geolocationOptions: {\n                enableHighAccuracy: false,\n                maximumAge: 0,\n                timeout: 7000\n            }\n        });\n        this.map.addControl(this.geolocate);\n        this.geolocate.events.register(\"locationupdated\", this.geolocate, function (e) {\n            _this.layer_vector.removeAllFeatures();\n            var circle = new OpenLayers.Feature.Vector(OpenLayers.Geometry.Polygon.createRegularPolygon(new OpenLayers.Geometry.Point(e.point.x, e.point.y), e.position.coords.accuracy / 8, 40, 0), {}, {\n                fillColor: '#000',\n                fillOpacity: 0.1,\n                strokeWidth: 0\n            });\n            _this.layer_vector.addFeatures([\n                new OpenLayers.Feature.Vector(e.point, {}, {\n                    graphicName: 'cross',\n                    strokeColor: '#f00',\n                    strokeWidth: 2,\n                    fillOpacity: 0,\n                    pointRadius: 10\n                }),\n                circle\n            ]);\n        });\n        this.geolocate.activate();\n        this.locate();\n    };\n    TasksearchComponent.prototype.jumpTo = function (lon, lat, zoom) {\n        var x = this.Lon2Merc(lon);\n        var y = this.Lat2Merc(lat);\n        this.map.setCenter(new OpenLayers.LonLat(x, y), zoom);\n        return false;\n    };\n    TasksearchComponent.prototype.Lon2Merc = function (lon) {\n        return 20037508.34 * lon / 180;\n    };\n    TasksearchComponent.prototype.Lat2Merc = function (lat) {\n        var PI = 3.14159265358979323846;\n        lat = Math.log(Math.tan((90 + lat) * PI / 360)) / (PI / 180);\n        return 20037508.34 * lat / 180;\n    };\n    TasksearchComponent.prototype.addMarker = function (layer, lon, lat) {\n        var ll = new OpenLayers.LonLat(this.Lon2Merc(lon), this.Lat2Merc(lat));\n        var marker = new OpenLayers.Marker(ll);\n        layer.addMarker(marker);\n    };\n    TasksearchComponent.prototype.locate = function () {\n        var _this = this;\n        this.geolocate.getCurrentLocation();\n        setTimeout(function () { _this.locate(); }, 5000);\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TasksearchComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], TasksearchComponent.prototype, \"universalcontent\", void 0);\n    TasksearchComponent = __decorate([\n        core_1.Component({\n            selector: 'tasksearch-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12 col-sm-3\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\"><span class=\\\"special-font-color\\\">{{user?.username}}</span></p>\\n\\n              <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                  <div class=\\\"depend-on-device-tablerow-to-none\\\" style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"depend-on-device-tablecell-to-none\\\" style=\\\"width:100%;vertical-align:middle;\\\">\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1.3em;font-weight:bold;text-align:center;margin-top:0.5em;\\\">Erfahrung</p>\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1em;text-align:center;\\\"><span style=\\\"font-size:1.6em!important;font-weight:bold;color:#0e9873;\\\">{{user?.user_score}}</span></p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n\\n              </div>\\n\\n          </div>\\n      </div>\\n\\n      <div class=\\\"col-xs-12 col-sm-9 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n          <!-- Locations where user can find a task or a quest -->\\n          <div *ngFor=\\\"let t_location of getLocationsWhereUserCanFindTaskOrQuest();\\\" class=\\\"content-frame\\\">\\n             <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                 <span class=\\\"fa fa-exclamation-triangle\\\"></span> Besuche {{t_location.locationname}}\\n             </p>\\n          </div>\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <!-- Searching for near tasks -->\\n          <div id=\\\"cf-ma-map\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Suche nach Aufgaben in deiner N\\u00E4he</p>\\n\\n              <div id=\\\"show_map\\\" style=\\\"width:100%;height:500px;text-align:center;font-size:1.5em;color:black;background:url(../public/images/kachel.png);background-repeat:repeat;\\\">\\n              </div>\\n\\n              <div style=\\\"background: white;\\\">\\n               <div id=\\\"osm\\\">\\u00A9 <a href=\\\"http://www.openstreetmap.org\\\">OpenStreetMap</a>\\n                 und <a href=\\\"http://www.openstreetmap.org/copyright\\\">Mitwirkende</a>,\\n                 <a href=\\\"http://creativecommons.org/licenses/by-sa/2.0/deed.de\\\">CC-BY-SA</a>\\n               </div>\\n              </div>\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div class=\\\"content-frame\\\">\\n              <p class='headline' style=\\\"background:rgb(120,255,120);padding-left:1em;text-align:left;\\\">\\n                  <span class=\\\"fa fa-exclamation-triangle\\\"></span> Du kannst auch den QR-Code an dem Ort scannen und dem Link folgen!\\n              </p>\\n          </div>\\n\\n      </div>\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], TasksearchComponent);\n    return TasksearchComponent;\n}());\nexports.TasksearchComponent = TasksearchComponent;\n//# sourceMappingURL=tasksearch.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/tasksearch.component.js\n ** module id = 83\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar router_1 = require('@angular/router');\nvar UnloggedcontentComponent = (function () {\n    function UnloggedcontentComponent(router, route, lService) {\n        this.router = router;\n        this.route = route;\n        this.lService = lService;\n        this.user = {};\n        this.loading_user = true;\n        this.universalcontent = {};\n        this.loading_universalcontent = true;\n        this.showncomponent = \"\";\n        this.legalcomponent = \"\";\n        //\n        this.username = \"\";\n        this.pwd = \"\";\n        this.new_password_email = \"\";\n        this.reg_username = \"\";\n        this.reg_username_valid = true;\n        this.reg_username_exists = false;\n        this.reg_email = \"\";\n        this.reg_email_valid = true;\n        this.reg_email_exists = false;\n        this.reg_password = \"\";\n        this.reg_password_valid = true;\n        this.reg_password_repeat = \"\";\n        this.reg_password_repeat_valid = true;\n        this.reg_faculty_id = -2;\n    }\n    UnloggedcontentComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        $('#titleBar').hide();\n        //User\n        this.loading_user = true;\n        this.lService.user$.subscribe(function (user) {\n            console.log(user);\n            _this.user = user;\n            _this.loading_user = false;\n        });\n        this.lService.loadUser();\n        //Universal Content\n        this.loading_universalcontent = true;\n        this.lService.universalcontent$.subscribe(function (universalcontent) {\n            _this.universalcontent = universalcontent;\n            _this.loading_universalcontent = false;\n        });\n        this.lService.loadUniversalContent();\n        //Sub Route\n        this.sub = this.route.params.subscribe(function (params) {\n            var component = typeof params['component'] !== 'undefined' ? params['component'] : '';\n            var id = typeof params['id'] !== 'undefined' ? params['id'] : '';\n            component = component.toLowerCase();\n            id = id.toLowerCase();\n            if (component.length == 0 || component == 'home') {\n                _this.showncomponent = 'home';\n            }\n            else if (component == 'registration') {\n                _this.showncomponent = 'registration';\n            }\n            else if (component == 'sendpwd') {\n                _this.showncomponent = 'sendpwd';\n            }\n            else if (component == 'legal' && id.length != 0) {\n                _this.showncomponent = 'legal';\n                _this.legalcomponent = id;\n            }\n            else {\n                _this.showncomponent = 'home';\n            }\n        });\n    };\n    UnloggedcontentComponent.prototype.ngOnDestroy = function () {\n        this.sub.unsubscribe();\n    };\n    UnloggedcontentComponent.prototype.navigateToComponent = function (componentname) {\n        this.router.navigate([\"/l/\" + componentname]);\n    };\n    UnloggedcontentComponent.prototype.navigateToUnloggedComponent = function (componentname) {\n        this.router.navigate([\"/u/\" + componentname]);\n    };\n    UnloggedcontentComponent.prototype.loginAsAnonym = function () {\n        var _this = this;\n        this.lService.loginAsAnonym().subscribe(function (data) {\n            if (typeof data !== 'undefined' && data.result == true) {\n                _this.navigateToComponent(\"tasks\");\n            }\n            else {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen!\");\n        });\n    };\n    UnloggedcontentComponent.prototype.sendNewPassword = function () {\n        if (this.new_password_email.length == 0 || !/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/.test(this.new_password_email)) {\n            window.alert(\"Bitte gib zuerst deine korrekte E-Mail ein!\");\n            return;\n        }\n        this.lService.sendNewPassword(this.new_password_email).subscribe(function (data) {\n            if (typeof data !== 'undefined' && data.result == true) {\n                window.alert(\"Dir wurde eine Mail mit deinen neuen Zugangsdaten gesendet!\");\n            }\n            else {\n                window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen und nochmal versuchen!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte die Seite neu laden lassen und nochmal versuchen!\");\n        });\n    };\n    UnloggedcontentComponent.prototype.registerUser = function () {\n        var _this = this;\n        //Username\n        var pattern = /^[A-Za-z0-9]{2,}$/;\n        if (this.reg_username.length == 0 || this.reg_username.match(pattern) == null) {\n            window.alert(\"Dein gewählter Username entspricht nicht unseren Richtlinien!\");\n            return;\n        }\n        if (this.reg_username_exists == true) {\n            window.alert(\"Dein gewählter Username ist bereits vergeben!\");\n            return;\n        }\n        //Email\n        pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (this.reg_email.length == 0 || this.reg_email.match(pattern) == null) {\n            window.alert(\"Bitte überprüfe deine E-Mail und versuche es erneut!\");\n            return;\n        }\n        if (this.reg_email_exists == true) {\n            window.alert(\"Deine gewählte E-Mail ist bereits vergeben!\");\n            return;\n        }\n        //Password\n        pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n        if (this.reg_password.length == 0 || this.reg_password.match(pattern) == null || this.reg_password != this.reg_password_repeat) {\n            window.alert(\"Dein Passwort entspricht nicht unseren Richtlinien oder du hast die beiden Passwörter stimmen nicht überein!\");\n            return;\n        }\n        //Faculty\n        if (this.reg_faculty_id == -2) {\n            window.alert(\"Bitte wähle vor der Registration eine Fakultät!\");\n            return;\n        }\n        //Accept TOU and PP\n        if ($(\"#reg_bed\").prop(\"checked\") == false) {\n            window.alert(\"Bitte akzeptiere vor der Registration die AGB sowie die Datenschutzerklärungen!\");\n            return;\n        }\n        this.lService.registerUser(this.reg_username, this.reg_email, this.reg_password, this.reg_password_repeat, this.reg_faculty_id).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n                _this.router.navigate([\"/l/tasks\"]);\n            }\n            else {\n                window.alert(\"Bitte überprüfe deine Eingaben!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            console.error('Could not register user.');\n        });\n    };\n    UnloggedcontentComponent.prototype.getUniversalContentStart = function () {\n        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'START'; }).length != 0) {\n            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == 'START'; })[0][\"text\"];\n        }\n        return '';\n    };\n    UnloggedcontentComponent.prototype.getUniversalContentFacultyArray = function () {\n        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Faculties\"] !== 'undefined') {\n            return this.universalcontent[\"_Faculties\"];\n        }\n        return [];\n    };\n    UnloggedcontentComponent.prototype.getUniversalContentMainPictureId = function () {\n        if (!$.isEmptyObject(this.universalcontent) && typeof this.universalcontent[\"_Content\"] !== 'undefined' && this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; }).length != 0) {\n            return this.universalcontent[\"_Content\"].filter(function (x) { return x.content_mapper == \"MAIN_PICTURE_ID\"; })[0].text;\n        }\n        return -1;\n    };\n    UnloggedcontentComponent.prototype.loginUser = function () {\n        var _this = this;\n        this.lService.loginUser(this.username, this.pwd).subscribe(function (data) {\n            if (typeof data.result !== 'undefined' && data.result == true) {\n                _this.router.navigate([\"/l/tasks\"]);\n            }\n            else {\n                window.alert(\"Bitte überprüfe deinen Username und Passwort!\");\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            console.error('Could not login user.');\n        });\n    };\n    UnloggedcontentComponent.prototype.keyupRegisterUsername = function () {\n        var _this = this;\n        var pattern = /^[A-Za-z0-9]{2,}$/;\n        if (this.reg_username.length != 0 && this.reg_username.match(pattern) != null) {\n            this.reg_username_valid = true;\n        }\n        else {\n            this.reg_username_valid = false;\n        }\n        this.lService.checkUsername(this.reg_username).subscribe(function (data) {\n            if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == true) {\n                _this.reg_username_exists = true;\n            }\n            else if (typeof data.data !== 'undefined' && typeof data.data.username_exists !== 'undefined' && typeof data.data.username !== 'undefined' && data.data.username == _this.reg_username && data.data.username_exists == false) {\n                _this.reg_username_exists = false;\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            console.error('Could not login user.');\n        });\n    };\n    UnloggedcontentComponent.prototype.keyupRegisterEmail = function () {\n        var _this = this;\n        var pattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (this.reg_email.length != 0 && this.reg_email.match(pattern) != null) {\n            this.reg_email_valid = true;\n        }\n        else {\n            this.reg_email_valid = false;\n        }\n        this.lService.checkEmail(this.reg_email).subscribe(function (data) {\n            if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == true) {\n                _this.reg_email_exists = true;\n            }\n            else if (typeof data.data !== 'undefined' && typeof data.data.email_exists !== 'undefined' && typeof data.data.email !== 'undefined' && data.data.email == _this.reg_email && data.data.email_exists == false) {\n                _this.reg_email_exists = false;\n            }\n        }, function (error) {\n            window.alert(\"Es ist ein Fehler aufgetreten. Bitte Seite neu laden!\");\n            console.error('Could not login user.');\n        });\n    };\n    UnloggedcontentComponent.prototype.keyupRegisterPassword = function () {\n        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n        if (this.reg_password.length != 0 && this.reg_password.match(pattern) != null) {\n            this.reg_password_valid = true;\n        }\n        else {\n            this.reg_password_valid = false;\n        }\n    };\n    UnloggedcontentComponent.prototype.keyupRegisterPasswordRepeat = function () {\n        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n        if (this.reg_password_repeat.length != 0 && this.reg_password == this.reg_password_repeat) {\n            this.reg_password_repeat_valid = true;\n        }\n        else {\n            this.reg_password_repeat_valid = false;\n        }\n    };\n    UnloggedcontentComponent = __decorate([\n        core_1.Component({\n            selector: 'unloggedcontent-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n<div style=\\\"width:100%;background-color: #990000;min-height: 100%;position: absolute;padding-top: 50px;\\\">\\n\\n  <div id=\\\"content-landing\\\">\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-10 col-xs-offset-1 col-sm-4 col-sm-offset-4\\\" style=\\\"padding:0;\\\">\\n\\n            <!-- Logo -->\\n            <div id=\\\"logo\\\" style=\\\"width:200px;margin-left:auto;margin-right:auto;margin-bottom: 20px;\\\">\\n                <img [src]=\\\"getUniversalContentMainPictureId().length != 0 ? lService.getPictureLink(getUniversalContentMainPictureId()) : ''\\\" style=\\\"width:100%;\\\" />\\n            </div>\\n\\n            <div id=\\\"wrapper\\\" style=\\\"padding-left:0;\\\">\\n\\n                <div *ngIf=\\\"showncomponent=='registration'\\\">\\n\\n                  <p class=\\\"lp-headline\\\" style=\\\"text-align:center;text-decoration:underline;font-size:1.2em;margin:0;color:white;margin-bottom:0.8em;\\\">Registriere dich jetzt!</p>\\n\\n                  <form id=\\\"registerForm\\\">\\n                        <input [(ngModel)]=\\\"reg_username\\\" (keyup)=\\\"keyupRegisterUsername()\\\" [style.background]=\\\"reg_username.length>0?(reg_username_valid && reg_username_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_username\\\" name=\\\"reg_username\\\" type=\\\"text\\\" maxlength=\\\"30\\\" placeholder=\\\"Username\\\" title=\\\"Gib hier deinen gew\\u00FCnschten Usernamen ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;\\\"/>\\n                        <div *ngIf=\\\"reg_username_exists\\\" style=\\\"padding: 5px;color: white;\\\">Username ist leider schon vergeben!</div>\\n\\n                        <input [(ngModel)]=\\\"reg_email\\\" (keyup)=\\\"keyupRegisterEmail()\\\" [style.background]=\\\"reg_email.length>0?(reg_email_valid && reg_email_exists == false)?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_email\\\" name=\\\"reg_email\\\" type=\\\"text\\\" maxlength=\\\"100\\\" placeholder=\\\"E-Mail\\\" title=\\\"Gib hier deine E-Mail ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.4em;\\\"/>\\n                        <div *ngIf=\\\"reg_email_exists\\\" style=\\\"padding: 5px;color: white;\\\">Ein User mit dieser E-Mail existiert leider bereits!</div>\\n\\n                        <input [(ngModel)]=\\\"reg_password\\\" (keyup)=\\\"keyupRegisterPassword();keyupRegisterPasswordRepeat();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password\\\" name=\\\"reg_password\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Passwort (Mind. 6 Zeichen)\\\" title=\\\"Gib hier dein Passwort ein\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.4em;\\\"/>\\n\\n                        <input [(ngModel)]=\\\"reg_password_repeat\\\" (keyup)=\\\"keyupRegisterPasswordRepeat();keyupRegisterPassword();\\\" [style.background]=\\\"(reg_password_repeat.length>0 || reg_password.length>0)?reg_password_repeat_valid?'rgb(120,255,120)':'rgb(255,120,120)':'#eeeeee'\\\" id=\\\"registerForm_reg_password_repeat\\\" name=\\\"reg_password_repeat\\\" type=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Wiederhole dein Passwort\\\" title=\\\"Wiederhole hier dein Passwort\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.4em;\\\"/>\\n\\n                        <select [(ngModel)]=\\\"reg_faculty_id\\\" name=\\\"reg_department\\\" style=\\\"font-size:1em;background:#eeeeee;padding-top: 7px;padding-bottom: 7px;margin-top: 0.4em;\\\">\\n                          <option value=\\\"-2\\\">W\\u00E4hle deine Fakult\\u00E4t</option>\\n                          <option *ngFor=\\\"let t_faculty of getUniversalContentFacultyArray();\\\" value='{{t_faculty.faculty_id}}'>{{t_faculty.facultyname}}</option>\\n                        </select>\\n\\n                        <input id=\\\"reg_bed\\\" style=\\\"margin:10px 5px;float:left;width:20px;height:20px;margin-top:8px;\\\" name=\\\"reg_bed\\\" type=\\\"checkbox\\\" value=\\\"bed\\\">\\n                        <div style=\\\"color:white;margin:10px 5px;\\\">Ich stimme den <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToUnloggedComponent('legal/tou')\\\" target=\\\"_blank\\\">AGB</a> sowie der <a style=\\\"color:rgb(210,210,210);cursor:pointer;text-decoration: underline;\\\" (click)=\\\"navigateToUnloggedComponent('legal/pp')\\\" target=\\\"_blank\\\">Datenschutzerkl\\u00E4rungen</a> zu</div>\\n                        <div style=\\\"clear:both;\\\"></div>\\n\\n                        <div (click)=\\\"registerUser()\\\" id=\\\"buttonReg\\\">Jetzt registrieren</div>\\n                        <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('home')\\\">Zur\\u00FCck zum Login</div>\\n                  </form>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"showncomponent=='sendpwd'\\\">\\n\\n                  <p class=\\\"lp-headline\\\" style=\\\"text-align:center;font-size:1.2em;margin:0;color:white;margin-bottom:0.8em;\\\">Trage deine E-Mail ein und du wirst ein neues Passwort per Mail erhalten!</p>\\n\\n                  <form>\\n                        <input [(ngModel)]=\\\"new_password_email\\\" name=\\\"fp_email\\\" type=\\\"text\\\" maxlength=\\\"100\\\" placeholder=\\\"E-Mail\\\" title=\\\"Gib hier deine E-Mail ein\\\"/>\\n                        <div (click)=\\\"sendNewPassword()\\\" id=\\\"buttonSendPassword\\\">Neues Passwort jetzt senden</div>\\n                        <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('home')\\\">Zur\\u00FCck zum Login</div>\\n                  </form>\\n\\n                </div>\\n\\n                <div *ngIf=\\\"showncomponent=='legal'\\\">\\n                  <legal-component [user]=\\\"user\\\" [legalcomponent]=\\\"legalcomponent\\\" [universalcontent]=\\\"universalcontent\\\"></legal-component>\\n\\n                  <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('home')\\\">Zur\\u00FCck zum Login</div>\\n                </div>\\n\\n                <div *ngIf=\\\"showncomponent=='home'\\\">\\n\\n                  <div [innerHTML]=\\\"getUniversalContentStart() | safeHtml\\\" class=\\\"unloggedcontent\\\">\\n                  </div>\\n\\n                  <!-- Click In -->\\n                  <form id=\\\"registerForm\\\" style=\\\"margin-top:1em;\\\">\\n                      <input [(ngModel)]=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Dein Username\\\" style=\\\"padding-top:7px;padding-bottom:7px;\\\"/>\\n                      <input [(ngModel)]=\\\"pwd\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Dein Passwort\\\" style=\\\"padding-top:7px;padding-bottom:7px;margin-top: 0.5em;\\\"/>\\n                      <div (click)=\\\"loginUser()\\\" id=\\\"buttonLogIn\\\">Log In</div>\\n                      <div class=\\\"buttonForLoginRegisterChange\\\" (click)=\\\"navigateToUnloggedComponent('registration')\\\">Registriere dich jetzt</div>\\n                      <div class=\\\"buttonForLoginAsAnonym\\\" (click)=\\\"loginAsAnonym()\\\">Erstmal Anonym spielen</div>\\n                      <div class=\\\"buttonForForgotPasswordChange\\\" (click)=\\\"navigateToUnloggedComponent('sendpwd')\\\">Passwort vergessen</div>\\n                  </form>\\n\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, router_1.ActivatedRoute, libgame_service_1.LibgameService])\n    ], UnloggedcontentComponent);\n    return UnloggedcontentComponent;\n}());\nexports.UnloggedcontentComponent = UnloggedcontentComponent;\n//# sourceMappingURL=unloggedcontent.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/unloggedcontent.component.js\n ** module id = 84\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar UserprogressComponent = (function () {\n    function UserprogressComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n        this.open_tasks_type_key = -1;\n    }\n    UserprogressComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n        });\n        this.lService.loadSpecificContent('userprogress');\n    };\n    UserprogressComponent.prototype.getCompletedQuests = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['COMPLETED_QUESTS'] !== 'undefined' ? this.specificcontent['COMPLETED_QUESTS'] : [];\n    };\n    UserprogressComponent.prototype.getBadgesWithProgressStatement = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['ALL_BADGES_WITH_COMPLETED_STATEMENT'] !== 'undefined' ? this.specificcontent['ALL_BADGES_WITH_COMPLETED_STATEMENT'] : [];\n    };\n    UserprogressComponent.prototype.getUserTaskInfoArray = function () {\n        return !$.isEmptyObject(this.specificcontent) && typeof this.specificcontent['USER_TASK_INFO'] !== 'undefined' ? this.specificcontent['USER_TASK_INFO'] : [];\n    };\n    UserprogressComponent.prototype.navigateToQuest = function (quest_id) {\n        this.router.navigate(['/l/quest', quest_id]);\n    };\n    UserprogressComponent.prototype.navigateToTask = function (task_id) {\n        this.router.navigate(['/l/task', task_id]);\n    };\n    UserprogressComponent.prototype.navigateToBadge = function (badge_id) {\n        this.router.navigate(['/l/badge', badge_id]);\n    };\n    //User_Task_Info\n    UserprogressComponent.prototype.isTaskSolved = function (value, needed_value) {\n        return parseFloat(value) >= parseFloat(needed_value);\n    };\n    UserprogressComponent.prototype.getMinScoreForTaskInUserTaskInfo = function (key) {\n        var t_minscore = 1000000;\n        if (this.getUserTaskInfoArray()[key][\"tasks\"].length == 0)\n            return 0;\n        for (var t_task_key in this.getUserTaskInfoArray()[key][\"tasks\"]) {\n            if (parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]) < t_minscore) {\n                t_minscore = parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]);\n            }\n        }\n        return t_minscore;\n    };\n    UserprogressComponent.prototype.getMaxScoreForTaskInUserTaskInfo = function (key) {\n        var t_maxscore = 0;\n        if (this.getUserTaskInfoArray()[key][\"tasks\"].length == 0)\n            return 0;\n        for (var t_task_key in this.getUserTaskInfoArray()[key][\"tasks\"]) {\n            if (parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]) > t_maxscore) {\n                t_maxscore = parseFloat(this.getUserTaskInfoArray()[key][\"tasks\"][t_task_key][\"score_rule\"]);\n            }\n        }\n        return t_maxscore;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], UserprogressComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], UserprogressComponent.prototype, \"universalcontent\", void 0);\n    UserprogressComponent = __decorate([\n        core_1.Component({\n            selector: 'userprogress-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12 col-sm-3\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-ho-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\"><span class=\\\"special-font-color\\\">{{user?.username}}</span></p>\\n\\n              <div class=\\\"depend-on-device-table-to-none\\\" style=\\\"width:100%;\\\">\\n\\n                  <div class=\\\"depend-on-device-tablerow-to-none\\\" style=\\\"vertical-align:top;width:100%;color:rgb(255,255,255);\\\">\\n\\n                      <div id=\\\"cf-ho-overview-stats-experience\\\" class=\\\"depend-on-device-tablecell-to-none\\\" style=\\\"width:100%;vertical-align:middle;\\\">\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1.3em;font-weight:bold;text-align:center;margin-top:0.5em;\\\">Erfahrung</p>\\n                          <p class=\\\"depend-on-device-none-to-left-float depend-on-device-none-to-49-percentage-width\\\" style=\\\"font-size:1em;text-align:center;\\\"><span style=\\\"font-size:1.6em!important;font-weight:bold;color:#0e9873;\\\">{{user?.user_score}}</span></p>\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n\\n                  </div>\\n\\n\\n              </div>\\n\\n\\n\\n          </div>\\n\\n      </div>\\n\\n\\n      <div class=\\\"col-xs-12 col-sm-9 padding-left-10px-sm-md-lg\\\" style=\\\"padding:0;\\\">\\n\\n\\n          <!-- Quests -->\\n          <div id=\\\"cf-ac-quests\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abgeschlossene Quests</p>\\n\\n              <p [hidden]=\\\"getCompletedQuests().length!=0\\\" style='width:100%;text-align:center;margin-top:1em;margin-bottom:1em;'>Keine abgeschlossenen Quests vorhanden</p>\\n\\n              <div *ngFor=\\\"let t_c_quest of getCompletedQuests();\\\" (click)=\\\"navigateToQuest(t_c_quest.quest_id)\\\" class=\\\"content-quest-frame\\\" style=\\\"width:100%;\\\">\\n                  <div style=\\\"width:100%;color:rgb(0,0,0);cursor:pointer;\\\">\\n                      <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;font-weight:bold;text-decoration:underline;\\\">Quest: {{t_c_quest.questname}}</div>\\n                      <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">+{{t_c_quest.score_rule}}</span> Exp.</div>\\n                      <div style=\\\"clear:both;\\\"></div>\\n                      <div style=\\\"font-size:1.2em;font-weight:bold;text-align:center;margin-top:0.3em;margin-bottom:0.2em;\\\">Abgeschlossen</div>\\n                  </div>\\n              </div>\\n\\n\\n          </div>\\n\\n      </div>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n\\n          <!-- Badges -->\\n          <div id=\\\"cf-ac-badges\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abzeichen</p>\\n\\n              <div style=\\\"display:block;width: 100%;\\\">\\n\\n\\n                  <div *ngFor=\\\"let t_badge of getBadgesWithProgressStatement();\\\" (click)=\\\"navigateToBadge(t_badge.badge_id)\\\" class='col-xs-6 col-sm-1' style='display:inline-block;padding:1em;'>\\n                      <div style='position:relative;cursor:pointer;'>\\n                          <img style='position:relative;top:0;left:0;width:100%;' src='{{lService.getPictureLink(t_badge.picture_id)}}'>\\n                          <div *ngIf=\\\"t_badge.completed\\\" class='fa fa-check-square' style='position:absolute;right:0;margin:0.3em;font-size:2em!important;color:white;'></div>\\n                          <div *ngIf=\\\"!t_badge.completed\\\" class='fa fa-minus-square' style='position:absolute;right:0;margin:0.3em;font-size:2em!important;color:white;'></div>\\n                      </div>\\n                  </div>\\n\\n                  <div style=\\\"clear:both;\\\"></div>\\n\\n\\n              </div>\\n\\n          </div>\\n\\n\\n\\n          <!-- Tasks -->\\n          <div id=\\\"cf-ac-tasks\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Abgeschlossene Aufgaben</p>\\n\\n\\n              <div *ngFor=\\\"let t_task_type of getUserTaskInfoArray(); let i = index;\\\" class=\\\"content-inner-frame\\\" style=\\\"width:100%;\\\">\\n                  <!-- Description of Task_Type -->\\n                  <div class=\\\"cf-ac-tasks-task-type-button\\\"\\n                    (click)=\\\"open_tasks_type_key==i?open_tasks_type_key=-1:open_tasks_type_key=i;\\\"\\n                    [class.separator]=\\\"open_tasks_type_key==i\\\"\\n                    style=\\\"width:100%;color:rgb(255,255,255);cursor:pointer;padding:0.5em 0;\\\">\\n                      <div class=\\\"depend-on-device-left-to-none-float\\\" style=\\\"font-size:1.5em;text-decoration:underline;\\\">\\n                        {{t_task_type.task_type_name}}\\n                      </div>\\n                      <div class=\\\"depend-on-device-right-to-none-float\\\" style=\\\"font-size:1.2em;margin-top:0.2em;\\\"><span style=\\\"font-size:1.2em;font-weight:bold;\\\">\\n                        +[{{getMinScoreForTaskInUserTaskInfo(i)}} - {{getMaxScoreForTaskInUserTaskInfo(i)}}]</span> Exp. pro Aufgabe ({{t_task_type[\\\"tasks\\\"].length}} Aufgaben)\\n                      </div>\\n                      <div style=\\\"clear:both;\\\"></div>\\n                  </div>\\n\\n                  <!-- Tasks -->\\n                  <div *ngIf=\\\"t_task_type['tasks'].length==0 && open_tasks_type_key==i\\\" class='cf-ac-tasks-no-tasks' style='width:100%;text-align:center;font-size:1.3em;font-weight:bold;color:black;margin-top:5px;margin-bottom:10px;'>Keine Aufgaben vorhanden</div>\\n\\n                  <div *ngIf=\\\"t_task_type['tasks'].length!=0 && open_tasks_type_key==i\\\" class='cf-ac-tasks-tasks depend-on-device-table-to-none' style='width:100%;border-spacing:10px 15px;margin-top:5px;'>\\n                    <div *ngFor=\\\"let t_task of t_task_type['tasks']\\\"  class='cf-ac-tasks-task depend-on-device-tablerow-to-none' style='width:100%;padding:0.8em 0;'>\\n\\n                          <div class='col-xs-9' style='text-align:left;vertical-align:middle;line-height:1.1em !important;'>\\n                              <span class=\\\"link\\\" (click)=\\\"navigateToTask(t_task.task_id)\\\" style=\\\"font-size:1.3em;font-weight:bold;\\\">{{t_task.taskname}}</span>\\n                          </div>\\n\\n                          <div class='col-xs-1' style='text-align:center;vertical-align:middle;'>\\n                              <button *ngIf=\\\"isTaskSolved(t_task.value,t_task.needed_value)\\\" class='fa fa-check-square' style='padding:0;font-size:2em;color:rgb(0,150,0);border:0;margin:0;background:transparent;'></button>\\n                              <button *ngIf=\\\"!isTaskSolved(t_task.value,t_task.needed_value)\\\" class='fa fa-minus-square' style='padding:0;font-size:2em;color:rgb(150,0,0);border:0;margin:0;background:transparent;'></button>\\n                          </div>\\n\\n                          <div class='col-xs-1' style='text-align:center;vertical-align:middle;'>\\n                              <span style=\\\"color:rgb(0,0,0);\\\"><span style=\\\"font-size:1.3em;font-weight:bold;\\\">{{t_task.value}}</span>/{{t_task.needed_value}}</span>\\n                          </div>\\n\\n                          <div style=\\\"clear:both;\\\"></div>\\n                      </div>\\n                    </div>\\n\\n              </div>\\n\\n          </div>\\n\\n      </div>\\n\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], UserprogressComponent);\n    return UserprogressComponent;\n}());\nexports.UserprogressComponent = UserprogressComponent;\n//# sourceMappingURL=userprogress.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/userprogress.component.js\n ** module id = 85\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar router_1 = require('@angular/router');\nvar libgame_service_1 = require('./../services/libgame.service');\nvar UsersettingsComponent = (function () {\n    function UsersettingsComponent(router, lService) {\n        this.router = router;\n        this.lService = lService;\n        this.specificcontent = {};\n        this.loading_specificcontent = true;\n        this.error_setting_new_password = false;\n        this.show_update_password_button = true;\n    }\n    UsersettingsComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        //Specific Content\n        this.loading_specificcontent = true;\n        this.lService.specificcontent$.subscribe(function (specificcontent) {\n            _this.specificcontent = specificcontent;\n            _this.loading_specificcontent = false;\n        });\n        this.lService.loadSpecificContent('usersettings');\n        $(document).ready(function () {\n            $('#settings_new_password').keyup(function () {\n                var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n                if ($(this).val().match(pattern) != null) {\n                    $(this).css(\"background\", \"rgb(120,255,120)\");\n                }\n                else {\n                    $(this).css(\"background\", \"rgb(255,120,120)\");\n                }\n            });\n            $('#settings_new_password_repeat').keyup(function () {\n                if ($(this).val() == $('#settings_new_password').val()) {\n                    $(this).css(\"background\", \"rgb(120,255,120)\");\n                }\n                else {\n                    $(this).css(\"background\", \"rgb(255,120,120)\");\n                }\n            });\n        });\n    };\n    UsersettingsComponent.prototype.setNewPassword = function () {\n        var _this = this;\n        var pattern = /[A-Za-z0-9!?.:;-]{6,}/g;\n        if ($('#settings_new_password').val().match(pattern) == null) {\n            window.alert(\"Das Passwort entspricht nicht unseren Passwort Richtlinien!\");\n            return;\n        }\n        if ($('#settings_new_password').val() != $('#settings_new_password_repeat').val()) {\n            window.alert(\"Das Passwort und dessen wiederholte Eingabe müssen übereinstimmen!\");\n            return;\n        }\n        this.show_update_password_button = false;\n        this.lService.updatePassword($('#settings_old_password').val(), $('#settings_new_password').val()).subscribe(function (data) {\n            _this.show_update_password_button = true;\n            if (typeof data.data === 'undefined' || data.data != true) {\n                _this.error_setting_new_password = true;\n                window.alert(\"Beim Setzen des neuen Passworts ist ein Fehler aufgetreten.\");\n            }\n            else {\n                $('#settings_old_password').val('');\n                $('#settings_new_password').val('');\n                $('#settings_new_password_repeat').val('');\n                window.alert(\"Ihr Passwort wurde neu gesetzt!\");\n            }\n        }, function (error) {\n            _this.show_update_password_button = true;\n            _this.error_setting_new_password = true;\n            window.alert(\"Beim Setzen des neuen Passworts ist ein Fehler aufgetreten.\");\n            console.error('Could not set new password.');\n        });\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], UsersettingsComponent.prototype, \"user\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], UsersettingsComponent.prototype, \"universalcontent\", void 0);\n    UsersettingsComponent = __decorate([\n        core_1.Component({\n            selector: 'usersettings-component',\n            providers: [libgame_service_1.LibgameService],\n            template: \"\\n\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-xs-12\\\" style=\\\"padding:0;\\\">\\n\\n          <div id=\\\"cf-se-overview\\\" class=\\\"content-frame\\\">\\n\\n              <p class=\\\"headline\\\">Neues Passwort</p>\\n\\n              <div style=\\\"width:70%;margin-left:auto;margin-right:auto;\\\">\\n                  <input type=\\\"password\\\" placeholder=\\\"Altes Passwort\\\" id=\\\"settings_old_password\\\" style=\\\"width:100%;margin-top:0.3em;margin-bottom:0.3em;\\\">\\n                  <br>\\n                  <input type=\\\"password\\\" placeholder=\\\"Neues Passwort (Min. 6 Zeichen)\\\" id=\\\"settings_new_password\\\" style=\\\"width:100%;margin-top:0.3em;margin-bottom:0.3em;\\\">\\n                  <br>\\n                  <input type=\\\"password\\\" placeholder=\\\"Wiederhole das neue Passwort\\\" id=\\\"settings_new_password_repeat\\\" style=\\\"width:100%;margin-top:0.3em;margin-bottom:0.3em;\\\">\\n                  <br>\\n                  <button (click)=\\\"setNewPassword()\\\" *ngIf=\\\"show_update_password_button\\\" class=\\\"button\\\" style=\\\"margin-top:0.5em;margin-bottom:0.3em;width:100%;\\\">Neues Passwort jetzt setzen</button>\\n                  <button *ngIf=\\\"!show_update_password_button\\\" class=\\\"button\\\" style=\\\"margin-top:0.5em;margin-bottom:0.3em;width:100%;\\\"><i class=\\\"fa fa-spinner fa-pulse\\\"></i></button>\\n\\n              </div>\\n\\n\\n\\n          </div>\\n\\n\\n      </div>\\n\\n\\n\\n  </div>\\n\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, libgame_service_1.LibgameService])\n    ], UsersettingsComponent);\n    return UsersettingsComponent;\n}());\nexports.UsersettingsComponent = UsersettingsComponent;\n//# sourceMappingURL=usersettings.component.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/usersettings.component.js\n ** module id = 86\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar SafeHtmlPipe = (function () {\n    function SafeHtmlPipe(sanitized) {\n        this.sanitized = sanitized;\n    }\n    SafeHtmlPipe.prototype.transform = function (value) {\n        console.log(this.sanitized.bypassSecurityTrustHtml(value));\n        return this.sanitized.bypassSecurityTrustHtml(value);\n    };\n    SafeHtmlPipe = __decorate([\n        core_1.Pipe({ name: 'safeHtml' }), \n        __metadata('design:paramtypes', [platform_browser_1.DomSanitizer])\n    ], SafeHtmlPipe);\n    return SafeHtmlPipe;\n}());\nexports.SafeHtmlPipe = SafeHtmlPipe;\n//# sourceMappingURL=safehtml.pipe.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/pipes/safehtml.pipe.js\n ** module id = 87\n ** module chunks = 0\n **/"],"sourceRoot":""}